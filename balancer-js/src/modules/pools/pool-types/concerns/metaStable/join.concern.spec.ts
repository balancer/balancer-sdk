import { expect } from 'chai';
import { Network, Pool } from '@/.';
import { parseFixed } from '@ethersproject/bignumber';
import { MetaStablePoolJoin } from './join.concern';

import { ADDRESSES } from '@/test/lib/constants';
import pools_14717479 from '@/test/lib/pools_14717479.json';

const stETH_stable_pool_id =
  '0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080'; // Balancer stETH Stable Pool

const wrappedNativeAsset = ADDRESSES[Network.MAINNET].WETH.address;

const pool = pools_14717479.find(
  (pool) => pool.id == stETH_stable_pool_id
) as unknown as Pool;

const concern = new MetaStablePoolJoin();

describe('joining metaStable pool', () => {
  describe('.buildJoin', async () => {
    it('should return encoded params', async () => {
      const joiner = '0x35f5a330fd2f8e521ebd259fa272ba8069590741';
      const tokensIn = [
        ADDRESSES[Network.MAINNET].wSTETH.address,
        ADDRESSES[Network.MAINNET].WETH.address,
      ];
      const amountsIn = [
        parseFixed('1', 18).toString(),
        parseFixed('1', 18).toString(),
      ];
      const slippage = '100';
      const { data } = concern.buildJoin({
        joiner,
        pool,
        tokensIn,
        amountsIn,
        slippage,
        wrappedNativeAsset,
      });
      expect(data).to.equal(
        '0xb95cac2832296969ef14eb0c6d29669c550d4a044913023000020000000000000000008000000000000000000000000035f5a330fd2f8e521ebd259fa272ba806959074100000000000000000000000035f5a330fd2f8e521ebd259fa272ba80695907410000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000007f39c581f595b53c5cb19bd0b3f8da6c935e2ca0000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000001bf892f9e875996800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000de0b6b3a7640000'
      );
    });
  });
});
