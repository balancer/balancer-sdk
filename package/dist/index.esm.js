import{defaultAbiCoder as e,Interface as t}from"@ethersproject/abi";import{WeiPerEther as a,Zero as n,AddressZero as o,MaxUint256 as i,MaxInt256 as s,HashZero as r}from"@ethersproject/constants";import{BigNumber as p,parseFixed as d,formatFixed as l}from"@ethersproject/bignumber";import{getAddress as u}from"@ethersproject/address";import{hexZeroPad as c,hexValue as y,splitSignature as b,arrayify as m,hexlify as f,concat as T,zeroPad as h}from"@ethersproject/bytes";import{Signer as I}from"@ethersproject/abstract-signer";import{mergeWith as _,set as g,parseInt as P,keyBy as w,sum as x,pickBy as E,zipObject as A,identity as v,cloneDeep as S}from"lodash";import{utils as k,Contract as O}from"ethers";import*as M from"@balancer-labs/sor";import{StablePool as C,ZERO as F,PhantomStablePool as B,StableMathBigInt as R,WeightedMaths as N,WeightedPool as L,MetaStablePool as D,LinearPool as U,SwapTypes as V,SOR as q,parseToPoolsDict as G,getSpotPriceAfterSwapForPath as W,bnum as $,ComposableStablePool as H}from"@balancer-labs/sor";export{PoolFilter,SOR,SwapTypes,stableBPTForTokensZeroPriceImpact,weightedBPTForTokensZeroPriceImpact}from"@balancer-labs/sor";import{JsonRpcProvider as K}from"@ethersproject/providers";import{GraphQLClient as J,gql as X,request as Y}from"graphql-request";import{parse as j}from"graphql";import z from"axios";import{Contract as Z}from"@ethersproject/contracts";import{jsonToGraphQLQuery as Q}from"json-to-graphql-query";var ee,te,ae,ne,oe,ie;!function(e){e[e.RECOVERY_MODE=255]="RECOVERY_MODE"}(ee||(ee={}));class se{}se.recoveryModeExit=t=>e.encode(["uint256","uint256"],[ee.RECOVERY_MODE,t]),function(e){e[e.INIT=0]="INIT",e[e.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",e[e.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT"}(te||(te={})),function(e){e[e.INIT=0]="INIT",e[e.COLLECT_PROTOCOL_FEES=1]="COLLECT_PROTOCOL_FEES"}(ae||(ae={})),function(e){e[e.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",e[e.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",e[e.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT"}(ne||(ne={}));class re{constructor(){}}re.joinInit=t=>e.encode(["uint256","uint256[]"],[te.INIT,t]),re.joinCollectProtocolFees=()=>e.encode(["uint256"],[ae.COLLECT_PROTOCOL_FEES]),re.joinExactTokensInForBPTOut=(t,a)=>e.encode(["uint256","uint256[]","uint256"],[te.EXACT_TOKENS_IN_FOR_BPT_OUT,t,a]),re.joinTokenInForExactBPTOut=(t,a)=>e.encode(["uint256","uint256","uint256"],[te.TOKEN_IN_FOR_EXACT_BPT_OUT,t,a]),re.exitExactBPTInForOneTokenOut=(t,a)=>e.encode(["uint256","uint256","uint256"],[ne.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,a]),re.exitExactBPTInForTokensOut=t=>e.encode(["uint256","uint256"],[ne.EXACT_BPT_IN_FOR_TOKENS_OUT,t]),re.exitBPTInForExactTokensOut=(t,a)=>e.encode(["uint256","uint256[]","uint256"],[ne.BPT_IN_FOR_EXACT_TOKENS_OUT,t,a]),function(e){e[e.INIT=0]="INIT",e[e.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",e[e.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",e[e.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT=3]="ALL_TOKENS_IN_FOR_EXACT_BPT_OUT"}(oe||(oe={})),function(e){e[e.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",e[e.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",e[e.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT",e[e.MANAGEMENT_FEE_TOKENS_OUT=3]="MANAGEMENT_FEE_TOKENS_OUT"}(ie||(ie={}));class pe{constructor(){}}pe.joinInit=t=>e.encode(["uint256","uint256[]"],[oe.INIT,t]),pe.joinExactTokensInForBPTOut=(t,a)=>e.encode(["uint256","uint256[]","uint256"],[oe.EXACT_TOKENS_IN_FOR_BPT_OUT,t,a]),pe.joinTokenInForExactBPTOut=(t,a)=>e.encode(["uint256","uint256","uint256"],[oe.TOKEN_IN_FOR_EXACT_BPT_OUT,t,a]),pe.joinAllTokensInForExactBPTOut=t=>e.encode(["uint256","uint256"],[oe.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT,t]),pe.exitExactBPTInForOneTokenOut=(t,a)=>e.encode(["uint256","uint256","uint256"],[ie.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,a]),pe.exitExactBPTInForTokensOut=t=>e.encode(["uint256","uint256"],[ie.EXACT_BPT_IN_FOR_TOKENS_OUT,t]),pe.exitBPTInForExactTokensOut=(t,a)=>e.encode(["uint256","uint256[]","uint256"],[ie.BPT_IN_FOR_EXACT_TOKENS_OUT,t,a]);class de{constructor(){}}de.exitForManagementFees=()=>e.encode(["uint256"],[ie.MANAGEMENT_FEE_TOKENS_OUT]);function le(e){if(100==e.length)return Array(100).fill(a.div(100));const t=e.reduce(((e,t)=>e.add(t)),n);if(t.eq(a))return e;const o=[];let i=n;for(let n=0;n<e.length;n++)n<e.length-1?(o[n]=e[n].mul(a).div(t),i=i.add(o[n])):o[n]=a.sub(i);return o}const ue=e=>{const t=e.reduce(((e,t)=>e.add(t)),n);return t.eq(a)};var ce,ye;!function(e){e[e.INIT=0]="INIT",e[e.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",e[e.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT"}(ce||(ce={})),function(e){e[e.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",e[e.BPT_IN_FOR_EXACT_TOKENS_OUT=1]="BPT_IN_FOR_EXACT_TOKENS_OUT",e[e.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT=2]="EXACT_BPT_IN_FOR_ALL_TOKENS_OUT"}(ye||(ye={}));class be{constructor(){}}be.joinInit=t=>e.encode(["uint256","uint256[]"],[ce.INIT,t]),be.joinCollectProtocolFees=()=>e.encode(["uint256"],[ae.COLLECT_PROTOCOL_FEES]),be.joinExactTokensInForBPTOut=(t,a)=>e.encode(["uint256","uint256[]","uint256"],[ce.EXACT_TOKENS_IN_FOR_BPT_OUT,t,a]),be.joinTokenInForExactBPTOut=(t,a)=>e.encode(["uint256","uint256","uint256"],[ce.TOKEN_IN_FOR_EXACT_BPT_OUT,t,a]),be.exitExactBPTInForOneTokenOut=(t,a)=>e.encode(["uint256","uint256","uint256"],[ye.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,a]),be.exitExactBPTInForAllTokensOut=t=>e.encode(["uint256","uint256"],[ye.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT,t]),be.exitBPTInForExactTokensOut=(t,a)=>e.encode(["uint256","uint256[]","uint256"],[ye.BPT_IN_FOR_EXACT_TOKENS_OUT,t,a]);var me="production"===process.env.NODE_ENV,fe="Invariant failed";function Te(e,t){if(!e){if(me)throw new Error(fe);var a="function"==typeof t?t():t,n=a?"".concat(fe,": ").concat(a):fe;throw new Error(n)}}const he=e=>({address:Ie(e),specialization:_e(e),nonce:ge(e)}),Ie=e=>(Te(66===e.length,"Invalid poolId length"),e.slice(0,42)),_e=e=>{Te(66===e.length,"Invalid poolId length");const t=parseInt(e[45]);return Te(t<3,"Invalid pool specialization"),t},ge=e=>(Te(66===e.length,"Invalid poolId length"),p.from(`0x${e.slice(46)}`));var Pe;!function(e){e[e.MAINNET=1]="MAINNET",e[e.GOERLI=5]="GOERLI",e[e["GÖRLI"]=5]="GÖRLI",e[e.OPTIMISM=10]="OPTIMISM",e[e.GNOSIS=100]="GNOSIS",e[e.POLYGON=137]="POLYGON",e[e.FANTOM=250]="FANTOM",e[e.BASE=8453]="BASE",e[e.ZKEVM=1101]="ZKEVM",e[e.ARBITRUM=42161]="ARBITRUM",e[e.AVALANCHE=43114]="AVALANCHE",e[e.SEPOLIA=11155111]="SEPOLIA"}(Pe||(Pe={}));const we=1e4,xe=1e6,Ee={IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x9f19a375709baf0e8e35c2c5c65aca676c4c719100000000000000000000006e","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0x9be7de742865d021c0e8fb9d64311b2c040c1ec1000200000000000000000012","0x9f19a375709baf0e8e35c2c5c65aca676c4c7191000200000000000000000022","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0xf38cf113d2d4f60c36cbd95af2f48a9a0167045a00000000000000000000005b","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x386b5d43ba8b97c43d4afb4cdae7877a1b295e8a000000000000000000000020","0x5028497af0c9a54ea8c6d42a054c0341b9fc616800020000000000000000007b","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366"]},Investment:{AllowList:["0xccf5575570fac94cec733a58ff91bb3d073085c70002000000000000000000af","0xe7b1d394f3b40abeaa0b64a545dbcf89da1ecb3f00010000000000000000009a","0x3b40d7d5ae25df2561944dd68b252016c4c7b2800001000000000000000000c2"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x67d27634e44793fe63c467035e31ea8635117cd4":"stablePool","0x7dfdef5f355096603419239ce743bfaf1120312b":"weightedPool","0xcf0a32bbef8f064969f21f7e02328fb577382018":"weightedPool","0x2433477a10fc5d31b9513c638f19ee85caed53fd":"stablePool","0xebfd5681977e38af65a7487dc70b8221d089ccad":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e":"liquidityBootstrappingPool","0x142b9666a0a3a30477b052962dda81547e7029ab":"liquidityBootstrappingPool","0x1802953277fd955f9a254b80aa0582f193cf1d77":"liquidityBootstrappingPool","0x48767f9f868a4a7b86a90736632f6e44c2df7fa9":"managedPool","0x0f7bb7ce7b6ed9366f9b6b910adefe72dc538193":"managedPool","0xacd615b3705b9c880e4e7293f1030b34e57b4c1c":"managedPool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"boostedPool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"boostedPool","0xc128a9954e6c874ea3d62ce62b468ba073093f25":"boostedPool"},Stakable:{AllowList:[]},Metadata:{"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e":{name:"Balancer Stable USD",hasIcon:!0}}},Ae={[Pe.GOERLI]:{IdsMap:{staBAL:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062",bbAaveUSD:{v1:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",v2:"0x3d5981bdd8d3e49eb7bbdc1d2b156a3ee019c18e0000000000000000000001a7"},veBAL:"0xf8a0623ab66f985effc1c69d05f1af4badb01b00000200000000000000000060"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:["0x22d398c68030ef6b1c55321cca6e0cecc5c93b2f000200000000000000000678"],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f","0xb60e46d90f2de35f7062a27d3a98749414036d5d000200000000000000000061","0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062","0xc957b1acceb21707b782eb8eee2ed8e20088463d000200000000000000000076","0x3d5981bdd8d3e49eb7bbdc1d2b156a3ee019c18e0000000000000000000001a7","0x14f93df8a4e37bfdb49d2cec4789df7a010603d700000000000000000000011d","0x00a62d31b6c776b6813543bc99ff265f7222dbe100000000000000000000011e","0x0c925fce89a22e36ebd9b3c6e0262234e853d2f600000000000000000000019c"]},Investment:{AllowList:[]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0x44afeb87c871d8fea9398a026dea2bd3a13f5769":"stablePool","0xa55f73e2281c60206ba43a3590db07b8955832be":"stablePool","0xb48cc42c45d262534e46d5965a9ac496f1b7a830":"liquidityBootstrappingPool","0xb0c726778c3ae4b3454d85557a48e8fa502bdd6a":"liquidityBootstrappingPool","0x41e9036ae350baedcc7107760a020dca3c0731ec":"boostedPool","0xb848f50141f3d4255b37ac288c25c109104f2158":"composableStablePool","0x94f68b54191f62f781fe8298a8a5fa3ed772d227":"weightedPool"},Stakable:{AllowList:["0x16faf9f73748013155b7bc116a3008b57332d1e600020000000000000000005b","0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f","0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062","0x67f8fcb9d3c463da05de1392efdbb2a87f8599ea000200000000000000000059"]},Metadata:{"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f":{name:"Balancer Boosted Aave USD",hasIcon:!1}}},[Pe.MAINNET]:{IdsMap:{staBAL:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063",bbAaveUSD:{v1:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe",v2:"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d"},veBAL:"0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","Gyro2","Gyro3","GyroE","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x9f19a375709baf0e8e35c2c5c65aca676c4c719100000000000000000000006e","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x851523a36690bf267bbfec389c823072d82921a90002000000000000000001ed","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249","0x2d011adf89f0576c9b722c28269fcb5d50c2d17900020000000000000000024d","0x178e029173417b1f9c8bc16dcec6f697bc32374600000000000000000000025d","0xf93579002dbe8046c43fefe86ec78b1112247bb80000000000000000000002bc","0xf3aeb3abba741f0eece8a1b1d2f11b85899951cb000200000000000000000351","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d","0x5b3240b6be3e7487d61cd1afdfc7fe4fa1d81e6400000000000000000000037b"]},Investment:{AllowList:["0xccf5575570fac94cec733a58ff91bb3d073085c70002000000000000000000af","0xe7b1d394f3b40abeaa0b64a545dbcf89da1ecb3f00010000000000000000009a","0x3b40d7d5ae25df2561944dd68b252016c4c7b2800001000000000000000000c2"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x67d27634e44793fe63c467035e31ea8635117cd4":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e":"liquidityBootstrappingPool","0x48767f9f868a4a7b86a90736632f6e44c2df7fa9":"managedPool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"boostedPool","0x8df6efec5547e31b0eb7d1291b511ff8a2bf987c":"stablePool","0xf9ac7b9df2b3454e841110cce5550bd5ac6f875f":"composableStablePool","0xcc508a455f5b0073973107db6a878ddbdab957bc":"weightedPool"},Stakable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0x072f14b85add63488ddad88f855fda4a99d6ac9b000200000000000000000027","0x0b09dea16768f0799065c475be02919503cb2a3500020000000000000000001a","0x186084ff790c65088ba694df11758fae4943ee9e000200000000000000000013","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x27c9f71cc31464b906e0006d4fcbc8900f48f15f00020000000000000000010f","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x350196326aeaa9b98f1903fb5e8fc2686f85318c000200000000000000000084","0x3e5fa9518ea95c3e533eb377c001702a9aacaa32000200000000000000000052","0x51735bdfbfe3fc13dea8dc6502e2e958989429610002000000000000000000a0","0x5d66fff62c17d841935b60df5f07f6cf79bd0f4700020000000000000000014c","0x5f7fa48d765053f8dd85e052843e12d23e3d7bc50002000000000000000000c0","0x702605f43471183158938c1a3e5f5a359d7b31ba00020000000000000000009f","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x7edde0cb05ed19e03a9a47cd5e53fc57fde1c80c0002000000000000000000c8","0x8f4205e1604133d1875a3e771ae7e4f2b086563900020000000000000000010e","0x90291319f1d4ea3ad4db0dd8fe9e12baf749e84500020000000000000000013c","0x96646936b91d6b9d7d0c47c496afbf3d6ec7b6f8000200000000000000000019","0x96ba9025311e2f47b840a1f68ed57a3df1ea8747000200000000000000000160","0xa02e4b3d18d4e6b8d18ac421fbc3dfff8933c40a00020000000000000000004b","0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e","0xbaeec99c90e3420ec6c1e7a769d2a856d2898e4d00020000000000000000008a","0xbf96189eee9357a95c7719f4f5047f76bde804e5000200000000000000000087","0xe2469f47ab58cf9cf59f9822e3c5de4950a41c49000200000000000000000089","0xe99481dc77691d8e2456e5f3f61c1810adfc1503000200000000000000000018","0xec60a5fef79a92c741cb74fdd6bfc340c0279b01000200000000000000000015","0xedf085f65b4f6c155e13155502ef925c9a756003000200000000000000000123","0xefaa1604e82e1b3af8430b90192c1b9e8197e377000200000000000000000021","0xf4c0dd9b82da36c07605df83c8a416f11724d88b000200000000000000000026","0xf5aaf7ee8c39b651cebf5f1f50c10631e78e0ef9000200000000000000000069","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x92762b42a06dcdddc5b7362cfb01e631c4d44b40000200000000000000000182","0xde8c195aa41c11a0c4787372defbbddaa31306d2000200000000000000000181","0x17ddd9646a69c9445cd8a9f921d4cd93bf50d108000200000000000000000159","0xc45d42f801105e861e86658648e3678ad7aa70f900010000000000000000011e","0x2d344a84bac123660b021eebe4eb6f12ba25fe8600020000000000000000018a","0xb460daa847c45f1c4a41cb05bfb3b51c92e41b36000200000000000000000194","0x5122e01d819e58bb2e22528c0d68d310f0aa6fd7000200000000000000000163","0x851523a36690bf267bbfec389c823072d82921a90002000000000000000001ed","0xe8cc7e765647625b95f59c15848379d10b9ab4af0002000000000000000001de","0x85370d9e3bb111391cc89f6de344e801760461830002000000000000000001ef","0xa7ff759dbef9f3efdd1d59beee44b966acafe214000200000000000000000180","0x3f7c10701b14197e2695dec6428a2ca4cf7fc3b800020000000000000000023c","0x2d011adf89f0576c9b722c28269fcb5d50c2d17900020000000000000000024d","0x178e029173417b1f9c8bc16dcec6f697bc32374600000000000000000000025d","0xcfca23ca9ca720b6e98e3eb9b6aa0ffc4a5c08b9000200000000000000000274","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249","0x0578292cb20a443ba1cde459c985ce14ca2bdee5000100000000000000000269","0x8eb6c82c3081bbbd45dcac5afa631aac53478b7c000100000000000000000270","0x1b65fe4881800b91d4277ba738b567cbb200a60d0002000000000000000002cc","0x99a14324cfd525a34bbc93ac7e348929909d57fd00020000000000000000030e","0x9b532ab955417afd0d012eb9f7389457cd0ea712000000000000000000000338","0x48607651416a943bf5ac71c41be1420538e78f87000200000000000000000327","0x6a5ead5433a50472642cd268e584dafa5a394490000200000000000000000366","0x0fd5663d4893ae0d579d580584806aadd2dd0b8b000200000000000000000367","0x441b8a1980f2f2e43a9397099d15cc2fe6d3625000020000000000000000035f","0xf3aeb3abba741f0eece8a1b1d2f11b85899951cb000200000000000000000351","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d"]},Metadata:{"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063":{name:"Balancer Stable USD",hasIcon:!0},"0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249":{name:"AuraBAL Stable Pool",hasIcon:!1}}},[Pe.POLYGON]:{IdsMap:{xMatic:{v1:"0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4",v2:"0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c"},stMatic:{v1:"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366",v2:"0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d"},mai4:{mai4:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012",maiBbaUsd:"0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e"}},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","Gyro2","Gyro3","GyroE","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0xf38cf113d2d4f60c36cbd95af2f48a9a0167045a00000000000000000000005b","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x5028497af0c9a54ea8c6d42a054c0341b9fc616800020000000000000000007b","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0xb4670d1389c758e4380c4211bcbc85342688b9c50002000000000000000003d8","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455","0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4","0xb4b22bd6cdad0ab828be6f8a4086dfa54e9b373600020000000000000000058f","0xb797adfb7b268faeaa90cadbfed464c76ee599cd0002000000000000000005ba","0x0b8319061732b34cab22445fa83b81f950e4b7ed000000000000000000000709","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d","0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0xa48d164f6eb0edc68bd03b56fa59e12f24499ad10000000000000000000007c4"]},Investment:{AllowList:[""]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x41b953164995c11c81da73d212ed8af25741b7ac":"liquidityBootstrappingPool","0x0f7bb7ce7b6ed9366f9b6b910adefe72dc538193":"managedPool","0xc128a9954e6c874ea3d62ce62b468ba073093f25":"boostedPool","0xca96c4f198d343e251b1a01f3eba061ef3da73c1":"stablePool","0x136fd06fa01ecf624c7f2b3cb15742c1339dc2c4":"composableStablePool","0x0e39c3d9b2ec765efd9c5c70bb290b1fcd8536e3":"weightedPool"},Stakable:{AllowList:["0x0297e37f1873d2dab4487aa67cd56b58e2f27875000100000000000000000002","0x03cd191f589d12b0582a99808cf19851e468e6b500010000000000000000000a","0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x10f21c9bd8128a29aa785ab2de0d044dcdd79436000200000000000000000059","0x186084ff790c65088ba694df11758fae4943ee9e000200000000000000000032","0x36128d5436d2d70cab39c9af9cce146c38554ff0000100000000000000000008","0x5a6ae1fd70d04ba4a279fc219dfabc53825cb01d00020000000000000000020e","0x614b5038611729ed49e0ded154d8a5d3af9d1d9e00010000000000000000001d","0x7c9cf12d783821d5c63d8e9427af5c44bad92445000100000000000000000051","0x805ca3ccc61cc231851dee2da6aabff0a7714aa7000200000000000000000361","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0xb204bf10bc3a5435017d3db247f56da601dfe08a0002000000000000000000fe","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455","0xce66904b68f1f070332cbc631de7ee98b650b499000100000000000000000009","0xcf354603a9aebd2ff9f33e1b04246d8ea204ae9500020000000000000000005a","0xdb1db6e248d7bb4175f6e5a382d0a03fe3dcc813000100000000000000000035","0xea4e073c8ac859f2994c07e627178719c8002dc00002000000000000000003dc","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4","0x2dbc9ab0160087ae59474fb7bed95b9e808fa6bc0001000000000000000003db","0xb797adfb7b268faeaa90cadbfed464c76ee599cd0002000000000000000005ba","0x8f9dd2064eb38e8e40f2ab67bde27c0e16ea9b080002000000000000000004ca","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d","0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c"]},Metadata:{}},[Pe.ARBITRUM]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x9be7de742865d021c0e8fb9d64311b2c040c1ec1000200000000000000000012","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0x386b5d43ba8b97c43d4afb4cdae7877a1b295e8a000000000000000000000020","0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d","0x5a5884fc31948d59df2aeccca143de900d49e1a300000000000000000000006f","0xd89746affa5483627a87e55713ec1905114394950002000000000000000000bf","0x7bceaa9c5e7f4836fec3bce2d5346637c9b13970000000000000000000000102","0xfb5e6d0c1dfed2ba000fbc040ab8df3615ac329c000000000000000000000159"]},Investment:{AllowList:[""]},Factories:{"0x7dfdef5f355096603419239ce743bfaf1120312b":"weightedPool","0xcf0a32bbef8f064969f21f7e02328fb577382018":"weightedPool","0x2433477a10fc5d31b9513c638f19ee85caed53fd":"stablePool","0xebfd5681977e38af65a7487dc70b8221d089ccad":"stablePool","0x142b9666a0a3a30477b052962dda81547e7029ab":"liquidityBootstrappingPool","0x1802953277fd955f9a254b80aa0582f193cf1d77":"liquidityBootstrappingPool","0xacd615b3705b9c880e4e7293f1030b34e57b4c1c":"managedPool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"boostedPool","0xef44d6786b2b4d544b7850fe67ce6381626bf2d6":"stablePool","0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33":"composableStablePool","0x8df6efec5547e31b0eb7d1291b511ff8a2bf987c":"weightedPool"},Stakable:{AllowList:["0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d","0x0adeb25cb5920d4f7447af4a0428072edc2cee2200020000000000000000004a","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0x1779900c7707885720d39aa741f4086886307e9e00020000000000000000004b","0x4a3a22a3e7fee0ffbb66f1c28bfac50f75546fc7000200000000000000000008","0x5a5884fc31948d59df2aeccca143de900d49e1a300000000000000000000006f","0x64541216bafffeec8ea535bb71fbc927831d0595000100000000000000000002","0x651e00ffd5ecfa7f3d4f33d62ede0a97cf62ede2000200000000000000000006","0xb28670b3e7ad27bd41fb5938136bf9e9cba90d6500020000000000000000001e","0xb340b6b1a34019853cb05b2de6ee8ffd0b89a008000100000000000000000036","0xb5b77f1ad2b520df01612399258e7787af63025d000200000000000000000010","0xc2f082d33b5b8ef3a7e3de30da54efd3114512ac000200000000000000000017","0xc61ff48f94d801c1ceface0289085197b5ec44f000020000000000000000004d","0xcc65a812ce382ab909a11e434dbf75b34f1cc59d000200000000000000000001","0xe1b40094f1446722c424c598ac412d590e0b3ffb000200000000000000000076","0xb3028ca124b80cfe6e9ca57b70ef2f0ccc41ebd40002000000000000000000ba","0x7bceaa9c5e7f4836fec3bce2d5346637c9b13970000000000000000000000102","0xfb5e6d0c1dfed2ba000fbc040ab8df3615ac329c000000000000000000000159","0x178e029173417b1f9c8bc16dcec6f697bc323746000200000000000000000158"]},Metadata:{}},[Pe.GNOSIS]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX","Gyro2","Gyro3","GyroE","HighAmpComposableStable","FX"],Stable:{AllowList:["0x11884da90fb4221b3aa288a7741c51ec4fc43b2f000000000000000000000004","0x707b7d4a1bae449d546dcab869256591bbb3d70b000000000000000000000000"]},Investment:{AllowList:[]},Factories:{},Stakable:{AllowList:[]},Metadata:{}}};function ve(e){return Ae[e]?Ae[e]:Ee}var Se,ke,Oe,Me,Ce,Fe,Be;!function(e){e.Id="id",e.Address="address",e.PoolId="poolId"}(Se||(Se={})),function(e){e.Balance="balance",e.Id="id",e.PoolId="poolId",e.UserAddress="userAddress"}(ke||(ke={})),function(e){e.Id="id",e.UserAddress="user",e.GaugeId="gauge",e.Balance="balance"}(Oe||(Oe={})),function(e){e[e.GeneralPool=0]="GeneralPool",e[e.MinimalSwapInfoPool=1]="MinimalSwapInfoPool",e[e.TwoTokenPool=2]="TwoTokenPool"}(Me||(Me={})),function(e){e[e.DepositInternal=0]="DepositInternal",e[e.WithdrawInternal=1]="WithdrawInternal",e[e.TransferInternal=2]="TransferInternal",e[e.TransferExternal=3]="TransferExternal"}(Ce||(Ce={})),function(e){e[e.Withdraw=0]="Withdraw",e[e.Deposit=1]="Deposit",e[e.Update=2]="Update"}(Fe||(Fe={})),function(e){e.Weighted="Weighted",e.Investment="Investment",e.Stable="Stable",e.ComposableStable="ComposableStable",e.MetaStable="MetaStable",e.StablePhantom="StablePhantom",e.LiquidityBootstrapping="LiquidityBootstrapping",e.Element="Element",e.Gyro2="Gyro2",e.Gyro3="Gyro3",e.GyroE="GyroE",e.Managed="Managed",e.AaveLinear="AaveLinear",e.Linear="Linear",e.EulerLinear="EulerLinear",e.ERC4626Linear="ERC4626Linear",e.BeefyLinear="BeefyLinear",e.GearboxLinear="GearboxLinear",e.MidasLinear="MidasLinear",e.ReaperLinear="ReaperLinear",e.SiloLinear="SiloLinear",e.TetuLinear="TetuLinear",e.YearnLinear="YearnLinear",e.FX="FX"}(Be||(Be={}));class Re{constructor(){this.enableLogging=!0}static getInstance(){return Re.instance||(Re.instance=new Re),Re.instance}setLoggingEnabled(e){this.enableLogging=e}info(e){this.enableLogging}warn(e){this.enableLogging&&console.warn(`[WARN] ${e}`)}error(e){this.enableLogging&&console.error(`[ERROR] ${e}`)}time(e){this.enableLogging}timeEnd(e){this.enableLogging}}const Ne=e=>e[0].map(((t,a)=>e.map((e=>e[a]))));class Le{constructor(e){this.ETH=o,this.isETH=e=>Le.isEqual(e,this.ETH),this.isWETH=e=>Le.isEqual(e,this.WETH),this.translateToERC20=e=>this.isETH(e)?this.WETH:e,this.WETH=u(e)}sortTokens(e,...t){t.forEach((t=>Te(e.length===t.length,"array length mismatch")));const a=e.map(this.translateToERC20),n=Ne([a,...t]).sort((([e],[t])=>((e,t)=>e.toLowerCase()>t.toLowerCase()?1:-1)(e,t))),[o,...i]=Ne(n);return[e.includes(this.ETH)?o.map((e=>this.isWETH(e)?this.ETH:e)):o,...i]}}Le.isEqual=(e,t)=>u(e)===u(t);const De={"000":"ADD_OVERFLOW","001":"SUB_OVERFLOW","002":"SUB_UNDERFLOW","003":"MUL_OVERFLOW","004":"ZERO_DIVISION","005":"DIV_INTERNAL","006":"X_OUT_OF_BOUNDS","007":"Y_OUT_OF_BOUNDS","008":"PRODUCT_OUT_OF_BOUNDS","009":"INVALID_EXPONENT",100:"OUT_OF_BOUNDS",101:"UNSORTED_ARRAY",102:"UNSORTED_TOKENS",103:"INPUT_LENGTH_MISMATCH",104:"ZERO_TOKEN",200:"MIN_TOKENS",201:"MAX_TOKENS",202:"MAX_SWAP_FEE_PERCENTAGE",203:"MIN_SWAP_FEE_PERCENTAGE",204:"MINIMUM_BPT",205:"CALLER_NOT_VAULT",206:"UNINITIALIZED",207:"BPT_IN_MAX_AMOUNT",208:"BPT_OUT_MIN_AMOUNT",209:"EXPIRED_PERMIT",210:"NOT_TWO_TOKENS",211:"DISABLED",300:"MIN_AMP",301:"MAX_AMP",302:"MIN_WEIGHT",303:"MAX_STABLE_TOKENS",304:"MAX_IN_RATIO",305:"MAX_OUT_RATIO",306:"MIN_BPT_IN_FOR_TOKEN_OUT",307:"MAX_OUT_BPT_FOR_TOKEN_IN",308:"NORMALIZED_WEIGHT_INVARIANT",309:"INVALID_TOKEN",310:"UNHANDLED_JOIN_KIND",311:"ZERO_INVARIANT",312:"ORACLE_INVALID_SECONDS_QUERY",313:"ORACLE_NOT_INITIALIZED",314:"ORACLE_QUERY_TOO_OLD",315:"ORACLE_INVALID_INDEX",316:"ORACLE_BAD_SECS",317:"AMP_END_TIME_TOO_CLOSE",318:"AMP_ONGOING_UPDATE",319:"AMP_RATE_TOO_HIGH",320:"AMP_NO_ONGOING_UPDATE",321:"STABLE_INVARIANT_DIDNT_CONVERGE",322:"STABLE_GET_BALANCE_DIDNT_CONVERGE",323:"RELAYER_NOT_CONTRACT",324:"BASE_POOL_RELAYER_NOT_CALLED",325:"REBALANCING_RELAYER_REENTERED",326:"GRADUAL_UPDATE_TIME_TRAVEL",327:"SWAPS_DISABLED",328:"CALLER_IS_NOT_LBP_OWNER",329:"PRICE_RATE_OVERFLOW",330:"INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED",331:"WEIGHT_CHANGE_TOO_FAST",332:"LOWER_GREATER_THAN_UPPER_TARGET",333:"UPPER_TARGET_TOO_HIGH",334:"UNHANDLED_BY_LINEAR_POOL",335:"OUT_OF_TARGET_RANGE",336:"UNHANDLED_EXIT_KIND ",337:"UNAUTHORIZED_EXIT",338:"MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE",339:"UNHANDLED_BY_MANAGED_POOL",340:"UNHANDLED_BY_PHANTOM_POOL",341:"TOKEN_DOES_NOT_HAVE_RATE_PROVIDER",342:"INVALID_INITIALIZATION",343:"OUT_OF_NEW_TARGET_RANGE",344:"UNAUTHORIZED_OPERATION",345:"UNINITIALIZED_POOL_CONTROLLER",400:"REENTRANCY",401:"SENDER_NOT_ALLOWED",402:"PAUSED",403:"PAUSE_WINDOW_EXPIRED",404:"MAX_PAUSE_WINDOW_DURATION",405:"MAX_BUFFER_PERIOD_DURATION",406:"INSUFFICIENT_BALANCE",407:"INSUFFICIENT_ALLOWANCE",408:"ERC20_TRANSFER_FROM_ZERO_ADDRESS",409:"ERC20_TRANSFER_TO_ZERO_ADDRESS",410:"ERC20_MINT_TO_ZERO_ADDRESS",411:"ERC20_BURN_FROM_ZERO_ADDRESS",412:"ERC20_APPROVE_FROM_ZERO_ADDRESS",413:"ERC20_APPROVE_TO_ZERO_ADDRESS",414:"ERC20_TRANSFER_EXCEEDS_ALLOWANCE",415:"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO",416:"ERC20_TRANSFER_EXCEEDS_BALANCE",417:"ERC20_BURN_EXCEEDS_ALLOWANCE",418:"SAFE_ERC20_CALL_FAILED",419:"ADDRESS_INSUFFICIENT_BALANCE",420:"ADDRESS_CANNOT_SEND_VALUE",421:"SAFE_CAST_VALUE_CANT_FIT_INT256",422:"GRANT_SENDER_NOT_ADMIN",423:"REVOKE_SENDER_NOT_ADMIN",424:"RENOUNCE_SENDER_NOT_ALLOWED",425:"BUFFER_PERIOD_EXPIRED",426:"CALLER_IS_NOT_OWNER",427:"NEW_OWNER_IS_ZERO",428:"CODE_DEPLOYMENT_FAILED",429:"CALL_TO_NON_CONTRACT",430:"LOW_LEVEL_CALL_FAILED",431:"NOT_PAUSED",432:"ADDRESS_ALREADY_ALLOWLISTED",433:"ADDRESS_NOT_ALLOWLISTED",434:"ERC20_BURN_EXCEEDS_BALANCE",500:"INVALID_POOL_ID",501:"CALLER_NOT_POOL",502:"SENDER_NOT_ASSET_MANAGER",503:"USER_DOESNT_ALLOW_RELAYER",504:"INVALID_SIGNATURE",505:"EXIT_BELOW_MIN",506:"JOIN_ABOVE_MAX",507:"SWAP_LIMIT",508:"SWAP_DEADLINE",509:"CANNOT_SWAP_SAME_TOKEN",510:"UNKNOWN_AMOUNT_IN_FIRST_SWAP",511:"MALCONSTRUCTED_MULTIHOP_SWAP",512:"INTERNAL_BALANCE_OVERFLOW",513:"INSUFFICIENT_INTERNAL_BALANCE",514:"INVALID_ETH_INTERNAL_BALANCE",515:"INVALID_POST_LOAN_BALANCE",516:"INSUFFICIENT_ETH",517:"UNALLOCATED_ETH",518:"ETH_TRANSFER",519:"CANNOT_USE_ETH_SENTINEL",520:"TOKENS_MISMATCH",521:"TOKEN_NOT_REGISTERED",522:"TOKEN_ALREADY_REGISTERED",523:"TOKENS_ALREADY_SET",524:"TOKENS_LENGTH_MUST_BE_2",525:"NONZERO_TOKEN_BALANCE",526:"BALANCE_TOTAL_OVERFLOW",527:"POOL_NO_TOKENS",528:"INSUFFICIENT_FLASH_LOAN_BALANCE",600:"SWAP_FEE_PERCENTAGE_TOO_HIGH",601:"FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH",602:"INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT"};class Ue{constructor(){}}async function Ve(e){if("string"==typeof e)return e;if(I.isSigner(e))return e.getAddress();if(e.address)return e.address;throw new Error("Could not read account address")}var qe;Ue.isErrorCode=e=>{if(!e.includes("BAL#"))return!1;const t=e.replace("BAL#","");return Object.keys(De).includes(t)},Ue.parseErrorCode=e=>{if(!e.includes("BAL#"))throw new Error("Error code not found");const t=e.replace("BAL#",""),a=De[t];if(!a)throw new Error("Error code not found");return a},Ue.tryParseErrorCode=e=>{try{return Ue.parseErrorCode(e)}catch{return e}},Ue.isBalancerError=e=>Object.values(De).includes(e),Ue.encodeError=e=>{const t=Object.entries(De).find((([,t])=>t===e));if(!t)throw Error("Error message not found");return`BAL#${t[0]}`},function(e){e.JoinPool="JoinPool",e.ExitPool="ExitPool",e.Swap="Swap",e.BatchSwap="BatchSwap",e.SetRelayerApproval="SetRelayerApproval"}(qe||(qe={}));class Ge{constructor(){}}Ge.encodeCalldataAuthorization=(e,t,a)=>{const n=c(y(t),32).slice(2),{v:o,r:i,s:s}=b(a);return`${e}${n}${c(y(o),32).slice(2)}${i.slice(2)}${s.slice(2)}`},Ge.signJoinAuthorization=(e,t,a,n,o,i)=>Ge.signAuthorizationFor(qe.JoinPool,e,t,a,n,o,i),Ge.signExitAuthorization=(e,t,a,n,o,i)=>Ge.signAuthorizationFor(qe.ExitPool,e,t,a,n,o,i),Ge.signSwapAuthorization=(e,t,a,n,o,i)=>Ge.signAuthorizationFor(qe.Swap,e,t,a,n,o,i),Ge.signBatchSwapAuthorization=(e,t,a,n,o,i)=>Ge.signAuthorizationFor(qe.BatchSwap,e,t,a,n,o,i),Ge.signSetRelayerApprovalAuthorization=(e,t,a,n,o,i)=>Ge.signAuthorizationFor(qe.SetRelayerApproval,e,t,a,n,o,i),Ge.signAuthorizationFor=async(e,t,a,n,o,s=i,r)=>{const{chainId:p}=await t.provider.getNetwork();if(!r){const e=await a.getAddress();r=await t.getNextNonce(e)}const d={name:"Balancer V2 Vault",version:"1",chainId:p,verifyingContract:t.address},l={[e]:[{name:"calldata",type:"bytes"},{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u={calldata:o,sender:await Ve(n),nonce:r.toString(),deadline:s.toString()};return a._signTypedData(d,l,u)};class We{constructor(){}}We.signSetMinterApproval=async(e,t,a,n,o=i,s)=>{const{chainId:r}=await e.provider.getNetwork();if(!s){const t=await n.getAddress();s=await e.getNextNonce(t)}const d={name:"Balancer Minter",version:"1",chainId:r,verifyingContract:e.address},l={minter:await Ve(t),approval:a,nonce:s.toString(),deadline:o.toString()},u=await n._signTypedData(d,{SetMinterApproval:[{name:"minter",type:"address"},{name:"approval",type:"bool"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},l);return{...b(u),deadline:p.from(o)}};const $e=async(e,t,a,n,o=i,s)=>{const{chainId:r}=await e.provider.getNetwork(),d=await t.getAddress();s||(s=await e.nonces(d));const l={name:await e.name(),version:"1",chainId:r,verifyingContract:e.address},u={owner:d,spender:await Ve(a),value:n,nonce:s,deadline:o},c=await t._signTypedData(l,{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u);return{...b(c),deadline:p.from(o),nonce:p.from(s)}},He=BigInt(0),Ke=BigInt(1),Je=BigInt("1000000000000000000"),Xe=(e,t)=>{if(!e)throw new Error(t)};function Ye(e){const t=BigInt(18)-e;return Je*BigInt(10)**t}function je(e,t){return et.mulDownFixed(e,t)}function ze(e,t){const a=new Array(e.length);for(let n=0;n<e.length;++n)a[n]=et.mulDownFixed(e[n],t[n]);return a}function Ze(e,t){return et.divDownFixed(e,t)}function Qe(e,t){const a=new Array(e.length);for(let n=0;n<e.length;++n)a[n]=et.divDownFixed(e[n],t[n]);return a}class et{static add(e,t){const a=e+t;return Xe(t>=0&&a>=e||t<0&&a<e,"Errors.ADD_OVERFLOW"),a}static sub(e,t){Xe(t<=e,"Errors.SUB_OVERFLOW");return e-t}static max(e){if(0===e.length)throw new Error("Errors.EMPTY_ARRAY");return 1===e.length?e[0]:e.reduce(((e,t)=>t>e?t:e))}static min(e,t){return e<t?e:t}static mul(e,t){const a=e*t;return Xe(e==He||a/e==t,"Errors.MUL_OVERFLOW"),a}static div(e,t,a){return a?this.divUp(e,t):this.divDown(e,t)}static divDown(e,t){return Xe(t!=He,"Errors.ZERO_DIVISION"),e/t}static divUp(e,t){return Xe(t!=He,"Errors.ZERO_DIVISION"),e==He?He:Ke+(e-Ke)/t}static mulUpFixed(e,t){const a=e*t;return Xe(e==He||a/e==t,"Errors.MUL_OVERFLOW"),a==He?He:(a-Ke)/Je+Ke}static divDownFixed(e,t){if(Xe(t!=He,"Errors.ZERO_DIVISION"),e==He)return He;return e*Je/t}static divUpFixed(e,t){if(Xe(t!=He,"Errors.ZERO_DIVISION"),e==He)return He;{const a=e*Je;return Xe(a/e==Je,"Errors.DIV_INTERNAL"),(a-Ke)/t+Ke}}static powUpFixed(e,t){const a=tt.pow(e,t),n=this.add(this.mulUpFixed(a,this.MAX_POW_RELATIVE_ERROR),Ke);return this.add(a,n)}static complementFixed(e){return e<Je?Je-e:He}static mulDownFixed(e,t){const a=e*t;return Xe(e==He||a/e==t,"Errors.MUL_OVERFLOW"),a/Je}}et.MAX_POW_RELATIVE_ERROR=BigInt(1e4);class tt{static pow(e,t){if(t===He)return this.ONE_18;if(e==He)return He;Xe(e<BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819968"),"Errors.X_OUT_OF_BOUNDS");const a=e;Xe(t<this.MILD_EXPONENT_BOUND,"Errors.Y_OUT_OF_BOUNDS");const n=t;let o;if(this.LN_36_LOWER_BOUND<a&&a<this.LN_36_UPPER_BOUND){const e=this._ln_36(a);o=e/this.ONE_18*n+e%this.ONE_18*n/this.ONE_18}else o=this._ln(a)*n;return o/=this.ONE_18,Xe(this.MIN_NATURAL_EXPONENT<=o&&o<=this.MAX_NATURAL_EXPONENT,"Errors.PRODUCT_OUT_OF_BOUNDS"),this.exp(o)}static exp(e){if(Xe(e>=this.MIN_NATURAL_EXPONENT&&e<=this.MAX_NATURAL_EXPONENT,"Errors.INVALID_EXPONENT"),e<0)return this.ONE_18*this.ONE_18/this.exp(BigInt(-1)*e);let t;e>=this.x0?(e-=this.x0,t=this.a0):e>=this.x1?(e-=this.x1,t=this.a1):t=BigInt(1),e*=BigInt(100);let a=this.ONE_20;e>=this.x2&&(e-=this.x2,a=a*this.a2/this.ONE_20),e>=this.x3&&(e-=this.x3,a=a*this.a3/this.ONE_20),e>=this.x4&&(e-=this.x4,a=a*this.a4/this.ONE_20),e>=this.x5&&(e-=this.x5,a=a*this.a5/this.ONE_20),e>=this.x6&&(e-=this.x6,a=a*this.a6/this.ONE_20),e>=this.x7&&(e-=this.x7,a=a*this.a7/this.ONE_20),e>=this.x8&&(e-=this.x8,a=a*this.a8/this.ONE_20),e>=this.x9&&(e-=this.x9,a=a*this.a9/this.ONE_20);let n,o=this.ONE_20;return n=e,o+=n,n=n*e/this.ONE_20/BigInt(2),o+=n,n=n*e/this.ONE_20/BigInt(3),o+=n,n=n*e/this.ONE_20/BigInt(4),o+=n,n=n*e/this.ONE_20/BigInt(5),o+=n,n=n*e/this.ONE_20/BigInt(6),o+=n,n=n*e/this.ONE_20/BigInt(7),o+=n,n=n*e/this.ONE_20/BigInt(8),o+=n,n=n*e/this.ONE_20/BigInt(9),o+=n,n=n*e/this.ONE_20/BigInt(10),o+=n,n=n*e/this.ONE_20/BigInt(11),o+=n,n=n*e/this.ONE_20/BigInt(12),o+=n,a*o/this.ONE_20*t/BigInt(100)}static _ln_36(e){const t=((e*=this.ONE_18)-this.ONE_36)*this.ONE_36/(e+this.ONE_36),a=t*t/this.ONE_36;let n=t,o=n;return n=n*a/this.ONE_36,o+=n/BigInt(3),n=n*a/this.ONE_36,o+=n/BigInt(5),n=n*a/this.ONE_36,o+=n/BigInt(7),n=n*a/this.ONE_36,o+=n/BigInt(9),n=n*a/this.ONE_36,o+=n/BigInt(11),n=n*a/this.ONE_36,o+=n/BigInt(13),n=n*a/this.ONE_36,o+=n/BigInt(15),o*BigInt(2)}static _ln(e){if(e<this.ONE_18)return BigInt(-1)*this._ln(this.ONE_18*this.ONE_18/e);let t=He;e>=this.a0*this.ONE_18&&(e/=this.a0,t+=this.x0),e>=this.a1*this.ONE_18&&(e/=this.a1,t+=this.x1),t*=BigInt(100),(e*=BigInt(100))>=this.a2&&(e=e*this.ONE_20/this.a2,t+=this.x2),e>=this.a3&&(e=e*this.ONE_20/this.a3,t+=this.x3),e>=this.a4&&(e=e*this.ONE_20/this.a4,t+=this.x4),e>=this.a5&&(e=e*this.ONE_20/this.a5,t+=this.x5),e>=this.a6&&(e=e*this.ONE_20/this.a6,t+=this.x6),e>=this.a7&&(e=e*this.ONE_20/this.a7,t+=this.x7),e>=this.a8&&(e=e*this.ONE_20/this.a8,t+=this.x8),e>=this.a9&&(e=e*this.ONE_20/this.a9,t+=this.x9),e>=this.a10&&(e=e*this.ONE_20/this.a10,t+=this.x10),e>=this.a11&&(e=e*this.ONE_20/this.a11,t+=this.x11);const a=(e-this.ONE_20)*this.ONE_20/(e+this.ONE_20),n=a*a/this.ONE_20;let o=a,i=o;return o=o*n/this.ONE_20,i+=o/BigInt(3),o=o*n/this.ONE_20,i+=o/BigInt(5),o=o*n/this.ONE_20,i+=o/BigInt(7),o=o*n/this.ONE_20,i+=o/BigInt(9),o=o*n/this.ONE_20,i+=o/BigInt(11),i*=BigInt(2),(t+i)/BigInt(100)}}tt.ONE_18=BigInt("1000000000000000000"),tt.ONE_20=BigInt("100000000000000000000"),tt.ONE_36=BigInt("1000000000000000000000000000000000000"),tt.MAX_NATURAL_EXPONENT=BigInt("130000000000000000000"),tt.MIN_NATURAL_EXPONENT=BigInt("-41000000000000000000"),tt.LN_36_LOWER_BOUND=BigInt(tt.ONE_18)-BigInt("100000000000000000"),tt.LN_36_UPPER_BOUND=BigInt(tt.ONE_18)+BigInt("100000000000000000"),tt.MILD_EXPONENT_BOUND=BigInt(2)**BigInt(254)/tt.ONE_20,tt.x0=BigInt("128000000000000000000"),tt.a0=BigInt("38877084059945950922200000000000000000000000000000000000"),tt.x1=BigInt("64000000000000000000"),tt.a1=BigInt("6235149080811616882910000000"),tt.x2=BigInt("3200000000000000000000"),tt.a2=BigInt("7896296018268069516100000000000000"),tt.x3=BigInt("1600000000000000000000"),tt.a3=BigInt("888611052050787263676000000"),tt.x4=BigInt("800000000000000000000"),tt.a4=BigInt("298095798704172827474000"),tt.x5=BigInt("400000000000000000000"),tt.a5=BigInt("5459815003314423907810"),tt.x6=BigInt("200000000000000000000"),tt.a6=BigInt("738905609893065022723"),tt.x7=BigInt("100000000000000000000"),tt.a7=BigInt("271828182845904523536"),tt.x8=BigInt("50000000000000000000"),tt.a8=BigInt("164872127070012814685"),tt.x9=BigInt("25000000000000000000"),tt.a9=BigInt("128402541668774148407"),tt.x10=BigInt("12500000000000000000"),tt.a10=BigInt("113314845306682631683"),tt.x11=BigInt("6250000000000000000"),tt.a11=BigInt("106449445891785942956");const at=3,nt=(e,t,a)=>{var n;let i=a?e.tokens.map((e=>e.address===t?o:e.address)):e.tokens.map((e=>e.address)),s=e.tokens.map((e=>{var t;return null!==(t=e.decimals)&&void 0!==t?t:18})),r=e.tokens.map((e=>d(e.balance,e.decimals).toBigInt())),p=e.tokens.map((e=>{var t;return d(null!==(t=e.weight)&&void 0!==t?t:"1",18).toBigInt()})),l=e.tokens.map((e=>{var t;return d(null!==(t=e.priceRate)&&void 0!==t?t:"1",18).toBigInt()})),u=s.map((e=>Ye(BigInt(e)))),c=u.map(((e,t)=>et.mulDownFixed(e,l[t]))),y=ze(r,c);if(t){const e=new Le(t);[i,s,c,u,r,y,p,l]=e.sortTokens(i,s,c,u,r,y,p,l)}const b=d(null!==(n=e.amp)&&void 0!==n?n:"1",3).toBigInt(),m=y.indexOf(et.max(y)),f=[...c],T=[...u],h=[...i],I=[...r],_=[...l],g=[...y],P=i.indexOf(e.address);return-1!==P&&(f.splice(P,1),T.splice(P,1),h.splice(P,1),I.splice(P,1),_.splice(P,1),g.splice(P,1)),{bptIndex:P,higherBalanceTokenIndex:m,ampWithPrecision:b,balancesEvm:r,balancesEvmWithoutBpt:I,priceRates:l,priceRatesWithoutBpt:_,swapFeeEvm:d(e.swapFee,18).toBigInt(),poolTokens:i,poolTokensWithoutBpt:h,weights:p,scalingFactors:c,scalingFactorsWithoutBpt:f,scalingFactorsRaw:u,scalingFactorsRawWithoutBpt:T,upScaledBalances:y,upScaledBalancesWithoutBpt:g,totalSharesEvm:d(e.totalShares||"0",18).toBigInt()}},ot={Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",WETH:"0x0000000000000000000000000000000000000000",BAL:"0x0000000000000000000000000000000000000000"}},it={[Pe.GOERLI]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","USDT","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",WETH:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",BAL:"0xfA8449189744799aD2AcE7e0EBAC8BB7575eff47",bbaUSD:"0x13ACD41C585d7EbB4a9460f7C8f50BE60DC080Cd"},PriceChainMap:{"0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","0x37f03a12241e9fd3658ad6777d289c3fb8512bc9":"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599","0xfa8449189744799ad2ace7e0ebac8bb7575eff47":"0xba100000625a3754423978a60c9317c58a424e3d","0xe0c9275e44ea80ef17579d33c55136b7da269aeb":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0x8c9e6c40d3402480ace624730524facc5482798c":"0x6b175474e89094c44da98b954eedeac495271d0f","0x1f1f156e0317167c11aa412e3d1435ea29dc3cce":"0xdac17f958d2ee523a2206206994597c13d831ec7","0x4cb1892fddf14f772b2e39e299f44b2e5da90d04":"0x3ed3b47dd13ec9a98b44e6204a523e766b225811","0x811151066392fd641fe74a9b55a712670572d161":"0xbcca60bb61934080951369a648fb03df4f96263c","0x89534a24450081aa267c79b07411e9617d984052":"0x028171bca77440897b824ca71d1c56cac55b68a3","0x829f35cebbcd47d3c120793c12f7a232c903138b":"0x956f47f50a910163d8bf957cf5846d573e7f87ca","0xff386a3d08f80ac38c77930d173fa56c6286dc8b":"0x6810e776880c02933d47db1b9fc05908e5386b96"}},[Pe.MAINNET]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",WETH:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",BAL:"0xba100000625a3754423978a60c9317c58a424e3d",bbaUSD:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2",bbaUSDv2:"0xA13a9247ea42D743238089903570127DdA72fE44"}},[Pe.POLYGON]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",WETH:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",BAL:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3"}},[Pe.ARBITRUM]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",WETH:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",BAL:"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8"}},[Pe.GNOSIS]:{Popular:{Symbols:["xDAI","WXDAI","WETH","BAL"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",WETH:"0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1",BAL:"0x7eF541E2a22058048904fE5744f9c7E4C57AF717"}}};function st(e){return it[e]?it[e]:ot}let rt=!1,pt=!1;const dt={debug:1,default:2,info:2,warning:3,error:4,off:5};let lt=dt.default,ut=null;const ct=function(){try{const e=[];if(["NFD","NFC","NFKD","NFKC"].forEach((t=>{try{if("test"!=="test".normalize(t))throw new Error("bad normalize")}catch(a){e.push(t)}})),e.length)throw new Error("missing "+e.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(e){return e.message}return null}();var yt,bt;!function(e){e.DEBUG="DEBUG",e.INFO="INFO",e.WARNING="WARNING",e.ERROR="ERROR",e.OFF="OFF"}(yt||(yt={})),function(e){e.UNKNOWN_ERROR="UNKNOWN_ERROR",e.NOT_IMPLEMENTED="NOT_IMPLEMENTED",e.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.TIMEOUT="TIMEOUT",e.BUFFER_OVERRUN="BUFFER_OVERRUN",e.NUMERIC_FAULT="NUMERIC_FAULT",e.MISSING_NEW="MISSING_NEW",e.INVALID_ARGUMENT="INVALID_ARGUMENT",e.MISSING_ARGUMENT="MISSING_ARGUMENT",e.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",e.CALL_EXCEPTION="CALL_EXCEPTION",e.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",e.NONCE_EXPIRED="NONCE_EXPIRED",e.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",e.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",e.TRANSACTION_REPLACED="TRANSACTION_REPLACED",e.ACTION_REJECTED="ACTION_REJECTED"}(bt||(bt={}));const mt="0123456789abcdef";class ft{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}_log(e,t){const a=e.toLowerCase();null==dt[a]&&this.throwArgumentError("invalid log level name","logLevel",e),lt>dt[a]||console.log.apply(console,t)}debug(...e){this._log(ft.levels.DEBUG,e)}info(...e){this._log(ft.levels.INFO,e)}warn(...e){this._log(ft.levels.WARNING,e)}makeError(e,t,a){if(pt)return this.makeError("censored error",t,{});t||(t=ft.errors.UNKNOWN_ERROR),a||(a={});const n=[];Object.keys(a).forEach((e=>{const t=a[e];try{if(t instanceof Uint8Array){let a="";for(let e=0;e<t.length;e++)a+=mt[t[e]>>4],a+=mt[15&t[e]];n.push(e+"=Uint8Array(0x"+a+")")}else n.push(e+"="+JSON.stringify(t))}catch(t){n.push(e+"="+JSON.stringify(a[e].toString()))}})),n.push(`code=${t}`),n.push(`version=${this.version}`);const o=e;let i="";switch(t){case bt.NUMERIC_FAULT:{i="NUMERIC_FAULT";const t=e;switch(t){case"overflow":case"underflow":case"division-by-zero":i+="-"+t;break;case"negative-power":case"negative-width":i+="-unsupported";break;case"unbound-bitwise-result":i+="-unbound-result"}break}case bt.CALL_EXCEPTION:case bt.INSUFFICIENT_FUNDS:case bt.MISSING_NEW:case bt.NONCE_EXPIRED:case bt.REPLACEMENT_UNDERPRICED:case bt.TRANSACTION_REPLACED:case bt.UNPREDICTABLE_GAS_LIMIT:i=t}i&&(e+=" [ See: https://links.ethers.org/v5-errors-"+i+" ]"),n.length&&(e+=" ("+n.join(", ")+")");const s=new Error(e);return s.reason=o,s.code=t,Object.keys(a).forEach((function(e){s[e]=a[e]})),s}throwError(e,t,a){throw this.makeError(e,t,a)}throwArgumentError(e,t,a){return this.throwError(e,ft.errors.INVALID_ARGUMENT,{argument:t,value:a})}assert(e,t,a,n){e||this.throwError(t,a,n)}assertArgument(e,t,a,n){e||this.throwArgumentError(t,a,n)}checkNormalize(e){ct&&this.throwError("platform missing String.prototype.normalize",ft.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:ct})}checkSafeUint53(e,t){"number"==typeof e&&(null==t&&(t="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(t,ft.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(t,ft.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))}checkArgumentCount(e,t,a){a=a?": "+a:"",e<t&&this.throwError("missing argument"+a,ft.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError("too many arguments"+a,ft.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t})}checkNew(e,t){e!==Object&&null!=e||this.throwError("missing new",ft.errors.MISSING_NEW,{name:t.name})}checkAbstract(e,t){e===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",ft.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):e!==Object&&null!=e||this.throwError("missing new",ft.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return ut||(ut=new ft("logger/5.7.0")),ut}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError("cannot permanently disable censorship",ft.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),rt){if(!e)return;this.globalLogger().throwError("error censorship permanent",ft.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}pt=!!e,rt=!!t}static setLogLevel(e){const t=dt[e.toLowerCase()];null!=t?lt=t:ft.globalLogger().warn("invalid log level - "+e)}static from(e){return new ft(e)}}ft.errors=bt,ft.levels=yt;const Tt=new ft("units/5.7.0"),ht=["wei","kwei","mwei","gwei","szabo","finney","ether"];function It(e,t){if("string"==typeof t){const e=ht.indexOf(t);-1!==e&&(t=3*e)}return l(e,null!=t?t:18)}function _t(e,t){if("string"!=typeof e&&Tt.throwArgumentError("value must be a string","value",e),"string"==typeof t){const e=ht.indexOf(t);-1!==e&&(t=3*e)}return d(e,null!=t?t:18)}const gt={[Pe.MAINNET]:{waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6"},[Pe.POLYGON]:{wamDAI:"0xee029120c72b0607344f35b17cdd90025e647b00",wamUSDC:"0x221836a597948dce8f3568e044ff123108acc42a",wamUSDT:"0x19c60a251e525fa88cd6f3768416a8024e98fc19"}},Pt={[Pe.MAINNET]:{[gt[Pe.MAINNET].waUSDT]:{aToken:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",underlying:"0xdac17f958d2ee523a2206206994597c13d831ec7"},[gt[Pe.MAINNET].waUSDC]:{aToken:"0xbcca60bb61934080951369a648fb03df4f96263c",underlying:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"},[gt[Pe.MAINNET].waDAI]:{aToken:"0x028171bca77440897b824ca71d1c56cac55b68a3",underlying:"0x6b175474e89094c44da98b954eedeac495271d0f"}},[Pe.POLYGON]:{[gt[Pe.POLYGON].wamUSDT]:{aToken:"0x60d55f02a771d515e077c9c2403a1ef324885cec",underlying:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f"},[gt[Pe.POLYGON].wamUSDC]:{aToken:"0x1a13f4ca1d028320a707d99520abfefca3998b7f",underlying:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174"},[gt[Pe.POLYGON].wamDAI]:{aToken:"0x27f8d03b3a2196956ed754badc28d73be8830a6e",underlying:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063"}}},wt=new t(["function rate() view returns (uint256)"]);class xt{constructor(e,t){this.multicall=e,this.network=t}async fetch(e){const t=Object.values(gt[e]),a=t.map((e=>({target:e,callData:wt.encodeFunctionData("rate",[])}))),[,n]=await this.multicall.callStatic.aggregate(a);return t.reduce(((e,t,a)=>(e[t]||(e[t]="0x"==n[a]?0:parseFloat(It(n[a],27))),e)),{})}async getRate(e){return 1}}function Et(e){const t={};return e.forEach((e=>{e.price&&(t[e.address]=e.price)})),t}function At(e,t){let a=e.toLowerCase();return a=vt(a,t),a=St(a,t),a}const vt=(e,t)=>{const a=st(t).PriceChainMap;return a&&a[e.toLowerCase()]||e},St=(e,t)=>{const a=e.toLocaleLowerCase(),n=t;return null!=Pt[n]&&null!=Pt[n]&&Object.keys(Pt[n]).includes(a)?Pt[n][a].aToken:a},kt=(e,t)=>{const a=t.filter(((t,a)=>e[a]===o));return a[0]?p.from(a[0]):p.from(0)};class Ot{constructor(e,t=200,a=100){this.fn=e,this.wait=t,this.limit=a,this.requestSets=[],this.promisedCalls=[],this.promisedCount=0,this.debounceCancel=()=>{}}fetch(e){var t,a;return(t=this.requestSets)[a=this.promisedCount]||(t[a]=new Set),e&&this.requestSets[this.promisedCount].add(e),this.requestSets[this.promisedCount].size>=this.limit?this.execute(0):this.promisedCalls[this.promisedCount]?this.promisedCalls[this.promisedCount].promise:this.execute(this.wait)}execute(e=0){this.promisedCalls[this.promisedCount]||(this.promisedCalls[this.promisedCount]=(()=>{let e=()=>{},t=()=>{};return{promise:new Promise(((a,n)=>{[e,t]=[a,n]})),reject:t,resolve:e}})());const{promise:t,resolve:a,reject:n}=this.promisedCalls[this.promisedCount];this.timeout&&clearTimeout(this.timeout);const o=()=>{const e=[...this.requestSets[this.promisedCount]];this.promisedCount++,this.fn(e).then((e=>{a(e),this.debounceCancel=()=>{}})).catch((e=>{e.response&&e.response.data&&e.response.data.error&&(e=e.response.data.error),n(e)}))};return e>0?this.timeout=setTimeout(o.bind(this),e):o(),this.debounceCancel=()=>{this.timeout&&clearTimeout(this.timeout),n("Cancelled"),delete this.promisedCalls[this.promisedCount]},t}}function Mt(e,t){const a=new RegExp(`[0-9]+\\.?[0-9]{0,${t}}`),n=e.match(a);let o=e;return n&&(o=n[0]),d(o,t)}function Ct(e,t){return l(e,t).replace(/(.0$)/,"")}function Ft(e){return Mt(e,18).toBigInt()}function Bt(e){return l(p.from(e),18)}const Rt=e=>d(`${e}`,18),Nt=p.from("10000"),Lt=(e,t)=>e.mul(t).div(Nt),Dt=(e,t)=>{const a=Lt(e,t);return e.sub(a)},Ut=(e,t)=>{const a=Lt(e,t);return e.add(a)},Vt=(e,t)=>u(e)===u(t);function qt(e,t,a){return t<0||t>e.length?e:[...e.slice(0,t),a,...e.slice(t)]}function Gt(e,t,a){return t<0||t>=e.length?e:[...e.slice(0,t),a,...e.slice(t+1)]}function Wt(e,t){const a=[...e];return t<0||t>=e.length||a.splice(t,1),a}function $t(e,t,...a){if(e.length!==t.length||a.some((e=>e.length!==t.length)))throw new Error("Array length mismatch");const n=e.map((e=>t.indexOf(e)));if(n.indexOf(-1)>=0)throw new Error("Invalid reference or original array");const o=[];return n.forEach(((e,t)=>{a.forEach(((a,n)=>{o[n]||(o[n]=[]),o[n][t]=a[e]}))})),o}function Ht(e){const t=Object.values(Be);return!(!e.includes("Linear")||!t.includes(e))}function Kt(e){return e.map((e=>`${e.slice(0,6)}...${e.slice(38,42)}`))}const Jt=({receipt:e,to:t,contractInterface:a,logName:n})=>{const o=e.logs.filter((e=>Vt(e.address,t))).map((e=>{try{return a.parseLog(e)}catch(e){return Re.getInstance().warn(e),null}})).find((e=>(null==e?void 0:e.name)===n));if(!o)throw new Error("Event not found in logs");return o},Xt=()=>`0x${Array(8).fill(null).map((()=>Math.random().toString(16).slice(2,10))).join("")}`;class Yt{format(e){return e}}class jt{constructor(){this.operatorMap={gt:"_gt",lt:"_lt",eq:"",in:"_in",not_in:"_not_in",contains:"_contains"}}format(e){const t={};return e.where&&Object.entries(e.where).forEach((([e,a])=>{Object.entries(a).forEach((([a,n])=>{t[`${e}${this.operatorMap[a]}`]=n}))})),{...e,where:t}}}class zt{constructor(e){this.args=e}merge(e){const t=_(this.args,e.args,((e,t)=>{if(Array.isArray(e))return e.concat(t)}));return new zt(t)}format(e){return e.format(this.args)}}const Zt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct AaveLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Qt{static createInterface(){return new k.Interface(Zt)}static connect(e,t){return new O(e,Zt,t)}}Qt.abi=Zt;const ea=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"AaveLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract AaveLinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class ta{static createInterface(){return new k.Interface(ea)}static connect(e,t){return new O(e,ea,t)}}ta.abi=ea;const aa=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"}];class na{static createInterface(){return new k.Interface(aa)}static connect(e,t){return new O(e,aa,t)}}na.abi=aa;const oa=[{inputs:[{internalType:"address",name:"admin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"actionId",type:"bytes32"},{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"",type:"address"}],name:"canPerform",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"roles",type:"bytes32[]"},{internalType:"address",name:"account",type:"address"}],name:"grantRoles",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"roles",type:"bytes32[]"},{internalType:"address[]",name:"accounts",type:"address[]"}],name:"grantRolesToMany",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"roles",type:"bytes32[]"},{internalType:"address",name:"account",type:"address"}],name:"revokeRoles",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"roles",type:"bytes32[]"},{internalType:"address[]",name:"accounts",type:"address[]"}],name:"revokeRolesFromMany",outputs:[],stateMutability:"nonpayable",type:"function"}];class ia{static createInterface(){return new k.Interface(oa)}static connect(e,t){return new O(e,oa,t)}}ia.abi=oa;const sa=[{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"}];class ra{static createInterface(){return new k.Interface(sa)}static connect(e,t){return new O(e,sa,t)}}ra.abi=sa;const pa=[{inputs:[{internalType:"contract IBalancerTokenAdmin",name:"tokenAdmin",type:"address"},{internalType:"contract IGaugeController",name:"gaugeController",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"address",name:"gauge",type:"address"},{indexed:!1,internalType:"uint256",name:"minted",type:"uint256"}],name:"Minted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"bool",name:"approval",type:"bool"}],name:"MinterApprovalSet",type:"event"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"allowed_to_mint_for",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBalancerToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBalancerTokenAdmin",outputs:[{internalType:"contract IBalancerTokenAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGaugeController",outputs:[{internalType:"contract IGaugeController",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"getMinterApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"gauge",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"mintFor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"}],name:"mintMany",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"address",name:"user",type:"address"}],name:"mintManyFor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"mint_for",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[8]",name:"gauges",type:"address[8]"}],name:"mint_many",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"gauge",type:"address"}],name:"minted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"bool",name:"approval",type:"bool"}],name:"setMinterApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"setMinterApprovalWithSignature",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"}],name:"toggle_approve_mint",outputs:[],stateMutability:"nonpayable",type:"function"}];class da{static createInterface(){return new k.Interface(pa)}static connect(e,t){return new O(e,pa,t)}}da.abi=pa;const la=[{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getAmpForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getInRecoveryModeForPools",outputs:[{internalType:"bool[]",name:"",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getIsPausedForPools",outputs:[{internalType:"bool[]",name:"",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getLinearTargetsForPools",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getNormalizedWeightsForPools",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"},{components:[{internalType:"bool",name:"loadTokenBalanceUpdatesAfterBlock",type:"bool"},{internalType:"bool",name:"loadTotalSupply",type:"bool"},{internalType:"bool",name:"loadSwapFees",type:"bool"},{internalType:"bool",name:"loadLinearWrappedTokenRates",type:"bool"},{internalType:"bool",name:"loadLinearTargets",type:"bool"},{internalType:"bool",name:"loadNormalizedWeights",type:"bool"},{internalType:"bool",name:"loadScalingFactors",type:"bool"},{internalType:"bool",name:"loadAmps",type:"bool"},{internalType:"bool",name:"loadRates",type:"bool"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"enum TotalSupplyType[]",name:"totalSupplyTypes",type:"uint8[]"},{internalType:"enum SwapFeeType[]",name:"swapFeeTypes",type:"uint8[]"},{internalType:"uint256[]",name:"linearPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"weightedPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"scalingFactorPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"ampPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"ratePoolIdxs",type:"uint256[]"}],internalType:"struct PoolDataQueryConfig",name:"config",type:"tuple"}],name:"getPoolData",outputs:[{internalType:"uint256[][]",name:"balances",type:"uint256[][]"},{internalType:"uint256[]",name:"totalSupplies",type:"uint256[]"},{internalType:"uint256[]",name:"swapFees",type:"uint256[]"},{internalType:"uint256[]",name:"linearWrappedTokenRates",type:"uint256[]"},{internalType:"uint256[][]",name:"linearTargets",type:"uint256[][]"},{internalType:"uint256[][]",name:"weights",type:"uint256[][]"},{internalType:"uint256[][]",name:"scalingFactors",type:"uint256[][]"},{internalType:"uint256[]",name:"amps",type:"uint256[]"},{internalType:"uint256[]",name:"rates",type:"uint256[]"},{internalType:"uint256[]",name:"ignoreIdxs",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"},{components:[{internalType:"bool",name:"loadInRecoveryMode",type:"bool"},{internalType:"bool",name:"loadIsPaused",type:"bool"}],internalType:"struct PoolStatusQueryConfig",name:"config",type:"tuple"}],name:"getPoolStatus",outputs:[{internalType:"bool[]",name:"isPaused",type:"bool[]"},{internalType:"bool[]",name:"inRecoveryMode",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPoolTokenBalancesWithUpdatesAfterBlock",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getRateForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getScalingFactorsForPools",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"},{internalType:"enum SwapFeeType[]",name:"swapFeeTypes",type:"uint8[]"}],name:"getSwapFeePercentageForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"},{internalType:"enum TotalSupplyType[]",name:"totalSupplyTypes",type:"uint8[]"}],name:"getTotalSupplyForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getWrappedTokenRateForLinearPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"}];class ua{static createInterface(){return new k.Interface(la)}static connect(e,t){return new O(e,la,t)}}ua.abi=la;const ca=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class ya{static createInterface(){return new k.Interface(ca)}static connect(e,t){return new O(e,ca,t)}}ya.abi=ca;const ba=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"wstETH",type:"address"},{internalType:"contract IBalancerMinter",name:"minter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"batchSwap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"exitPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge[]",name:"gauges",type:"address[]"}],name:"gaugeClaimRewards",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"gaugeMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"gaugeSetMinterApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeWithdraw",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getEntrypoint",outputs:[{internalType:"contract IBalancerRelayer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"},{internalType:"uint256",name:"value",type:"uint256"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"ref",type:"uint256"}],name:"peekChainedReferenceValue",outputs:[{internalType:"uint256",name:"value",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"},{internalType:"bytes",name:"authorisation",type:"bytes"}],name:"setRelayerApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETHAndWrap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"swap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ICToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapCompoundV2",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IEulerToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapEuler",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IGearboxDieselToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"dieselAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapGearbox",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IReaperTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapReaperVaultToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IShareToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapShareToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ITetuSmartVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapTetu",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapWstETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IYearnTokenVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapYearn",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20Permit",name:"token",type:"address"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20PermitDAI",name:"token",type:"address"},{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"bool",name:"allowed",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermitDAI",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ICToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapCompoundV2",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IEulerToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"eulerProtocol",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapEuler",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IGearboxDieselToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"mainAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapGearbox",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IReaperTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapReaperVaultToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IShareToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapShareToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapStETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ITetuSmartVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapTetu",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"uAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IYearnTokenVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapYearn",outputs:[],stateMutability:"payable",type:"function"}];class ma{static createInterface(){return new k.Interface(ba)}static connect(e,t){return new O(e,ba,t)}}ma.abi=ba;const fa=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ComposableStablePool.NewPoolParams",name:"params",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"TokenRateCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!0,internalType:"contract IRateProvider",name:"provider",type:"address"},{indexed:!1,internalType:"uint256",name:"cacheDuration",type:"uint256"}],name:"TokenRateProviderSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastJoinExitData",outputs:[{internalType:"uint256",name:"lastJoinExitAmplification",type:"uint256"},{internalType:"uint256",name:"lastPostJoinExitInvariant",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumBpt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRateCache",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"oldRate",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"expires",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"isTokenExemptFromYieldProtocolFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"setTokenRateCacheDuration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"updateTokenRateCache",outputs:[],stateMutability:"nonpayable",type:"function"}];class Ta{static createInterface(){return new k.Interface(fa)}static connect(e,t){return new O(e,fa,t)}}Ta.abi=fa;const ha=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract ComposableStablePool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Ia{static createInterface(){return new k.Interface(ha)}static connect(e,t){return new O(e,ha,t)}}Ia.abi=ha;const _a=[{inputs:[{internalType:"contract IERC20",name:"_underlying",type:"address"},{internalType:"contract IERC20",name:"_bond",type:"address"},{internalType:"uint256",name:"_expiration",type:"uint256"},{internalType:"uint256",name:"_unitSeconds",type:"uint256"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"uint256",name:"_percentFee",type:"uint256"},{internalType:"uint256",name:"_percentFeeGov",type:"uint256"},{internalType:"address",name:"_governance",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"collectedBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collectedBond",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBond",type:"uint256"}],name:"FeeCollection",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"FEE_BOUND",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bond",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"bondDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"expiration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesBond",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesUnderlying",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"governance",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256",name:"currentBalanceTokenIn",type:"uint256"},{internalType:"uint256",name:"currentBalanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"percentFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"percentFeeGov",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountX",type:"uint256"},{internalType:"uint256",name:"reserveX",type:"uint256"},{internalType:"uint256",name:"reserveY",type:"uint256"},{internalType:"bool",name:"out",type:"bool"}],name:"solveTradeInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"underlying",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"underlyingDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"unitSeconds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];class ga{static createInterface(){return new k.Interface(_a)}static connect(e,t){return new O(e,_a,t)}}ga.abi=_a;const Pa=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];class wa{static createInterface(){return new k.Interface(Pa)}static connect(e,t){return new O(e,Pa,t)}}wa.abi=Pa;const xa=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct ERC4626LinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Ea{static createInterface(){return new k.Interface(xa)}static connect(e,t){return new O(e,xa,t)}}Ea.abi=xa;const Aa=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"Erc4626LinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class va{static createInterface(){return new k.Interface(Aa)}static connect(e,t){return new O(e,Aa,t)}}va.abi=Aa;const Sa=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct EulerLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class ka{static createInterface(){return new k.Interface(Sa)}static connect(e,t){return new O(e,Sa,t)}}ka.abi=Sa;const Oa=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"_eulerProtocol",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"EulerLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"eulerProtocol",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Ma{static createInterface(){return new k.Interface(Oa)}static connect(e,t){return new O(e,Oa,t)}}Ma.abi=Oa;const Ca=[{inputs:[{internalType:"address[]",name:"_assetsToRegister",type:"address[]"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"uint256",name:"_protocolPercentFee",type:"uint256"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"numeraire",type:"address"},{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!1,internalType:"uint256",name:"weight",type:"uint256"}],name:"AssetIncluded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"derivative",type:"address"},{indexed:!0,internalType:"address",name:"numeraire",type:"address"},{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!1,internalType:"address",name:"assimilator",type:"address"}],name:"AssimilatorIncluded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newCollector",type:"address"}],name:"ChangeCollectorAddress",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isEmergency",type:"bool"}],name:"EmergencyAlarm",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"lptAmountBurned",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"amountsWithdrawn",type:"uint256[]"}],name:"EmergencyWithdraw",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"feesCollected",type:"uint256"}],name:"FeesAccrued",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"feesCollected",type:"uint256"}],name:"FeesCollected",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"lptAmountBurned",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"amountsWithdrawn",type:"uint256[]"}],name:"OnExitPool",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"lptAmountMinted",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"amountsDeposited",type:"uint256[]"}],name:"OnJoinPool",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"alpha",type:"uint256"},{indexed:!1,internalType:"uint256",name:"beta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"delta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"epsilon",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lambda",type:"uint256"}],name:"ParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"updater",type:"address"},{indexed:!1,internalType:"uint256",name:"newProtocolPercentage",type:"uint256"}],name:"ProtocolFeeShareUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"trader",type:"address"},{indexed:!0,internalType:"address",name:"origin",type:"address"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"originAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"targetAmount",type:"uint256"}],name:"Trade",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_derivative",type:"address"}],name:"assimilator",outputs:[{internalType:"address",name:"assimilator_",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"collectorAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"curve",outputs:[{internalType:"int128",name:"alpha",type:"int128"},{internalType:"int128",name:"beta",type:"int128"},{internalType:"int128",name:"delta",type:"int128"},{internalType:"int128",name:"epsilon",type:"int128"},{internalType:"int128",name:"lambda",type:"int128"},{internalType:"uint256",name:"cap",type:"uint256"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"fxPoolAddress",type:"address"},{internalType:"bytes32",name:"poolId",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"derivatives",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"emergency",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"_assets",type:"address[]"},{internalType:"uint256[]",name:"_assetWeights",type:"uint256[]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"liquidity",outputs:[{internalType:"uint256",name:"total_",type:"uint256"},{internalType:"uint256[]",name:"individual_",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numeraires",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"protocolPercentFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"reserves",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_cap",type:"uint256"}],name:"setCap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_collectorAddress",type:"address"}],name:"setCollectorAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_emergency",type:"bool"}],name:"setEmergency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_alpha",type:"uint256"},{internalType:"uint256",name:"_beta",type:"uint256"},{internalType:"uint256",name:"_feeAtHalt",type:"uint256"},{internalType:"uint256",name:"_epsilon",type:"uint256"},{internalType:"uint256",name:"_lambda",type:"uint256"}],name:"setParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_protocolPercentFee",type:"uint256"}],name:"setProtocolPercentFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalUnclaimedFeesInNumeraire",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"totalDepositNumeraire",type:"uint256"}],name:"viewDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"viewParameters",outputs:[{internalType:"uint256",name:"alpha_",type:"uint256"},{internalType:"uint256",name:"beta_",type:"uint256"},{internalType:"uint256",name:"delta_",type:"uint256"},{internalType:"uint256",name:"epsilon_",type:"uint256"},{internalType:"uint256",name:"lambda_",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_curvesToBurn",type:"uint256"}],name:"viewWithdraw",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"}];class Fa{static createInterface(){return new k.Interface(Ca)}static connect(e,t){return new O(e,Ca,t)}}Fa.abi=Ca;const Ba=[{inputs:[],name:"CLAIM_FREQUENCY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"claimRewardsFromGauge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge[]",name:"gauges",type:"address[]"},{internalType:"address",name:"user",type:"address"}],name:"claimRewardsFromGauges",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"token",type:"address"}],name:"getPendingRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}];class Ra{static createInterface(){return new k.Interface(Ba)}static connect(e,t){return new O(e,Ba,t)}}Ra.abi=Ba;const Na=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct GearboxLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class La{static createInterface(){return new k.Interface(Na)}static connect(e,t){return new O(e,Na,t)}}La.abi=Na;const Da=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"GearboxLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract GearboxLinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Ua{static createInterface(){return new k.Interface(Da)}static connect(e,t){return new O(e,Da,t)}}Ua.abi=Da;const Va=[{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"previousValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"ConfigChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"}],name:"ConfigFrozen",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"}],name:"ConfigUnset",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newGovernor",type:"address"}],name:"GovernorChangeRequested",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldGovernor",type:"address"},{indexed:!1,internalType:"address",name:"newGovernor",type:"address"}],name:"GovernorChanged",type:"event"},{inputs:[],name:"acceptGovernance",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newGovernor",type:"address"}],name:"changeGovernor",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"freeze",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"address",name:"defaultValue",type:"address"}],name:"getAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getConfigMeta",outputs:[{internalType:"uint8",name:"",type:"uint8"},{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getUint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"governor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"hasKey",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_governor",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"listKeys",outputs:[{internalType:"bytes32[]",name:"",type:"bytes32[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"pendingGovernor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"address",name:"newValue",type:"address"}],name:"setAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setUint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"unset",outputs:[],stateMutability:"nonpayable",type:"function"}];class qa{static createInterface(){return new k.Interface(Va)}static connect(e,t){return new O(e,Va,t)}}qa.abi=Va;const Ga=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IwstETH",name:"wstETH",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"swapAmounts",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getStETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWstETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"swapAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class Wa{static createInterface(){return new k.Interface(Ga)}static connect(e,t){return new O(e,Ga,t)}}Wa.abi=Ga;const $a=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class Ha{static createInterface(){return new k.Interface($a)}static connect(e,t){return new O(e,$a,t)}}Ha.abi=$a;const Ka=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateLiquidityLimit",inputs:[{name:"user",type:"address",indexed:!0},{name:"original_balance",type:"uint256",indexed:!1},{name:"original_supply",type:"uint256",indexed:!1},{name:"working_balance",type:"uint256",indexed:!1},{name:"working_supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Transfer",inputs:[{name:"_from",type:"address",indexed:!0},{name:"_to",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Approval",inputs:[{name:"_owner",type:"address",indexed:!0},{name:"_spender",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"minter",type:"address"},{name:"veBoostProxy",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"},{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"transferFrom",inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"transfer",inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"approve",inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"permit",inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"},{name:"_value",type:"uint256"},{name:"_deadline",type:"uint256"},{name:"_v",type:"uint8"},{name:"_r",type:"bytes32"},{name:"_s",type:"bytes32"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"increaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_added_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"decreaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_subtracted_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"user_checkpoint",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"set_rewards_receiver",inputs:[{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"kick",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_reward_token",inputs:[{name:"_reward_token",type:"address"},{name:"_amount",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"add_reward",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_reward_distributor",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_killed",inputs:[{name:"_is_killed",type:"bool"}],outputs:[]},{stateMutability:"view",type:"function",name:"claimed_reward",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward",inputs:[{name:"_user",type:"address"},{name:"_reward_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward_write",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_tokens",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"future_epoch_time",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"inflation_rate",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"version",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"allowance",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"initialize",inputs:[{name:"_lp_token",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"DOMAIN_SEPARATOR",inputs:[],outputs:[{name:"",type:"bytes32"}]},{stateMutability:"view",type:"function",name:"nonces",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"factory",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"lp_token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"is_killed",inputs:[],outputs:[{name:"",type:"bool"}]},{stateMutability:"view",type:"function",name:"reward_count",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"reward_data",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"token",type:"address"},{name:"distributor",type:"address"},{name:"period_finish",type:"uint256"},{name:"rate",type:"uint256"},{name:"last_update",type:"uint256"},{name:"integral",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"rewards_receiver",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"reward_integral_for",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_balances",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_fraction",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"period",inputs:[],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"reward_tokens",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"period_timestamp",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}];class Ja{static createInterface(){return new k.Interface(Ka)}static connect(e,t){return new O(e,Ka,t)}}Ja.abi=Ka;const Xa=[{constant:!1,inputs:[{components:[{name:"target",type:"address"},{name:"callData",type:"bytes"}],name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{name:"blockNumber",type:"uint256"},{name:"returnData",type:"bytes[]"}],payable:!1,stateMutability:"nonpayable",type:"function"}];class Ya{static createInterface(){return new k.Interface(Xa)}static connect(e,t){return new O(e,Xa,t)}}Ya.abi=Xa;const ja=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3[]",name:"calls",type:"tuple[]"}],name:"aggregate3",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3Value[]",name:"calls",type:"tuple[]"}],name:"aggregate3Value",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"blockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"getBasefee",outputs:[{internalType:"uint256",name:"basefee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBlockNumber",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getChainId",outputs:[{internalType:"uint256",name:"chainid",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockDifficulty",outputs:[{internalType:"uint256",name:"difficulty",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryAggregate",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryBlockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"}];class za{static createInterface(){return new k.Interface(ja)}static connect(e,t){return new O(e,ja,t)}}za.abi=ja;const Za=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class Qa{static createInterface(){return new k.Interface(Za)}static connect(e,t){return new O(e,Za,t)}}Qa.abi=Za;const en=[{inputs:[{internalType:"contract IStaticAToken",name:"_waToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"waToken",outputs:[{internalType:"contract IStaticAToken",name:"",type:"address"}],stateMutability:"view",type:"function"}];class tn{static createInterface(){return new k.Interface(en)}static connect(e,t){return new O(e,en,t)}}tn.abi=en;const an=[{inputs:[{internalType:"contract IAuthorizer",name:"authorizer",type:"address"},{internalType:"contract IWETH",name:"weth",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"AuthorizerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ExternalBalanceTransfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeAmount",type:"uint256"}],name:"FlashLoan",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"delta",type:"int256"}],name:"InternalBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"liquidityProvider",type:"address"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"int256[]",name:"deltas",type:"int256[]"},{indexed:!1,internalType:"uint256[]",name:"protocolFeeAmounts",type:"uint256[]"}],name:"PoolBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"assetManager",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"cashDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"managedDelta",type:"int256"}],name:"PoolBalanceManaged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"PoolRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"relayer",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"RelayerApprovalChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"contract IERC20",name:"tokenIn",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"tokenOut",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"Swap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"TokensDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"TokensRegistered",type:"event"},{inputs:[],name:"WETH",outputs:[{internalType:"contract IWETH",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"assetDeltas",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"deregisterTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"flashLoan",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"getInternalBalance",outputs:[{internalType:"uint256[]",name:"balances",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPool",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"enum IVault.PoolSpecialization",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"}],name:"getPoolTokenInfo",outputs:[{internalType:"uint256",name:"cash",type:"uint256"},{internalType:"uint256",name:"managed",type:"uint256"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"assetManager",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPoolTokens",outputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract ProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"relayer",type:"address"}],name:"hasApprovedRelayer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.PoolBalanceOpKind",name:"kind",type:"uint8"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct IVault.PoolBalanceOp[]",name:"ops",type:"tuple[]"}],name:"managePoolBalance",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"}],name:"queryBatchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"registerPool",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"registerTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"setAuthorizer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setRelayerApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"amountCalculated",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class nn{static createInterface(){return new k.Interface(an)}static connect(e,t){return new O(e,an,t)}}nn.abi=an;const on=[{inputs:[{components:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],internalType:"struct WeightedPool.NewPoolParams",name:"params",type:"tuple"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getATHRateProduct",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastPostJoinExitInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class sn{static createInterface(){return new k.Interface(on)}static connect(e,t){return new O(e,on,t)}}sn.abi=on;const rn=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class pn{static createInterface(){return new k.Interface(rn)}static connect(e,t){return new O(e,rn,t)}}pn.abi=rn;const dn=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct YearnLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class ln{static createInterface(){return new k.Interface(dn)}static connect(e,t){return new O(e,dn,t)}}ln.abi=dn;const un=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"YearnLinearPoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class cn{static createInterface(){return new k.Interface(un)}static connect(e,t){return new O(e,un,t)}}cn.abi=un;const yn=[{inputs:[{components:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"token0",type:"address"},{internalType:"contract IERC20",name:"token1",type:"address"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"bool",name:"oracleEnabled",type:"bool"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ExtensibleWeightedPool2Tokens.NewPoolParams",name:"baseParams",type:"tuple"},{components:[{internalType:"int256",name:"alpha",type:"int256"},{internalType:"int256",name:"beta",type:"int256"},{internalType:"int256",name:"c",type:"int256"},{internalType:"int256",name:"s",type:"int256"},{internalType:"int256",name:"lambda",type:"int256"}],internalType:"struct GyroECLPMath.Params",name:"eclpParams",type:"tuple"},{components:[{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauAlpha",type:"tuple"},{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauBeta",type:"tuple"},{internalType:"int256",name:"u",type:"int256"},{internalType:"int256",name:"v",type:"int256"},{internalType:"int256",name:"w",type:"int256"},{internalType:"int256",name:"z",type:"int256"},{internalType:"int256",name:"dSq",type:"int256"}],internalType:"struct GyroECLPMath.DerivedParams",name:"derivedEclpParams",type:"tuple"},{internalType:"address",name:"rateProvider0",type:"address"},{internalType:"address",name:"rateProvider1",type:"address"},{internalType:"address",name:"capManager",type:"address"},{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],internalType:"struct ICappedLiquidity.CapParams",name:"capParams",type:"tuple"},{internalType:"address",name:"pauseManager",type:"address"}],internalType:"struct GyroECLPPool.GyroParams",name:"params",type:"tuple"},{internalType:"address",name:"configAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"capManager",type:"address"}],name:"CapManagerUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],indexed:!1,internalType:"struct ICappedLiquidity.CapParams",name:"params",type:"tuple"}],name:"CapParamsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"derivedParamsValidated",type:"bool"}],name:"ECLPDerivedParamsValidated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paramsValidated",type:"bool"}],name:"ECLPParamsValidated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"invariantAfterJoin",type:"uint256"}],name:"InvariantAterInitializeJoin",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldInvariant",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newInvariant",type:"uint256"}],name:"InvariantOldAndNew",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"OracleEnabledChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oracleUpdatedIndex",type:"uint256"}],name:"OracleIndexUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldPauseManager",type:"address"},{indexed:!1,internalType:"address",name:"newPauseManager",type:"address"}],name:"PauseManagerChanged",type:"event"},{anonymous:!1,inputs:[],name:"PausedLocally",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[]",name:"balances",type:"uint256[]"},{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],indexed:!1,internalType:"struct GyroECLPMath.Vector2",name:"invariant",type:"tuple"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SwapParams",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[],name:"UnpausedLocally",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"_dSq",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsAlpha",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsBeta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsC",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsLambda",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsS",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauAlphaX",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauAlphaY",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauBetaX",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauBetaY",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_u",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_v",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_w",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_z",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"capManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"capParams",outputs:[{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],internalType:"struct ICappedLiquidity.CapParams",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_pauseManager",type:"address"}],name:"changePauseManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],name:"dirtyUninitializedOracleSamples",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableOracle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getECLPParams",outputs:[{components:[{internalType:"int256",name:"alpha",type:"int256"},{internalType:"int256",name:"beta",type:"int256"},{internalType:"int256",name:"c",type:"int256"},{internalType:"int256",name:"s",type:"int256"},{internalType:"int256",name:"lambda",type:"int256"}],internalType:"struct GyroECLPMath.Params",name:"params",type:"tuple"},{components:[{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauAlpha",type:"tuple"},{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauBeta",type:"tuple"},{internalType:"int256",name:"u",type:"int256"},{internalType:"int256",name:"v",type:"int256"},{internalType:"int256",name:"w",type:"int256"},{internalType:"int256",name:"z",type:"int256"},{internalType:"int256",name:"dSq",type:"int256"}],internalType:"struct GyroECLPMath.DerivedParams",name:"d",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLargestSafeQueryWindow",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getLastInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IPriceOracle.Variable",name:"variable",type:"uint8"}],name:"getLatest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMiscData",outputs:[{internalType:"int256",name:"logInvariant",type:"int256"},{internalType:"int256",name:"logTotalSupply",type:"int256"},{internalType:"uint256",name:"oracleSampleCreationTimestamp",type:"uint256"},{internalType:"uint256",name:"oracleIndex",type:"uint256"},{internalType:"bool",name:"oracleEnabled",type:"bool"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IPriceOracle.Variable",name:"variable",type:"uint8"},{internalType:"uint256",name:"ago",type:"uint256"}],internalType:"struct IPriceOracle.OracleAccumulatorQuery[]",name:"queries",type:"tuple[]"}],name:"getPastAccumulators",outputs:[{internalType:"int256[]",name:"results",type:"int256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPrice",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"getSample",outputs:[{internalType:"int256",name:"logPairPrice",type:"int256"},{internalType:"int256",name:"accLogPairPrice",type:"int256"},{internalType:"int256",name:"logBptPrice",type:"int256"},{internalType:"int256",name:"accLogBptPrice",type:"int256"},{internalType:"int256",name:"logInvariant",type:"int256"},{internalType:"int256",name:"accLogInvariant",type:"int256"},{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IPriceOracle.Variable",name:"variable",type:"uint8"},{internalType:"uint256",name:"secs",type:"uint256"},{internalType:"uint256",name:"ago",type:"uint256"}],internalType:"struct IPriceOracle.OracleAverageQuery[]",name:"queries",type:"tuple[]"}],name:"getTimeWeightedAverage",outputs:[{internalType:"uint256[]",name:"results",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenRates",outputs:[{internalType:"uint256",name:"rate0",type:"uint256"},{internalType:"uint256",name:"rate1",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalSamples",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"gyroConfig",outputs:[{internalType:"contract IGyroConfig",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pauseManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"rateProvider0",outputs:[{internalType:"contract IRateProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"rateProvider1",outputs:[{internalType:"contract IRateProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_capManager",type:"address"}],name:"setCapManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],internalType:"struct ICappedLiquidity.CapParams",name:"params",type:"tuple"}],name:"setCapParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"}];class bn{static createInterface(){return new k.Interface(yn)}static connect(e,t){return new O(e,yn,t)}}bn.abi=yn;const mn=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"locktime",type:"uint256",indexed:!0},{name:"type",type:"int128",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Supply",inputs:[{name:"prevSupply",type:"uint256",indexed:!1},{name:"supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"token_addr",type:"address"},{name:"_name",type:"string"},{name:"_symbol",type:"string"},{name:"_authorizer_adaptor",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"admin",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"nonpayable",type:"function",name:"commit_smart_wallet_checker",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"apply_smart_wallet_checker",inputs:[],outputs:[]},{stateMutability:"view",type:"function",name:"get_last_user_slope",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"user_point_history__ts",inputs:[{name:"_addr",type:"address"},{name:"_idx",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"locked__end",inputs:[{name:"_addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"checkpoint",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_for",inputs:[{name:"_addr",type:"address"},{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"create_lock",inputs:[{name:"_value",type:"uint256"},{name:"_unlock_time",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"increase_amount",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"increase_unlock_time",inputs:[{name:"_unlock_time",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"},{name:"_t",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOfAt",inputs:[{name:"addr",type:"address"},{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[{name:"t",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupplyAt",inputs:[{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"locked",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"amount",type:"int128"},{name:"end",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"epoch",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"point_history",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"user_point_history",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"user_point_epoch",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"slope_changes",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"future_smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}]}];class fn{static createInterface(){return new k.Interface(mn)}static connect(e,t){return new O(e,mn,t)}}fn.abi=mn;const Tn=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"votingEscrow",type:"address"},{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newImplementation",type:"address"}],name:"DelegationImplementationUpdated",type:"event"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjustedBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjusted_balance_of",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDelegationImplementation",outputs:[{internalType:"contract IVeDelegation",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVotingEscrow",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"killDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],name:"setDelegation",outputs:[],stateMutability:"nonpayable",type:"function"}];class hn{static createInterface(){return new k.Interface(Tn)}static connect(e,t){return new O(e,Tn,t)}}hn.abi=Tn;var In,_n=Object.freeze({__proto__:null,AaveLinearPool__factory:Qt,AaveLinearPoolFactory__factory:ta,AaveWrapping__factory:na,Authoriser__factory:ia,BalancerHelpers__factory:ra,BalancerMinter__factory:da,BalancerPoolDataQueries__factory:ua,BalancerRelayer__factory:ya,BatchRelayerLibrary__factory:ma,ComposableStablePool__factory:Ta,ComposableStablePoolFactory__factory:Ia,ConvergentCurvePool__factory:ga,ERC20__factory:wa,ERC4626LinearPool__factory:Ea,ERC4626LinearPoolFactory__factory:va,EulerLinearPool__factory:ka,EulerLinearPoolFactory__factory:Ma,FXPool__factory:Fa,GaugeClaimHelper__factory:Ra,GearboxLinearPool__factory:La,GearboxLinearPoolFactory__factory:Ua,GyroConfig__factory:qa,LidoRelayer__factory:Wa,LinearPool__factory:Ha,LiquidityGaugeV5__factory:Ja,Multicall__factory:Ya,Multicall3__factory:za,StablePool__factory:Qa,StaticATokenRateProvider__factory:tn,Vault__factory:nn,WeightedPool__factory:sn,WeightedPoolFactory__factory:pn,YearnLinearPool__factory:ln,YearnLinearPoolFactory__factory:cn,GyroEV2__factory:bn,VeBal__factory:fn,VeDelegationProxy__factory:hn});function gn(e,t,o,i,s,r){const d=new Array(s.length).fill(n);return s.forEach(((n,s)=>{if(e.some((e=>Vt(n,e)))){const e=p.from(r).add(a);d[s]=o===In.SwapExactOut?d[s].add(p.from(i[s]).mul(e).div(a)):d[s].add(i[s])}if(t.some((e=>Vt(n,e)))){const e=a.sub(p.from(r));d[s]=o===In.SwapExactIn?d[s].add(p.from(i[s]).mul(e).div(a)):d[s].add(i[s])}})),d}!function(e){e[e.SwapExactIn=0]="SwapExactIn",e[e.SwapExactOut=1]="SwapExactOut"}(In||(In={}));var Pn={1:{contracts:{aaveLinearPoolFactory:"0x0b576c1245f479506e7c8bbc4db4db07c1cd31f9",arbitrumRootGauge:"0x6337949cbc4825bbd09242c811770f6f6fee9ffc",arbitrumRootGaugeFactory:"0x1c99324edc771c82a0dccb780cc7dda0045e50e7",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x8f42adbba1b16eaae3bb5754915e0d06059add75",authorizerAdaptorEntrypoint:"0xf5decdb1f3d1ee384908fbe16d2f0348ae43a9ea",authorizerWithAdaptorValidation:"0x6048a8c631fb7e77eca533cf9c29784e482391e7",avalancheRootGauge:"0xc57b4be50bf6bbe5f6a4fe379da342b32b37bf2f",avalancheRootGaugeFactory:"0x10f3e79911a490aa5b5d5cda6f111029c4eab5ac",bal:"0xba100000625a3754423978a60c9317c58a424e3d",balancerHelpers:"0x5addcca35b7a0d07c74063c48700c8590e87864e",balancerMinter:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",balancerQueries:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",balancerRelayer:"0xfea793aa415061c483d2390414275ad314b3f621",balancerTokenAdmin:"0xf302f9f50958c5593770fdf4d4812309ff77414f",balTokenHolderFactory:"0xb848f50141f3d4255b37ac288c25c109104f2158",batchRelayerLibrary:"0xf77018c0d817da22cadbdf504c00c0d32ce1e5c2",circuitBreakerLib:"0x4967b3353cdf9e5c67421a3890d35f2f3bb50527",composableStablePoolFactory:"0xfada0f4547ab2de89d1304a668c39b3e09aa7c76",distributionScheduler:"0xbd35248f8325dd1cb2bbf9d01e80a6bb99a792dd",doubleEntrypointFixRelayer:"0xca96c4f198d343e251b1a01f3eba061ef3da73c1",erc4626LinearPoolFactory:"0x813ee7a840ce909e7fea2117a44a90b8063bd4fd",eulerLinearPoolFactory:"0x5f43fba61f63fa6bff101a0a0458cea917f6b347",externalWeightedMath:"0x3db89f0ca3b388f2bcdbccd2ff8e13c22459cf75",feeDistributor:"0xd3cf852898b21fc233251427c2dc93d3d604f3bb",gaugeAdder:"0x5dbad78818d4c8958eff2d5b95b28385a22113cd",gaugeController:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",gaugeWorkingBalanceHelper:"0xdab2583911e872a00a851fb80dcc78a4b46ba57c",gearboxLinearPoolFactory:"0x39a79eb449fc05c92c39aa6f0e9bfac03be8de5b",gnosisRootGauge:"0x05277ce7d1e365d660624612d8b8b9b55bfd4518",gnosisRootGaugeFactory:"0x2a18b396829bc29f66a1e59fadd7a0269a6605e8",l2GaugeCheckpointer:"0x343688c5cb92115a52ca485af7f62b4b7a2e9ccc",liquidityGaugeFactory:"0xf1665e19bc105be4edd3739f88315cc699cc5b65",liquidityGaugeV5:"0xe5f96070ca00cd54795416b1a4b4c2403231c548",managedPoolAddRemoveTokenLib:"0x4148bf5b0688ed0a87f317c6534cb841f503349e",managedPoolAmmLib:"0xb37646acbb1a91287721b2cdbe01ba0dba5e57a2",managedPoolFactory:"0xbf904f9f340745b4f0c4702c7b6ab1e808ea6b93",merkleOrchard:"0xe3881627b8deebccf9c23b291430a549fc0be5f7",mockAaveLendingPool:"0x28fa1e40011adf98898e8243b2a48bb21ebf0c29",mockAaveLinearPool:"0x4ce277df0feb5b4d07a0ca2adcf5326e4005239d",mockComposableStablePool:"0x5537f945d8c3fcfdc1b8deceebd220fad26afda8",mockErc4626LinearPool:"0x9516a2d25958edb8da246a320f2c7d94a0dbe25d",mockErc4626Token:"0xb99edc4b289b0f2284fcf3f66884191bdce29624",mockEulerLinearPool:"0xdec02e6642e2c999af429f5ce944653cad15e093",mockEulerToken:"0xc101dca301a4011c1f925e9622e749e550a1b667",mockGearboxDieselToken:"0xb7a32b67aadb3866cc5c2fabc6c6ab8a9027c3c1",mockGearboxLinearPool:"0x0d05aac44ac7dd3c7ba5d50be93eb884a057d234",mockGearboxVault:"0xc7b779ab638b7a59f490ac95199502343a81e006",mockManagedPool:"0xd0cbf6765997b7ca7be6440f5e305b2ec7b96065",mockShareToken:"0x192e67544694a7baa2dea94f9b1df58bb3395a12",mockSilo:"0x66c94ae8d795e98f69ca65ffac87b38b17be3ca2",mockSiloLinearPool:"0x74cbfaf94a3577c539a9dcee9870a6349a33b34f",mockSiloRepository:"0x8e2dfc5e111dbe14e9d725210b9342688dd51c6c",mockStaticAToken:"0x1f3c910c416ed2340150281c5eb93325c38817a1",mockWeightedPool:"0x8055b8c947de30130bc1ec750c8f345a50006b23",mockYearnLinearPool:"0xac5b4ef7ede2f2843a704e96dcaa637f4ba3dc3f",mockYearnTokenVault:"0x806e02dea8d4a0882cad9fa3fa75b212328692de",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",omniVotingEscrowAdaptor:"0x96484f2abf5e58b15176dbf1a799627b53f13b6d",optimismRootGauge:"0xbc230b1a66a138cd9cfc7b352390025978dfadde",optimismRootGaugeFactory:"0x866d4b65694c66fbfd15dd6fa933d0a6b3940a36",polygonRootGauge:"0xfeb1a24c2752e53576133cdb718f25bc64ebdd52",polygonRootGaugeFactory:"0xa98bce70c92ad2ef3288dbcd659bc0d6b62f8f13",polygonZkEvmRootGauge:"0x45bf48d996d22afc9bc150df7fb4d13a49088602",polygonZkEvmRootGaugeFactory:"0x9bf951848288ccd87d06fac426150262cd3447de",poolRecoveryHelper:"0x1b300c86980a5195bcf49bd419a068d98dc133db",preseededVotingEscrowDelegation:"0xb496ff44746a8693a060fafd984da41b253f6790",protocolFeePercentagesProvider:"0x97207b095e4d5c9a6e4cfbfcd2c3358e03b90c4a",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x5ef4c5352882b10893b70dbcaa0c000965bd23c5",protocolIdRegistry:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",recoveryModeHelper:"0x7827108af2fd9910ea7cf361d9b827941fa7d809",siloLinearPoolFactory:"0x4e11aeec21baf1660b1a46472963cb3da7811c89",singleRecipientGauge:"0xb2007b8b7e0260042517f635cfd8e6dd2dd7f007",singleRecipientGaugeFactory:"0x4fb47126fa83a8734991e41b942ac29a3266c968",smartWalletChecker:"0x7869296efd0a76872fee62a058c8fbca5c1c826c",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0x67f8df125b796b05895a6dc8ecf944b9556ecb0b",votingEscrow:"0xc128a9954e6c874ea3d62ce62b468ba073093f25",votingEscrowDelegation:"0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647",votingEscrowDelegationProxy:"0x6f5a2ee11e7a772aeb5114a20d0d7c0ff61eb8a0",votingEscrowRemapper:"0x83e443ef4f9963c77bd860f94500075556668cb8",weightedPoolFactory:"0x897888115ada5773e02aa29f775430bfb5f34c51",weth:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",wstEthRateProvider:"0x72d07d7dca67b8a406ad1ec34ce969c90bfee768",yearnLinearPoolFactory:"0x5f5222ffa40f2aed6380d022184d6ea67c776ee0"},tokens:{AAVE:"0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",aFEI:"0x683923db55fead99a79fa01a27eec3cb19679cc3",aFRAX:"0xd4937682df3c8aef4fe912a96a74121c0829e664",ALCX:"0xdbdb4d16eda451d0503b854cf79d55697f90c8df",alUSD:"0xbc6da0fe9ad5f3b0d58160288917aa56653660e9",ANGLE:"0x31429d1856ad1377a8a0079410b297e1a9e214c2",AURA:"0xc0c293ce456ff0ed870add98a0828dd4d2903dbf",AURABAL:"0x616e8bfa43f920657b3497dbf40d6b1a02d4608d",aUSDC:"0xbcca60bb61934080951369a648fb03df4f96263c",aUSDT:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",aWBTC:"0x9ff58f4ffb29fa2266ab25e75e2a8b3503311656",BADGER:"0x3472a5a71965499acd81997a54bba8d852c6e53d",BAL:"0xba100000625a3754423978a60c9317c58a424e3d",BalWeth8020:"0x5c6ee304399dbdb9c8ef030ab642b10820db8f56",bb_a_usd:"0xa13a9247ea42d743238089903570127dda72fe44",cDAI:"0x5d3a536e4d6dbd6114cc1ead35777bab948e3643",cETH:"0x4ddc2d193948926d02f9b1fe9e1daa0718270ed5",COMP:"0xc00e94cb662c3520282e6f5717214004a7f26888",CRV:"0xd533a949740bb3306d119cc777fa900ba034cd52",cUSDC:"0x39aa39c021dfbae8fac545936693ac917d5e7563",CVX:"0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b",cvxCRV:"0x62b9c7356a2dc64a1969e19c23e4f579f9810aa7",DAI:"0x6b175474e89094c44da98b954eedeac495271d0f",DIGG:"0x798d1be841a82a273720ce31c822c61a67a601c3",DUSD:"0x5bc25f649fc4e26069ddf4cf4010f9f706c23831",ENS:"0xc18360217d8f7ab5e7c516566761ea12ce7f9d72",EURS:"0xdb25f211ab05b1c97d595516f45794528a807ad8",FARM:"0xa0246c9032bc3a600820415ae600c6388619a14d",FEI:"0x956f47f50a910163d8bf957cf5846d573e7f87ca",FRAX:"0x853d955acef822db058eb8505911ed77f175b99e",FTM:"0x4e15361fd6b4bb609fa63c81a2be19d873717870",FXS:"0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",GEAR:"0xba3335588d9403515223f109edc4eb7269a9ab5d",GTC:"0xde30da39c46104798bb5aa3fe8b9e0e1f348163f",LINK:"0x514910771af9ca656af840dff83e8264ecf986ca",MIM:"0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3",renBTC:"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d",RETH:"0xae78736cd615f374d3085123a210448e74fc6393",sBTC:"0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6",SPELL:"0x090185f2135308bad17527004364ebcc2d37e5f6",stkAAVE:"0x4da27a545c0c5b758a6ba100e3a049001de870f5",SUSHI:"0x6b3595068778dd592e39a122f4f5a5cf09c90fe2",USDC:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",USDT:"0xdac17f958d2ee523a2206206994597c13d831ec7",WBTC:"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",WETH:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",xSUSHI:"0x8798249c2e607446efb7ad49ec89dd1865ff4272"}},4:{contracts:{authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",balancerHelpers:"0x5addcca35b7a0d07c74063c48700c8590e87864e",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x41b953164995c11c81da73d212ed8af25741b7ac",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8"},tokens:{}},5:{contracts:{authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x5d90225de345ee24d1d2b6f45de90b056f5265a1",authorizerAdaptorEntrypoint:"0xacaac3e6d6df918bf3c809dfc7d42de0e4a72d4c",authorizerWithAdaptorValidation:"0x8ea89804145c007e7d226001a96955ad53836087",bal:"0xfa8449189744799ad2ace7e0ebac8bb7575eff47",balancerHelpers:"0x5addcca35b7a0d07c74063c48700c8590e87864e",balancerMinter:"0xdf0399539a72e2689b8b2dd53c3c2a0883879fdd",balancerQueries:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",balancerRelayer:"0x03f1ab8b19bce21eb06c364aec9e40322572a1e9",balancerTokenAdmin:"0x0f32d7d830e20809bcb9071581a696135dd472b7",balTokenHolderFactory:"0x45e617b07021b97407367624648d1a0a358a751a",batchRelayerLibrary:"0x45ffd460cc6642b8d8fb12373dfd77ceb0f4932b",childChainGauge:"0x6b5da774890db7b7b96c6f44e6a4b0f657399e2e",childChainGaugeFactory:"0x7ba29fe8e83dd6097a7298075c4affdbda3121cc",childChainGaugeRewardHelper:"0xc128a9954e6c874ea3d62ce62b468ba073093f25",childChainGaugeTokenAdder:"0x55b18f514d7f0c6c886d0c23ac72df5d3b5f8850",childChainLiquidityGaugeFactory:"0x393b918cc2ffa238732e83dd4ee52343f57d767b",childChainStreamer:"0x5b5b72d76b68f4bb1d2a10ef0fc77711f8ec7ed0",circuitBreakerLib:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",composableStablePoolFactory:"0x1802953277fd955f9a254b80aa0582f193cf1d77",distributionScheduler:"0x05a0bf0540f346b6dac25550738343beb51c0f65",doubleEntrypointFixRelayer:"0xbe9458ab5b6f289e524410141c8d5e20a6b035fe",eulerLinearPoolFactory:"0x813ee7a840ce909e7fea2117a44a90b8063bd4fd",externalWeightedMath:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",feeDistributor:"0x42b67611b208e2e9b4cc975f6d74c87b865ae066",gaugeAdder:"0x3f170631ed9821ca51a59d996ab095162438dc10",gaugeController:"0xbb1ce49b16d55a1f2c6e88102f32144c7334b116",gaugeWorkingBalanceHelper:"0xa7d524046ef89de9f8e4f2d7b029f66ccb738d48",l2BalancerPseudoMinter:"0x81cfae226343b24ba12ec6521db2c79e7aeeb310",l2LayerZeroBridgeForwarder:"0xef44d6786b2b4d544b7850fe67ce6381626bf2d6",liquidityGaugeFactory:"0x3b8ca519122cdd8efb272b0d3085453404b25bd0",liquidityGaugeV5:"0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647",managedPoolAddRemoveTokenLib:"0xacf05be5134d64d150d153818f8c67ee36996650",managedPoolAmmLib:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",managedPoolFactory:"0x03f3fb107e74f2eac9358862e91ad3c692712054",merkleOrchard:"0x5cf4928a3205728bd12830e1840f7db85c62a4b9",mockComposableStablePool:"0x5d343d374a769d1ab102e0418a516dadb08a86e4",mockEulerLinearPool:"0x43fa2c00419f60e18966aa043debd4701cb91b6d",mockEulerToken:"0xb99edc4b289b0f2284fcf3f66884191bdce29624",mockManagedPool:"0xff79b51ec2934dd1810a8e0325e3b08708720b26",mockShareToken:"0xb8bdcbf8ccf443d055d5ffe1d8154fac8187fc94",mockSilo:"0xa7a7e22398622bf71ff31dae5355ec7843b13806",mockSiloLinearPool:"0xbbb66a4fff47701ec6c528db615f5e7bf1abdaaf",mockSiloRepository:"0x7153de1a6d71360f07017838c28deca0d6c03e2a",mockWeightedPool:"0x072ed560cc042d7ab1c080a9e4fa8c6f4858deb3",noProtocolFeeLiquidityBootstrappingPoolFactory:"0xb0c726778c3ae4b3454d85557a48e8fa502bdd6a",nullVotingEscrow:"0xa523f47a933d5020b23629ddf689695aa94612dc",omniVotingEscrowAdaptor:"0x83e443ef4f9963c77bd860f94500075556668cb8",poolRecoveryHelper:"0x1cbbe6cea5e4fe7d69c586b4e362a646deef105d",preseededVotingEscrowDelegation:"0x7af980bdbc36d21ce228efabcca35707566a2be5",protocolFeePercentagesProvider:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x85153b639a35d6e6cf8b291aca237fbe67377154",protocolIdRegistry:"0x4fb47126fa83a8734991e41b942ac29a3266c968",recoveryModeHelper:"0x300ab2038eac391f26d9f895dc61f8f66a548833",rewardsOnlyGauge:"0x40bd3faef4268ea40f4c372d7f0a44c3efaaa6b1",siloLinearPoolFactory:"0x30fd8a0f7009f50616afdab4af91a0a2ef4eae49",singleRecipientGauge:"0x0e9addc34f93bccb45d1f744b9f9301285c5b48f",singleRecipientGaugeFactory:"0xe3881627b8deebccf9c23b291430a549fc0be5f7",smartWalletChecker:"0x1b6df1ff5db99f8a8a04d38f7478bab056fa35a7",testBalancerToken:"0xfa8449189744799ad2ace7e0ebac8bb7575eff47",timelockAuthorizer:"0x70e26f740bad6a2cdd762e2478496268882c21d4",timelockAuthorizerMigrator:"0x7159c4b96bfcfca232355b55778e85cf9e245192",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0xd13afc362f619b840c8f4aac1d957ce219ef37ca",votingEscrow:"0x33a99dcc4c85c014cf12626959111d5898bbcabf",votingEscrowDelegation:"0xcff73979321788d59a6170ff012730db2087f31c",votingEscrowDelegationProxy:"0x6817149cb753bf529565b4d023d7507ed2ff4bc0",votingEscrowRemapper:"0x5dbad78818d4c8958eff2d5b95b28385a22113cd",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",weth:"0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1",wstEthRateProvider:"0x80a94f458491ca88f09767e58a92fd23cbf1196f"},tokens:{}},10:{contracts:{aaveLinearPoolFactory:"0x7396f99b48e7436b152427bfa3dd6aa8c7c6d05b",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x8f42adbba1b16eaae3bb5754915e0d06059add75",authorizerAdaptorEntrypoint:"0xed86ff0c507d3af5f35d3523b77c17415fcffacb",authorizerWithAdaptorValidation:"0xacf05be5134d64d150d153818f8c67ee36996650",bal:"0xfe8b128ba8c78aabc59d4c64cee7ff28e9379921",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerQueries:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",balancerRelayer:"0x03f1ab8b19bce21eb06c364aec9e40322572a1e9",batchRelayerLibrary:"0x45ffd460cc6642b8d8fb12373dfd77ceb0f4932b",childChainGauge:"0x81cfae226343b24ba12ec6521db2c79e7aeeb310",childChainGaugeFactory:"0xa523f47a933d5020b23629ddf689695aa94612dc",childChainGaugeRewardHelper:"0x8ab784368a1883da90d8513b48801e2db1cb2d5d",childChainGaugeTokenAdder:"0x6f5a2ee11e7a772aeb5114a20d0d7c0ff61eb8a0",childChainLiquidityGaugeFactory:"0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647",childChainStreamer:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",circuitBreakerLib:"0x2498a2b0d6462d2260eac50ae1c3e03f4829ba95",composableStablePoolFactory:"0x1802953277fd955f9a254b80aa0582f193cf1d77",doubleEntrypointFixRelayer:"0x3b8ca519122cdd8efb272b0d3085453404b25bd0",erc4626LinearPoolFactory:"0x7adbdabaa80f654568421887c12f09e0c7bd9629",externalWeightedMath:"0x8df317a729fcaa260306d7de28888932cb579b88",gaugeWorkingBalanceHelper:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",l2BalancerPseudoMinter:"0x4fb47126fa83a8734991e41b942ac29a3266c968",l2LayerZeroBridgeForwarder:"0xbef13d1e54d0c79da8b0ad704883e1cea7eb2100",managedPoolAddRemoveTokenLib:"0x59562f93c447656f6e4799fc1fc7c3d977c3324f",managedPoolAmmLib:"0xded7fef7d8ecdcb74f22f0169e1a9ec696e6695d",managedPoolFactory:"0x4c32a8a8fda4e24139b51b456b42290f51d6a1c4",mockAaveLendingPool:"0x533a16f90e7d3ca31dbc608e5ec54967710f0d2a",mockAaveLinearPool:"0x45d37982784f022a9864748b4e8750e1e7019604",mockComposableStablePool:"0x11a4cf51bb0bb4d925cadfda61fcda952d64889c",mockErc4626LinearPool:"0x2da61ef3cdcb97efb0f7099c02527fabfe94dee5",mockErc4626Token:"0x4be0e4d6184348c5ba845a4010528cfc779610b8",mockManagedPool:"0xb4af4fdd49da2a2ba9522eadcf86d407a69f19c8",mockStaticAToken:"0x8b7854708c0c54f9d7d1ff351d4f84e6de0e134c",mockWeightedPool:"0x62f5f9a446d198e8e4c84ee56e5217416720edaf",mockYearnLinearPool:"0x34557ef500bfc060b8e3f2da58ef725bb7d32202",mockYearnTokenVault:"0xb15608d28eb43378a7e7780add3fe9bc132baf40",noProtocolFeeLiquidityBootstrappingPoolFactory:"0xf302f9f50958c5593770fdf4d4812309ff77414f",nullVotingEscrow:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",poolRecoveryHelper:"0x26743984e3357efc59f2fd6c1afdc310335a61c9",protocolFeePercentagesProvider:"0xacaac3e6d6df918bf3c809dfc7d42de0e4a72d4c",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0xc128a9954e6c874ea3d62ce62b468ba073093f25",protocolIdRegistry:"0x9805dcfd25e6de36bad8fe9d3fe2c9b44b764102",recoveryModeHelper:"0x3b1eb8eb7b43882b385ab30533d9a2bef9052a98",rewardsOnlyGauge:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0x6817149cb753bf529565b4d023d7507ed2ff4bc0",votingEscrowDelegationProxy:"0x9da18982a33fd0c7051b19f0d7c76f2d5e7e017c",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",weth:"0x4200000000000000000000000000000000000006",yearnLinearPoolFactory:"0x19dfef0a828eec0c85fbb335aa65437417390b85"},tokens:{}},42:{contracts:{authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x97207b095e4d5c9a6e4cfbfcd2c3358e03b90c4a",balancerHelpers:"0x94905e703fead7f0fd0eee355d267ee909784e6d",balancerMinter:"0x1bbfa323155526f54eec458571bb5a75e0c41507",balancerTokenAdmin:"0xab093cd16e765b5b23d34030aafaf026558e0a19",balTokenHolderFactory:"0xa98bce70c92ad2ef3288dbcd659bc0d6b62f8f13",childChainLiquidityGaugeFactory:"0xf9ac7b9df2b3454e841110cce5550bd5ac6f875f",childChainStreamer:"0x4de578134995bea8480d7696946217f356339ab8",gaugeController:"0x35c425234dc42e7402f54cc54573f77842963a56",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x1b57f637ce3408f1f834b0b70f9a595b062daea7",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",rewardsOnlyGauge:"0x868543bb787317632f94fcfe8eb85406b123590c",testBalancerToken:"0xa2d801064652a269d92ee2a59f3261155ec66830",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",votingEscrow:"0x16ba924752ef283c7946db8a122a6742aa35c1dc",votingEscrowDelegation:"0xdc6d62ae091ea77331542042a72e5e38b188837c",votingEscrowDelegationProxy:"0x98d0d0a65cbeccaa647a5a95cf27cf2f00e1231c",wstEthRateProvider:"0xd7fad3bd59d6477cbe1be7f646f7f1ba25b230f8"},tokens:{}},100:{contracts:{aaveLinearPoolFactory:"0x62aab12865d7281048c337d53a4dde9d770321e6",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x5addcca35b7a0d07c74063c48700c8590e87864e",authorizerAdaptorEntrypoint:"0x8f42adbba1b16eaae3bb5754915e0d06059add75",authorizerWithAdaptorValidation:"0x03f3fb107e74f2eac9358862e91ad3c692712054",bal:"0x7ef541e2a22058048904fe5744f9c7e4c57af717",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerQueries:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",balancerRelayer:"0x3536fd480ca495ac91e698a703248a8915c137a3",batchRelayerLibrary:"0xb9ad3466cdd42015cc05d4804dc68d562b6a2065",childChainGauge:"0x96484f2abf5e58b15176dbf1a799627b53f13b6d",childChainGaugeFactory:"0x83e443ef4f9963c77bd860f94500075556668cb8",childChainGaugeRewardHelper:"0xf7d5dce55e6d47852f054697bab6a1b48a00ddbd",childChainGaugeTokenAdder:"0x1802953277fd955f9a254b80aa0582f193cf1d77",childChainLiquidityGaugeFactory:"0x809b79b53f18e9bc08a961ed4678b901ac93213a",childChainStreamer:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",circuitBreakerLib:"0x54f8f9d28e26fa5864cfa80f50a5df95fd85f46a",composableStablePoolFactory:"0xd87f44df0159dc78029ab9ca7d7e57e7249f5acd",externalWeightedMath:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",gaugeWorkingBalanceHelper:"0x682f0ddbfd41d1272982f64a499fb62d80e27589",l2BalancerPseudoMinter:"0xa8920455934da4d853faac1f94fe7bef72943ef1",l2LayerZeroBridgeForwarder:"0xeb151668006cd04dadd098afd0a82e78f77076c3",managedPoolAddRemoveTokenLib:"0x4c32a8a8fda4e24139b51b456b42290f51d6a1c4",managedPoolAmmLib:"0xacf05be5134d64d150d153818f8c67ee36996650",managedPoolFactory:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",mockAaveLendingPool:"0x040dba12bb3d5c0a73ddfe84c220be3ddba06966",mockAaveLinearPool:"0x1ac55c31dac78ca943cb8ebfca5945ce09e036e2",mockComposableStablePool:"0xf3678a0b54c61ccd88ce321c2e07f87ac75f08b9",mockManagedPool:"0xc061361fda32ff5b65f7d98acc9a87349d3f0768",mockStaticAToken:"0x35d8f4a4c0e95f3d925cb4cbbbf513a0172ed8a4",mockWeightedPool:"0xd8752f9b0a2c2813796abd2be212a32ffd656ef1",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062",nullVotingEscrow:"0x013d4382f291be5688afbcc741ee8a24c66b2c92",poolRecoveryHelper:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",protocolFeePercentagesProvider:"0x41b953164995c11c81da73d212ed8af25741b7ac",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0xdae7e32adc5d490a43ccba1f0c736033f2b4efca",protocolIdRegistry:"0x6b5da774890db7b7b96c6f44e6a4b0f657399e2e",recoveryModeHelper:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",rewardsOnlyGauge:"0x45ffd460cc6642b8d8fb12373dfd77ceb0f4932b",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0x5dbad78818d4c8958eff2d5b95b28385a22113cd",votingEscrowDelegationProxy:"0x7a2535f5fb47b8e44c02ef5d9990588313fe8f05",weightedPoolFactory:"0x6cad2ea22bfa7f4c14aae92e47f510cd5c509bc7",weth:"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d"},tokens:{}},137:{contracts:{aaveLinearPoolFactory:"0xab2372275809e15198a7968c7f324053867cdb0c",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",authorizerAdaptorEntrypoint:"0xab093cd16e765b5b23d34030aafaf026558e0a19",authorizerWithAdaptorValidation:"0x020301b0a99efb6816b41007765fb577259ec418",bal:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",balancerHelpers:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",balancerQueries:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",balancerRelayer:"0xd18d5d377eb23362e54fa496597d7e962d56c554",batchRelayerLibrary:"0x4271de2595c3d85d2d455c5778adf2d7ad54322c",childChainGauge:"0xc9b36096f5201ea332db35d6d195774ea0d5988f",childChainGaugeFactory:"0x22625eedd92c81a219a83e1dc48f88d54786b017",childChainGaugeRewardHelper:"0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33",childChainGaugeTokenAdder:"0x1554ee754707d5c93b7934af404747aba521aaf2",childChainLiquidityGaugeFactory:"0x3b8ca519122cdd8efb272b0d3085453404b25bd0",childChainStreamer:"0x6f5a2ee11e7a772aeb5114a20d0d7c0ff61eb8a0",circuitBreakerLib:"0xedfd0a7005a7c72c44ff13bea370c86a9d11bee1",composableStablePoolFactory:"0x6ab5549bbd766a43afb687776ad8466f8b42f777",doubleEntrypointFixRelayer:"0x79d0011892fe558fc5a4ec7d4ca5db59069f460f",erc4626LinearPoolFactory:"0x5c5fcf8fbd4cd563ced27e7d066b88ee20e1867a",externalWeightedMath:"0x72ebafddc4c7d3eb702c81295d90a8b29f008a03",gaugeWorkingBalanceHelper:"0x08fd003d8f1892d4ec684e6c3ee0128081be461b",l2BalancerPseudoMinter:"0x47b489bf5836f83abd928c316f8e39bc0587b020",l2LayerZeroBridgeForwarder:"0xb98f54a74590a6e681ff664b2fa22ebffe1a929e",managedPoolAddRemoveTokenLib:"0xf553bf40db86c35f3058434039d51aad29c6180b",managedPoolAmmLib:"0xcefd59eedafa9ee8ccda1aaf944088e68b5bd890",managedPoolFactory:"0xb8dfa4fd0f083de2b7edc0d5eed5e684e54ba45d",merkleOrchard:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",mockAaveLendingPool:"0x0df6bb26533eb86f371b1f70eecdd955420523c6",mockAaveLinearPool:"0x0889b240a5876aae745ac19f1771853671dc5d36",mockComposableStablePool:"0x0f25823cf786b78696b16536e2f2b9835289ab51",mockErc4626LinearPool:"0xc55ec796a4debe625d95436a3531f4950b11bdcf",mockErc4626Token:"0x19dfef0a828eec0c85fbb335aa65437417390b85",mockManagedPool:"0x074efd7806e6c28e8b6611075b1aa62c6c408090",mockStaticAToken:"0xe72b2780d3c57f781bd4e8572e200cd7e9a447c2",mockWeightedPool:"0xb77e03655ee894aade216a83d05511a9f9895126",mockYearnLinearPool:"0xdae301690004946424e41051ace1791083be42a1",mockYearnTokenVault:"0x28fa1e40011adf98898e8243b2a48bb21ebf0c29",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x41b953164995c11c81da73d212ed8af25741b7ac",nullVotingEscrow:"0x1311fbc9f60359639174c1e7cc2032dbdb5cc4d1",poolRecoveryHelper:"0x495f696430f4a51f7fcb98fbe68a9cb7a07fb1ba",protocolFeePercentagesProvider:"0x42ac0e6fa47385d55aff070d79ef0079868c48a6",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0xef44d6786b2b4d544b7850fe67ce6381626bf2d6",protocolIdRegistry:"0xa523f47a933d5020b23629ddf689695aa94612dc",recoveryModeHelper:"0x1eb79551ca0e83ec145608bc39a0c7f10ca21aa5",rewardsOnlyGauge:"0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0xd961e30156c2e0d0d925a0de45f931cb7815e970",votingEscrowDelegationProxy:"0x0f08eef2c785aa5e7539684af04755dec1347b7c",weightedPoolFactory:"0xfc8a407bba312ac761d8bfe04ce1201904842b76",weth:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",yearnLinearPoolFactory:"0x0b576c1245f479506e7c8bbc4db4db07c1cd31f9"},tokens:{BAL:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",USDC:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",WBTC:"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",WETH:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",WMATIC:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"}},1101:{contracts:{aaveLinearPoolFactory:"0x4b7b369989e613ff2c65768b7cf930cc927f901e",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0xdcdbf71a870cc60c6f9b621e28a7d3ffd6dd4965",authorizerAdaptorEntrypoint:"0xb9ad3466cdd42015cc05d4804dc68d562b6a2065",authorizerWithAdaptorValidation:"0x8df317a729fcaa260306d7de28888932cb579b88",bal:"0x120ef59b80774f02211563834d8e3b72cb1649d6",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerQueries:"0x809b79b53f18e9bc08a961ed4678b901ac93213a",balancerRelayer:"0x4678731dc41142a902a114ac5b2f77b63f4a259d",batchRelayerLibrary:"0x54f8f9d28e26fa5864cfa80f50a5df95fd85f46a",childChainGauge:"0x59562f93c447656f6e4799fc1fc7c3d977c3324f",childChainGaugeFactory:"0x2498a2b0d6462d2260eac50ae1c3e03f4829ba95",circuitBreakerLib:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",composableStablePoolFactory:"0x8ea89804145c007e7d226001a96955ad53836087",erc4626LinearPoolFactory:"0x6b1da720be2d11d95177ccfc40a917c2688f396c",externalWeightedMath:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",gaugeWorkingBalanceHelper:"0xef454a7b3f965d3f6723e462405246f8cd865425",gearboxLinearPoolFactory:"0x687b8c9b41e01be8b591725fac5d5f52d0564d79",l2BalancerPseudoMinter:"0x475d18169be8a89357a9ee3ab00ca386d20fa229",l2LayerZeroBridgeForwarder:"0xded7fef7d8ecdcb74f22f0169e1a9ec696e6695d",managedPoolAddRemoveTokenLib:"0xacf05be5134d64d150d153818f8c67ee36996650",managedPoolAmmLib:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",managedPoolFactory:"0xaf779e58dafb4307b998c7b3c9d3f788dfc80632",mockAaveLendingPool:"0x161f4014c27773840ccb4ec1957113e6dd028846",mockAaveLinearPool:"0xbfd65c6160cfd638a85c645e6e6d8acac5dac935",mockComposableStablePool:"0x6f5f794a3cef904b8517c4c311de2fa837ff24a0",mockErc4626LinearPool:"0xac4b72c01072a52b73ca71105504f1372efcce0d",mockErc4626Token:"0x0c6052254551eae3ecac77b01dfcf1025418828f",mockGearboxDieselToken:"0x698caed853be9cea96c268f565e2b61d3b2bcda4",mockGearboxLinearPool:"0x32f03464fdf909fdf3798f87ff3712b10c59bd86",mockGearboxVault:"0x88ed12a90142fdbfe2a28f7d5b48927254c7e760",mockLiquidityBootstrappingPool:"0x3c87ff3e9307dbebfae720e04c6439e49f79bf9b",mockManagedPool:"0x522ee506a2f63d0ae1d79d6f5dbd9d0bca32c866",mockStaticAToken:"0x4638ab64022927c9bd5947607459d13f57f1551c",mockWeightedPool:"0x78385153d2f356c87001f09bb5424137c618d38b",mockYearnLinearPool:"0x02c9dcb975262719a61f9b40bdf0987ead9add3a",mockYearnTokenVault:"0xdbf7b9f1d2bfba14e42709f84dda3187ee410e38",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x3b1eb8eb7b43882b385ab30533d9a2bef9052a98",nullVotingEscrow:"0xd87f44df0159dc78029ab9ca7d7e57e7249f5acd",poolRecoveryHelper:"0xf7d5dce55e6d47852f054697bab6a1b48a00ddbd",protocolFeePercentagesProvider:"0x1802953277fd955f9a254b80aa0582f193cf1d77",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",protocolIdRegistry:"0x6cad2ea22bfa7f4c14aae92e47f510cd5c509bc7",recoveryModeHelper:"0x300ab2038eac391f26d9f895dc61f8f66a548833",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",votingEscrowDelegationProxy:"0xc7e5ed1054a24ef31d827e6f86caa58b3bc168d7",weightedPoolFactory:"0x03f3fb107e74f2eac9358862e91ad3c692712054",weth:"0x4f9a0e7fd2bf6067db6994cf12e4495df938e6e9",yearnLinearPoolFactory:"0x44d33798dddcdabc93fe6a40c80588033dc502d3"},tokens:{}},8453:{contracts:{aaveLinearPoolFactory:"0x687b8c9b41e01be8b591725fac5d5f52d0564d79",authorizer:"0x809b79b53f18e9bc08a961ed4678b901ac93213a",authorizerAdaptor:"0x6cad2ea22bfa7f4c14aae92e47f510cd5c509bc7",authorizerAdaptorEntrypoint:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",authorizerWithAdaptorValidation:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",bal:"0x4158734d47fc9692176b5085e0f52ee0da5d47f1",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerQueries:"0x300ab2038eac391f26d9f895dc61f8f66a548833",balancerRelayer:"0x76f7204b62f554b79d444588edac9dfa7032c71a",batchRelayerLibrary:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",childChainGauge:"0x59562f93c447656f6e4799fc1fc7c3d977c3324f",childChainGaugeFactory:"0x2498a2b0d6462d2260eac50ae1c3e03f4829ba95",circuitBreakerLib:"0xef454a7b3f965d3f6723e462405246f8cd865425",composableStablePoolFactory:"0x8df317a729fcaa260306d7de28888932cb579b88",erc4626LinearPoolFactory:"0x161f4014c27773840ccb4ec1957113e6dd028846",externalWeightedMath:"0x7920bfa1b2041911b354747ca7a6cdd2dfc50cfd",gaugeWorkingBalanceHelper:"0xa7d524046ef89de9f8e4f2d7b029f66ccb738d48",gearboxLinearPoolFactory:"0x9dd32684176638d977883448a4c914311c07bd62",l2BalancerPseudoMinter:"0xc7e5ed1054a24ef31d827e6f86caa58b3bc168d7",l2LayerZeroBridgeForwarder:"0x8ea89804145c007e7d226001a96955ad53836087",managedPoolAddRemoveTokenLib:"0xb19382073c7a0addbb56ac6af1808fa49e377b75",managedPoolAmmLib:"0x7d2248f194755dca9a1887099394f39476d28c9a",managedPoolFactory:"0x9a62c91626d39d0216b3959112f9d4678e20134d",mockAaveLendingPool:"0x88ed12a90142fdbfe2a28f7d5b48927254c7e760",mockAaveLinearPool:"0x712e23a9b91aa30ee7997d1c7a1a285d4c7912d1",mockComposableStablePool:"0x7f6e9d6a4093af9d09bae92d24bfe42fc5369ae6",mockErc4626LinearPool:"0x1cc2e10c486ffb7228810b9c7c183d0cd92cdf44",mockErc4626Token:"0x4638ab64022927c9bd5947607459d13f57f1551c",mockGearboxDieselToken:"0xb521dd5c8e13fe202626cac98873fea2b7760ce4",mockGearboxLinearPool:"0x3c28a59356b473847aaa5e0b6f561636079213a6",mockGearboxVault:"0x79e435875ccee3cd9e8da23fe34f9a011d05ea6c",mockLiquidityBootstrappingPool:"",mockManagedPool:"0xe50ad96af9370d05d3c1ce85f17c31557b29c4ee",mockStaticAToken:"0x698caed853be9cea96c268f565e2b61d3b2bcda4",mockWeightedPool:"0xd9dbbfaa703f3c33838365ae00fe4eb22cdf8d46",mockYearnLinearPool:"0x369877467fc3b6774de4e11e0c0abbde70eb40fd",mockYearnTokenVault:"0xdbf7b9f1d2bfba14e42709f84dda3187ee410e38",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x0c6052254551eae3ecac77b01dfcf1025418828f",nullVotingEscrow:"0x475d18169be8a89357a9ee3ab00ca386d20fa229",poolRecoveryHelper:"0x03f3fb107e74f2eac9358862e91ad3c692712054",protocolFeePercentagesProvider:"0xded7fef7d8ecdcb74f22f0169e1a9ec696e6695d",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0xacf05be5134d64d150d153818f8c67ee36996650",protocolIdRegistry:"0x682f0ddbfd41d1272982f64a499fb62d80e27589",recoveryModeHelper:"0x313a8d36b1d90a4cba3a505fdc3480c3870be053",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",votingEscrowDelegationProxy:"0xd87f44df0159dc78029ab9ca7d7e57e7249f5acd",weightedPoolFactory:"0x4c32a8a8fda4e24139b51b456b42290f51d6a1c4",weth:"0x4200000000000000000000000000000000000006",yearnLinearPoolFactory:"0x44d33798dddcdabc93fe6a40c80588033dc502d3"},tokens:{}},42161:{contracts:{aaveLinearPoolFactory:"0x7396f99b48e7436b152427bfa3dd6aa8c7c6d05b",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",authorizerAdaptorEntrypoint:"0x97207b095e4d5c9a6e4cfbfcd2c3358e03b90c4a",authorizerWithAdaptorValidation:"0x6b1da720be2d11d95177ccfc40a917c2688f396c",bal:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",balancerHelpers:"0x77d46184d22ca6a3726a2f500c776767b6a3d6ab",balancerQueries:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",balancerRelayer:"0x598ce0f1ab64b27256759ef99d883ee51138b9bd",batchRelayerLibrary:"0xd87f44df0159dc78029ab9ca7d7e57e7249f5acd",childChainGauge:"0xa523f47a933d5020b23629ddf689695aa94612dc",childChainGaugeFactory:"0x6817149cb753bf529565b4d023d7507ed2ff4bc0",childChainGaugeRewardHelper:"0xa0dabebaad1b243bbb243f933013d560819eb66f",childChainGaugeTokenAdder:"0xbfd9769b061e57e478690299011a028194d66e3c",childChainLiquidityGaugeFactory:"0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2",childChainStreamer:"0xd7fad3bd59d6477cbe1be7f646f7f1ba25b230f8",circuitBreakerLib:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",composableStablePoolFactory:"0x2498a2b0d6462d2260eac50ae1c3e03f4829ba95",doubleEntrypointFixRelayer:"0x8e5698dc4897dc12243c8642e77b4f21349db97c",erc4626LinearPoolFactory:"0x7adbdabaa80f654568421887c12f09e0c7bd9629",externalWeightedMath:"0x03f3fb107e74f2eac9358862e91ad3c692712054",gaugeWorkingBalanceHelper:"0xea924b45a3fcdaadf4e5cfb1665823b8f8f2039b",l2BalancerPseudoMinter:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",l2LayerZeroBridgeForwarder:"0x12ca9de662a7bf5dc89e034a5083ef751b08ede7",managedPoolAddRemoveTokenLib:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",managedPoolAmmLib:"0x300ab2038eac391f26d9f895dc61f8f66a548833",managedPoolFactory:"0x8ea89804145c007e7d226001a96955ad53836087",merkleOrchard:"0x9805dcfd25e6de36bad8fe9d3fe2c9b44b764102",mockAaveLendingPool:"0x533a16f90e7d3ca31dbc608e5ec54967710f0d2a",mockAaveLinearPool:"0x19b1c92631405a0a9495ccba0becf4f2e8e908bd",mockComposableStablePool:"0xff7e6b102516e071dcda763ee9d02c1515481db5",mockErc4626LinearPool:"0x3f53a862919ccfa023cb6ace91378a79fb0f6bf5",mockErc4626Token:"0x4be0e4d6184348c5ba845a4010528cfc779610b8",mockManagedPool:"0xf5a71257b331c02da1eae52151c3d600f16b76f0",mockStaticAToken:"0x8b7854708c0c54f9d7d1ff351d4f84e6de0e134c",mockWeightedPool:"0x129c6402ff88611aa59bf2e14b39e091822e2c9c",mockYearnLinearPool:"0x1fa7f727934226aedab636d62a084931b97d366b",mockYearnTokenVault:"0xb15608d28eb43378a7e7780add3fe9bc132baf40",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x1802953277fd955f9a254b80aa0582f193cf1d77",nullVotingEscrow:"0x9da18982a33fd0c7051b19f0d7c76f2d5e7e017c",poolRecoveryHelper:"0xb5e56cc3d2e38e53b1166175c59e921a37cdc1e2",protocolFeePercentagesProvider:"0x5ef4c5352882b10893b70dbcaa0c000965bd23c5",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x70bbd023481788e443472e123ab963e5ebf58d06",protocolIdRegistry:"0x5cf4928a3205728bd12830e1840f7db85c62a4b9",recoveryModeHelper:"0x682f0ddbfd41d1272982f64a499fb62d80e27589",rewardsOnlyGauge:"0x41b953164995c11c81da73d212ed8af25741b7ac",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0x6b5da774890db7b7b96c6f44e6a4b0f657399e2e",votingEscrowDelegationProxy:"0x81cfae226343b24ba12ec6521db2c79e7aeeb310",weightedPoolFactory:"0xc7e5ed1054a24ef31d827e6f86caa58b3bc168d7",weth:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",yearnLinearPoolFactory:"0x19dfef0a828eec0c85fbb335aa65437417390b85"},tokens:{BADGER:"0xbfa641051ba0a0ad1b0acf549a89536a0d76472e",CRV:"0x11cdb42b0eb46d95f990bedd4695a6e3fa034978",LDO:"0x13ad51ed4f1b7e9dc168d8a00cb3f4ddd85efa60",renBTC:"0xdbf31df14b66535af65aac99c32e9ea844e14501",SUSHI:"0xd4d42f0b6def4ce0383636770ef773390d85c61a",USDC:"0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",USDT:"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",WBTC:"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",WETH:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1"}},43114:{contracts:{aaveLinearPoolFactory:"0x6caf662b573f577de01165d2d38d1910bba41f8a",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0xdae7e32adc5d490a43ccba1f0c736033f2b4efca",authorizerAdaptorEntrypoint:"0x4e7bbd911cf1efa442bc1b2e9ea01ffe785412ec",authorizerWithAdaptorValidation:"0x8df317a729fcaa260306d7de28888932cb579b88",bal:"0xe15bcb9e0ea69e6ab9fa080c4c4a5632896298c3",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerQueries:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",balancerRelayer:"0x03f1ab8b19bce21eb06c364aec9e40322572a1e9",batchRelayerLibrary:"0x45ffd460cc6642b8d8fb12373dfd77ceb0f4932b",childChainGauge:"0x4b7b369989e613ff2c65768b7cf930cc927f901e",childChainGaugeFactory:"0x161f4014c27773840ccb4ec1957113e6dd028846",childChainGaugeRewardHelper:"0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647",childChainGaugeTokenAdder:"0xf302f9f50958c5593770fdf4d4812309ff77414f",childChainLiquidityGaugeFactory:"0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2",childChainStreamer:"0xd7fad3bd59d6477cbe1be7f646f7f1ba25b230f8",circuitBreakerLib:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",composableStablePoolFactory:"0x3b1eb8eb7b43882b385ab30533d9a2bef9052a98",distributionScheduler:"0xc128a9954e6c874ea3d62ce62b468ba073093f25",erc4626LinearPoolFactory:"0x4507d91cd2c0d51d9b4f30bf0b93afc938a70ba5",externalWeightedMath:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",gaugeWorkingBalanceHelper:"0x687b8c9b41e01be8b591725fac5d5f52d0564d79",l2BalancerPseudoMinter:"0xea924b45a3fcdaadf4e5cfb1665823b8f8f2039b",l2LayerZeroBridgeForwarder:"0x4638ab64022927c9bd5947607459d13f57f1551c",managedPoolAddRemoveTokenLib:"0xacf05be5134d64d150d153818f8c67ee36996650",managedPoolAmmLib:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",managedPoolFactory:"0x03f3fb107e74f2eac9358862e91ad3c692712054",mockAaveLendingPool:"0x57ea28a99394978d060e483477c0fd9fb9afa96c",mockAaveLinearPool:"0xa826a114b0c7db4d1ff4a4be845a78998c64564c",mockComposableStablePool:"0xea4643102dfc03d5e382e7827bf767f6587e9965",mockErc4626LinearPool:"0xed3e2f496cbcd8e212192fb8d1499842f04a0d19",mockErc4626Token:"0x2ebe41e1aa44d61c206a94474932dadc7d3fd9e3",mockManagedPool:"0x3fb81f6fb0dd94c6fc7e138887f1ca4cdb5e2999",mockStaticAToken:"0xd8b6b96c88ad626eb6209c4876e3b14f45f8803a",mockWeightedPool:"0xb2b5b452d53401391155ea48c4451f6e9b0dd058",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",nullVotingEscrow:"0x6b1da720be2d11d95177ccfc40a917c2688f396c",poolRecoveryHelper:"0x3b8ca519122cdd8efb272b0d3085453404b25bd0",protocolFeePercentagesProvider:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x8f42adbba1b16eaae3bb5754915e0d06059add75",recoveryModeHelper:"0x300ab2038eac391f26d9f895dc61f8f66a548833",rewardsOnlyGauge:"0x41b953164995c11c81da73d212ed8af25741b7ac",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",votingEscrowDelegationProxy:"0x0c6052254551eae3ecac77b01dfcf1025418828f",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",weth:"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7"},tokens:{}},11155111:{contracts:{aaveLinearPoolFactory:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0xdcdbf71a870cc60c6f9b621e28a7d3ffd6dd4965",authorizerAdaptorEntrypoint:"0xb9ad3466cdd42015cc05d4804dc68d562b6a2065",authorizerWithAdaptorValidation:"0xb521dd5c8e13fe202626cac98873fea2b7760ce4",bal:"0xb19382073c7a0addbb56ac6af1808fa49e377b75",balancerHelpers:"0xdae7e32adc5d490a43ccba1f0c736033f2b4efca",balancerMinter:"0x1783cd84b3d01854a96b4ed5843753c2ccbd574a",balancerQueries:"0x1802953277fd955f9a254b80aa0582f193cf1d77",balancerRelayer:"0x6d5342d716c13d9a3f072a2b11498624ade27f90",balancerTokenAdmin:"0x7d2248f194755dca9a1887099394f39476d28c9a",balTokenHolderFactory:"0xef454a7b3f965d3f6723e462405246f8cd865425",batchRelayerLibrary:"0x5f6848976c2914403b425f18b589a65772f082e3",childChainGauge:"0xc49ca921c4cd1117162eaeec0ee969649997950c",childChainGaugeFactory:"0xc370cd86d5488c1788b62f11b09adb0c47f47440",circuitBreakerLib:"0x4c0c450bedb9282a7a54fcb316c285e85a8c0265",composableStablePoolFactory:"0xa3fd20e29358c056b727657e83dfd139abbc9924",erc4626LinearPoolFactory:"0x59562f93c447656f6e4799fc1fc7c3d977c3324f",externalWeightedMath:"0x8246e571d88acd1346179cc3641de87fe3544d7a",feeDistributor:"0xa6971317fb06c76ef731601c64433a4846fca707",gaugeAdder:"0xe42ffa682a26ef8f25891db4882932711d42e467",gaugeController:"0x577e5993b9cc480f07f98b5ebd055604bd9071c4",gaugeWorkingBalanceHelper:"0x2e4abed3362a622c5f712bb183005a476b146bd3",gearboxLinearPoolFactory:"0x8df317a729fcaa260306d7de28888932cb579b88",l2BalancerPseudoMinter:"0xb51f7ffc97cedfb6922e8b9bbf3ef7575fafd630",l2LayerZeroBridgeForwarder:"0xc7e5ed1054a24ef31d827e6f86caa58b3bc168d7",liquidityGaugeFactory:"0x2ff226cd12c80511a641a6101f071d853a4e5363",liquidityGaugeV5:"0x82416ce6ea7dd4923d4a3ed70a79b4a432a382c4",managedPoolAddRemoveTokenLib:"0xc7416e4f3715467ddcf28dc409a9483b2e4d4f43",managedPoolAmmLib:"0xa30ade89e6af5b0ca515cd78e44f9ad0c63989b2",managedPoolFactory:"0x63e179c5b6d54b2c2e36b9ce4085ef5a8c86d50c",mockAaveLendingPool:"0x300ab2038eac391f26d9f895dc61f8f66a548833",mockAaveLinearPool:"0xe4efd99f3c03778ba913eb578c599329634e2bd7",mockComposableStablePool:"0xa8d865fe1d68a405b29f884358468c9b52d4841d",mockErc4626LinearPool:"0x0c2ead6f2dc2a9385187023f4cec5925337b330f",mockErc4626Token:"0x2498a2b0d6462d2260eac50ae1c3e03f4829ba95",mockGearboxDieselToken:"0x4c32a8a8fda4e24139b51b456b42290f51d6a1c4",mockGearboxLinearPool:"0x112a7b7ca66e6963c49bc523a415f7d8cdb806b9",mockGearboxVault:"0x3b1eb8eb7b43882b385ab30533d9a2bef9052a98",mockLiquidityBootstrappingPool:"0xe90472ffc41d7ddf8e3b456bba748e3f22c59c6f",mockManagedPool:"0xe458224ca8d6605c87b73e92aa5cb7a4e77770f3",mockShareToken:"0x0c6052254551eae3ecac77b01dfcf1025418828f",mockSilo:"0x6b1da720be2d11d95177ccfc40a917c2688f396c",mockSiloLinearPool:"0xa149cf2d795aab83a15673f5beade9361e4e3f65",mockSiloRepository:"0xa7d524046ef89de9f8e4f2d7b029f66ccb738d48",mockStaticAToken:"0x03f3fb107e74f2eac9358862e91ad3c692712054",mockWeightedPool:"0xf7a7e1f48fa43cb7919ff4eb362c5be78092df4a",mockYearnLinearPool:"0x016b7366f76aa2794097798b90cf239796aeff8d",mockYearnTokenVault:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x45ffd460cc6642b8d8fb12373dfd77ceb0f4932b",nullVotingEscrow:"0x475d18169be8a89357a9ee3ab00ca386d20fa229",omniVotingEscrowAdaptor:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",poolRecoveryHelper:"0x1b6f057520b4e826271d47b8bdab98e35af17e59",preseededVotingEscrowDelegation:"0xb1a4fe1c6d25a0ddab47431a92a723dd71d9021f",protocolFeePercentagesProvider:"0xf7d5dce55e6d47852f054697bab6a1b48a00ddbd",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x809b79b53f18e9bc08a961ed4678b901ac93213a",protocolIdRegistry:"0x6cad2ea22bfa7f4c14aae92e47f510cd5c509bc7",recoveryModeHelper:"0x5419e785b83ad3539d3a8741c0abb77d90d8784e",siloLinearPoolFactory:"0x8ea89804145c007e7d226001a96955ad53836087",singleRecipientGauge:"0x9a5ddde7056ceffb03d9962c4549ac1c4ad1f985",singleRecipientGaugeFactory:"0x7ee4d172ae50c627a1bfa9a99e1260c54da26fdf",smartWalletChecker:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",testBalancerToken:"0xb19382073c7a0addbb56ac6af1808fa49e377b75",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0x927906bbac747c13c75f6447fe8abb490eab456c",votingEscrow:"0x150a72e4d4d81bbf045565e232c50ed0931ad795",votingEscrowDelegation:"0x0c5538098ebe88175078972f514c9e101d325d4f",votingEscrowDelegationProxy:"0xd87f44df0159dc78029ab9ca7d7e57e7249f5acd",votingEscrowRemapper:"0xf24917fb88261a37cc57f686ebc831a5c0b9fd39",weightedPoolFactory:"0x7920bfa1b2041911b354747ca7a6cdd2dfc50cfd",weth:"0x7b79995e5f793a07bc00c21412e50ecae098e7f9",yearnLinearPoolFactory:"0xacf05be5134d64d150d153818f8c67ee36996650"},tokens:{}}};const wn="0xBA12222222228d8Ba445958a75a0704d566BF2C8",xn={[Pe.MAINNET]:{chainId:Pe.MAINNET,addresses:{contracts:{multicall:"0xeefba1e63905ef1d7acba5a8513c70307c1ce441",poolDataQueries:"0xf5CDdF6feD9C589f1Be04899F48f9738531daD59",lidoRelayer:"0xdcdbf71A870cc60C6F9B621E28a7D3Ffd6Dd4965",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",gaugeControllerCheckpointer:"0x8e5698dc4897dc12243c8642e77b4f21349db97c",veBalProxy:"0x6f5a2eE11E7a772AeB5114A20d0D7c0ff61EB8A0",gyroConfigProxy:"0xac89cc9d78bbad7eb3a02601b4d65daa1f908aa6",...Pn[Pe.MAINNET].contracts},tokens:{bal:Pn[Pe.MAINNET].contracts.bal,wrappedNativeAsset:Pn[Pe.MAINNET].contracts.weth,bbaUsd:Pn[Pe.MAINNET].tokens.bb_a_usd,lbpRaisingTokens:["0x6b175474e89094c44da98b954eedeac495271d0f","0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"],stETH:"0xae7ab96520de3a18e5e111b5eaab095312d7fe84",wstETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",...Pn[Pe.MAINNET].tokens}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"ethereum"}},pools:{wETHwstETH:{id:"0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080",address:"0x32296969ef14eb0c6d29669c550d4a0449130230"}},poolsToIgnore:["0xbd482ffb3e6e50dc1c437557c3bea2b68f3683ee0000000000000000000003c6","0x0afbd58beca09545e4fb67772faf3858e610bcd00000000000000000000004b9","0xf22ff21e17157340575158ad7394e068048dd98b0000000000000000000004b8","0xf71d0774b214c4cf51e33eb3d30ef98132e4dbaa00000000000000000000046e"],sorConnectingTokens:[{symbol:"wEth",address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},{symbol:"wstEth",address:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"},{symbol:"DOLA",address:"0x865377367054516e17014CcdED1e7d814EDC9ce4"},{symbol:"rEth",address:"0xae78736cd615f374d3085123a210448e74fc6393"},{symbol:"ETHx",address:"0xa35b1b31ce002fbf2058d22f30f95d405200a15b"}],sorTriPathMidPoolIds:["0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112"]},[Pe.POLYGON]:{chainId:Pe.POLYGON,addresses:{contracts:{multicall:"0xa1B2b503959aedD81512C37e9dce48164ec6a94d",poolDataQueries:"0x84813aA3e079A665C0B80F944427eE83cBA63617",gaugeClaimHelper:"0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33",gyroConfigProxy:"0xfdc2e9e03f515804744a40d0f8d25c16e93fbe67",...Pn[Pe.POLYGON].contracts},tokens:{bal:Pn[Pe.POLYGON].contracts.bal,wrappedNativeAsset:Pn[Pe.POLYGON].contracts.weth,lbpRaisingTokens:["0x8f3cf7ad23cd3cadbd9735aff958023239c6a063","0x2791bca1f2de4661ed88a30c99a7a9449aa84174","0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"],...Pn[Pe.POLYGON].tokens}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-polygon-prune-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-polygon",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/polygon-blocks"},thirdParty:{coingecko:{nativeAssetId:"",platformId:"polygon-pos"}},pools:{},poolsToIgnore:["0x600bd01b6526611079e12e1ff93aba7a3e34226f0000000000000000000009e4","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455"],sorConnectingTokens:[{symbol:"weth",address:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"},{symbol:"bbrz2",address:"0xe22483774bd8611be2ad2f4194078dac9159f4ba"}]},[Pe.ARBITRUM]:{chainId:Pe.ARBITRUM,addresses:{contracts:{multicall:"0x269ff446d9892c9e19082564df3f5e8741e190a1",poolDataQueries:"0x7Ba29fE8E83dd6097A7298075C4AFfdBda3121cC",gaugeClaimHelper:"0xa0dabebaad1b243bbb243f933013d560819eb66f",gyroConfigProxy:"0x9b683ca24b0e013512e2566b68704dbe9677413c",...Pn[Pe.ARBITRUM].contracts},tokens:{bal:Pn[Pe.ARBITRUM].contracts.bal,wrappedNativeAsset:Pn[Pe.ARBITRUM].contracts.weth,lbpRaisingTokens:["0xda10009cbd5d07dd0cecc66161fc93d7c9000da1","0xff970a61a04b1ca14834a43f5de4533ebddb5cc8","0x82af49447d8a07e3bd95bd0d56f35241523fbab1"],...Pn[Pe.ARBITRUM].tokens}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-arbitrum-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-arbitrum",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-one-blocks"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"arbitrum-one"}},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"}],sorTriPathMidPoolIds:["0x178e029173417b1f9c8bc16dcec6f697bc323746000200000000000000000158","0x0052688295413b32626d226a205b95cdb337de860002000000000000000003d1","0xa1a8bf131571a2139feb79401aa4a2e9482df6270002000000000000000004b4"]},[Pe.GOERLI]:{chainId:Pe.GOERLI,addresses:{contracts:{multicall:"0x77dCa2C955b15e9dE4dbBCf1246B4B85b651e50e",poolDataQueries:"0x6d3197d069F8F9f1Fe7e23665Bc64CB77ED8b089",veBal:"0x33A99Dcc4C85C014cf12626959111D5898bbCAbF",veBalProxy:"0xA1F107D1cD709514AE8A914eCB757E95f9cedB31",erc4626LinearPoolFactory:"0xba240c856498e2d7a70af4911aafae0d6b565a5b",aaveLinearPoolFactory:"0x76578ecf9a141296ec657847fb45b0585bcda3a6",...Pn[Pe.GOERLI].contracts},tokens:{bal:Pn[Pe.GOERLI].contracts.bal,wrappedNativeAsset:Pn[Pe.GOERLI].contracts.weth}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-goerli-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-goerli",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/goerli-blocks"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"ethereum"}},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}]},[Pe.OPTIMISM]:{chainId:Pe.OPTIMISM,addresses:{contracts:{multicall:"0x2dc0e2aa608532da689e89e237df582b783e552c",poolDataQueries:"0x6B5dA774890Db7B7b96C6f44e6a4b0F657399E2e",gyroConfigProxy:"0x32acb44fc929339b9f16f0449525cc590d2a23f3",...Pn[Pe.OPTIMISM].contracts},tokens:{bal:"0xfe8b128ba8c78aabc59d4c64cee7ff28e9379921",wrappedNativeAsset:Pn[Pe.OPTIMISM].contracts.weth,lbpRaisingTokens:["0xda10009cbd5d07dd0cecc66161fc93d7c9000da1","0x7f5c764cbc14f9669b88837ca1490cca17c31607","0x4200000000000000000000000000000000000006"],...Pn[Pe.OPTIMISM].tokens}},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"optimistic-ethereum"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/beethovenx-optimism",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-optimism",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/lyra-finance/optimism-mainnet-blocks"},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0x4200000000000000000000000000000000000006"}]},[Pe.GNOSIS]:{chainId:Pe.GNOSIS,addresses:{contracts:{multicall:"0xbb6fab6b627947dae0a75808250d8b2652952cb5",poolDataQueries:"0x3f170631ed9821Ca51A59D996aB095162438DC10",...Pn[Pe.GNOSIS].contracts},tokens:{wrappedNativeAsset:Pn[Pe.GNOSIS].contracts.weth,bal:Pn[Pe.GNOSIS].contracts.bal,...Pn[Pe.GNOSIS].tokens}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gnosis-chain-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-gnosis-chain"},thirdParty:{coingecko:{nativeAssetId:"xdai",platformId:"xdai"}},averageBlockTime:5,pools:{},sorConnectingTokens:[{symbol:"weth",address:"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d"},{symbol:"wsEth",address:"0x6C76971f98945AE98dD7d4DFcA8711ebea946eA6"}],sorTriPathMidPoolIds:["0xeb30c85cc528537f5350cf5684ce6a4538e13394000200000000000000000059","0x7644fa5d0ea14fcf3e813fdf93ca9544f8567655000000000000000000000066"]},[Pe.FANTOM]:{chainId:Pe.FANTOM,addresses:{contracts:{vault:"0x20dd72Ed959b6147912C2e529F0a0C651c33c9ce",multicall:"0x66335d7ad8011f6aa3f48aadcb523b62b38ed961",poolDataQueries:"0xb132F1E145DcC085980C531e2dA81f2b84efc14F",gaugeClaimHelper:"0x0000000000000000000000000000000000000000",balancerRelayer:"0x419f7925b8c9e409b6ee8792242556fa210a7a09",balancerHelpers:"0xfE18C7C70b0a2c6541bEde0367124278BC345Dc8",weightedPoolFactory:"0x60467cb225092cE0c989361934311175f437Cf53",composableStablePoolFactory:"0x44814E3A603bb7F1198617995c5696C232F6e8Ed",yearnLinearPoolFactory:"0x1f73ae6ed391a2b1e84ff988a1bb5394b78a4a71"},tokens:{bal:"0xF24Bcf4d1e507740041C9cFd2DddB29585aDCe1e",wrappedNativeAsset:"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",lbpRaisingTokens:["0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83","0x04068DA6C83AFCFA0e13ba15A6696662335D5B75","0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E"]}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/beethovenx-v2-fantom",gaugesSubgraph:"",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/fantom-blocks"},thirdParty:{coingecko:{nativeAssetId:"ftm",platformId:"fantom"}},pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"wftm",address:"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"}]},[Pe.SEPOLIA]:{chainId:Pe.SEPOLIA,addresses:{contracts:{multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"0x9805dcfD25e6De36bad8fe9D3Fe2c9b44B764102",...Pn[Pe.SEPOLIA].contracts},tokens:{bal:Pn[Pe.SEPOLIA].contracts.bal,wrappedNativeAsset:Pn[Pe.SEPOLIA].contracts.weth,...Pn[Pe.SEPOLIA].tokens}},urls:{subgraph:"https://api.studio.thegraph.com/query/24660/balancer-sepolia-v2/version/latest"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"ethereum"}},pools:{},poolsToIgnore:[],sorConnectingTokens:[]},[Pe.ZKEVM]:{chainId:Pe.ZKEVM,addresses:{contracts:{balancerMinter:"0x475D18169BE8a89357A9ee3Ab00ca386d20fA229",multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"0xF24917fB88261a37Cc57F686eBC831a5c0B9fD39",...Pn[Pe.ZKEVM].contracts},tokens:{bal:Pn[Pe.ZKEVM].contracts.bal,wrappedNativeAsset:Pn[Pe.ZKEVM].contracts.weth,...Pn[Pe.ZKEVM].tokens}},urls:{subgraph:"https://api.studio.thegraph.com/query/24660/balancer-polygon-zk-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/24660/balancer-gauges-polygon-zk/version/latest"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"polygon-zkevm"}},averageBlockTime:4,multicallBatchSize:128,pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"weth",address:"0x4F9A0e7FD2Bf6067db6994CF12E4495Df938E6e9"},{symbol:"wsEth",address:"0x5D8cfF95D7A57c0BF50B30b43c7CC0D52825D4a9"}]},[Pe.AVALANCHE]:{chainId:Pe.AVALANCHE,addresses:{contracts:{balancerMinter:"0xEa924b45a3fcDAAdf4E5cFB1665823B8F8F2039B",multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"0x67af5D428d38C5176a286a2371Df691cDD914Fb8",...Pn[Pe.AVALANCHE].contracts},tokens:{bal:Pn[Pe.AVALANCHE].contracts.bal,wrappedNativeAsset:Pn[Pe.AVALANCHE].contracts.weth,...Pn[Pe.AVALANCHE].tokens}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-avalanche-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-avalanche",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/iliaazhel/avalanche-blocks"},thirdParty:{coingecko:{nativeAssetId:"avalanche-2",platformId:"avalanche"}},pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"WAVAX",address:"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7"},{symbol:"sAVAX",address:"0x2b2c81e08f1af8835a78bb2a90ae924ace0ea4be"}]},[Pe.BASE]:{chainId:Pe.BASE,addresses:{contracts:{balancerMinter:"0xc7E5ED1054A24Ef31D827E6F86caA58B3Bc168d7",multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"",...Pn[Pe.BASE].contracts},tokens:{bal:Pn[Pe.BASE].contracts.bal,wrappedNativeAsset:Pn[Pe.BASE].contracts.weth,...Pn[Pe.BASE].tokens}},urls:{subgraph:"https://api.studio.thegraph.com/query/24660/balancer-base-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/24660/balancer-gauges-base/version/latest",blockNumberSubgraph:"https://api.studio.thegraph.com/query/48427/bleu-base-blocks/version/latest"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"base"}},averageBlockTime:2,pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"weth",address:"0x4200000000000000000000000000000000000006"}],sorTriPathMidPoolIds:["0x2db50a0e0310723ef0c2a165cb9a9f80d772ba2f00020000000000000000000d"]}},En=e=>xn[e].addresses;var An;!function(e){e.ABOVE_MAX_TOKENS="ABOVE_MAX_TOKENS",e.BELOW_MIN_TOKENS="BELOW_MIN_TOKENS",e.EXIT_DELTA_AMOUNTS="EXIT_DELTA_AMOUNTS",e.FEE_PROVIDER_NOT_PROVIDED="FEE_PROVIDER_NOT_PROVIDED",e.GAUGES_HELPER_ADDRESS_NOT_PROVIDED="GAUGES_HELPER_ADDRESS_NOT_PROVIDED",e.GAUGES_NOT_FOUND="GAUGES_NOT_FOUND",e.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED="GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED",e.GAUGES_REWARD_TOKEN_EMPTY="GAUGES_REWARD_TOKEN_EMPTY",e.ILLEGAL_PARAMETER="ILLEGAL_PARAMETER",e.INTERNAL_ERROR_INVALID_ABI="INTERNAL_ERROR_INVALID_ABI",e.INPUT_LENGTH_MISMATCH="INPUT_LENGTH_MISMATCH",e.INPUT_OUT_OF_BOUNDS="INPUT_OUT_OF_BOUNDS",e.INPUT_TOKEN_INVALID="INPUT_TOKEN_INVALID",e.INVALID_PROTOCOL_ID="INVALID_PROTOCOL_ID",e.INVALID_SWAP_FEE_PERCENTAGE="INVALID_SWAP_FEE_PERCENTAGE",e.INVALID_WEIGHTS="INVALID_WEIGHTS",e.JOIN_DELTA_AMOUNTS="JOIN_DELTA_AMOUNTS",e.JOIN_WITH_ZERO_AMOUNT="JOIN_WITH_ZERO_AMOUNT",e.MISSING_AMP="MISSING_AMP",e.MISSING_DECIMALS="MISSING_DECIMALS",e.MISSING_PRICE_RATE="MISSING_PRICE_RATE",e.MISSING_TOKENS="MISSING_TOKENS",e.MISSING_WEIGHT="MISSING_WEIGHT",e.NO_POOL_DATA="NO_POOL_DATA",e.NO_VALUE_PARAMETER="NO_VALUE_PARAMETER",e.POOL_DOESNT_EXIST="POOL_DOESNT_EXIST",e.QUERY_BATCH_SWAP="QUERY_BATCH_SWAP",e.RELAY_SWAP_AMOUNTS="RELAY_SWAP_AMOUNTS",e.REWARD_TOKEN_ZERO="REWARD_TOKEN_ZERO",e.TIMESTAMP_IN_THE_FUTURE="TIMESTAMP_IN_THE_FUTURE",e.TOKEN_MISMATCH="TOKEN_MISMATCH",e.UNSUPPORTED_PAIR="UNSUPPORTED_PAIR",e.UNSUPPORTED_POOL_TYPE="UNSUPPORTED_POOL_TYPE",e.UNSUPPORTED_POOL_TYPE_VERSION="UNSUPPORTED_POOL_TYPE_VERSION"}(An||(An={}));class vn extends Error{constructor(e){super(vn.getMessage(e)),this.code=e,this.name="BalancerError"}static getMessage(e){switch(e){case An.ABOVE_MAX_TOKENS:return"the array contains more tokens than the maximum allowed";case An.BELOW_MIN_TOKENS:return"the array does not contain the minimum quantity of tokens";case An.EXIT_DELTA_AMOUNTS:return"Error when checking exit call deltas";case An.FEE_PROVIDER_NOT_PROVIDED:return"Fee Provider Repository has not been provided";case An.GAUGES_HELPER_ADDRESS_NOT_PROVIDED:return"Liquidity Gauges Helper Contract address has not been provided";case An.GAUGES_NOT_FOUND:return"Liquidity Gauges not found with given addresses";case An.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED:return"Liquidity Gauges Reward Minter Contract address has not been provided";case An.GAUGES_REWARD_TOKEN_EMPTY:return"No Reward Tokens for Liquidity Gauges provided";case An.INPUT_LENGTH_MISMATCH:return"input length mismatch";case An.INPUT_OUT_OF_BOUNDS:return"input out of bounds";case An.INPUT_TOKEN_INVALID:return"input token invalid";case An.INVALID_PROTOCOL_ID:return"The provided protocol id does not correspond to a protocol";case An.INVALID_SWAP_FEE_PERCENTAGE:return"The swap fee needs to be greater than zero and less than 1e17(10%)";case An.INVALID_WEIGHTS:return"The sum of the weights needs to be equal to 1e18(100%)";case An.JOIN_DELTA_AMOUNTS:return"Error when checking join call deltas";case An.JOIN_WITH_ZERO_AMOUNT:return"Cant join pool with 0 amount of token in";case An.MISSING_AMP:return"missing amp";case An.MISSING_DECIMALS:return"missing decimals";case An.MISSING_PRICE_RATE:return"missing price rate";case An.MISSING_TOKENS:return"missing tokens";case An.MISSING_WEIGHT:return"missing weight";case An.NO_POOL_DATA:return"no pool data";case An.NO_VALUE_PARAMETER:return"Illegal value passed as parameter";case An.POOL_DOESNT_EXIST:return"balancer pool does not exist";case An.RELAY_SWAP_AMOUNTS:return"Error when checking swap amounts";case An.REWARD_TOKEN_ZERO:return"All Zero Values for Reward Tokens";case An.TIMESTAMP_IN_THE_FUTURE:return"Timestamp cannot be in the future";case An.TOKEN_MISMATCH:return"token mismatch";case An.UNSUPPORTED_PAIR:return"unsupported token pair";case An.UNSUPPORTED_POOL_TYPE:return"unsupported pool type";default:return"Unknown error"}}}function Sn(e,t,a){return a?function(e,t){const a=Je-et.divDownFixed(e,t);return a<0?BigInt(0):a}(e,t):function(e,t){const a=et.divDownFixed(e,t)-Je;return a<0?BigInt(0):a}(e,t)}const kn=BigInt(1e3);function On(e,t,a,n){const o=t.length,i=function(e,t,a){let n=He;const o=t.length;for(let e=0;e<o;e++)n+=t[e];if(n==He)return He;let i=He,s=n;const r=e*BigInt(o);for(let e=0;e<255;e++){let e=t[0]*BigInt(o);for(let n=1;n<o;n++)e=et.div(et.mul(et.mul(e,t[n]),BigInt(o)),s,a);if(i=s,s=et.div(et.mul(et.mul(BigInt(o),s),s)+et.div(et.mul(et.mul(r,n),e),kn,a),et.mul(BigInt(o+1),s)+et.div(et.mul(r-kn,e),kn,!a),a),s>i){if(s-i<=1)return s}else if(i-s<=1)return s}throw new Error("Errors.STABLE_INVARIANT_DIDNT_CONVERGE")}(e,t,!0);let s=He,r=i/BigInt(o);for(let e=0;e<o;e++)e!=n&&(s+=t[e],r=r*i/(BigInt(o)*t[e]));const p=t[n],d=e*BigInt(o),l=d*s,u=BigInt(kn)-d,c=BigInt(2)*d*p+l+u*i,y=r*BigInt(o+1)*kn-u*p;return et.divUpFixed(c*a/y,i)}class Mn{bptZeroPriceImpact(e,t){const{ampWithPrecision:a,scalingFactorsWithoutBpt:n,totalSharesEvm:o,upScaledBalancesWithoutBpt:i}=nt(e);if(t.length!==i.length)throw new vn(An.INPUT_LENGTH_MISMATCH);let s=He;for(let e=0;e<i.length;e++){s+=On(a,i,o,e)*je(t[e],n[e])/Je}return s}calcPriceImpact(e,t,a,n){return Sn(a,this.bptZeroPriceImpact(e,t),n).toString()}}class Cn{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const p=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:d,expectedAmountsOut:l}=p.singleTokenOutIndex>=0?this.calcTokenOutGivenExactBptIn({...p,bptIn:a,slippage:n}):this.calcTokensOutGivenExactBptIn({...p,bptIn:a,slippage:n}),u=p.singleTokenOutIndex>=0?re.exitExactBPTInForOneTokenOut(a,p.singleTokenOutIndex):re.exitExactBPTInForTokensOut(a),c=this.encodeExitPool({poolTokens:p.poolTokens,poolId:t.id,exiter:e,minAmountsOut:d,userData:u,toInternalBalance:r}),y=(new Mn).calcPriceImpact(t,l.map(BigInt),BigInt(a),!1);return{...c,expectedAmountsOut:l,minAmountsOut:d,priceImpact:y}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{this.checkInputsExactTokensOut(n,a,t);const r=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:n,tokensOut:a}),{expectedBPTIn:p,maxBPTIn:d}=this.calcBptInGivenExactTokensOut({...r,slippage:o}),{downScaledAmountsOut:l,poolTokens:u}=r,c=re.exitBPTInForExactTokensOut(l,d);return{...this.encodeExitPool({poolId:t.id,userData:c,poolTokens:u,minAmountsOut:l,exiter:e,toInternalBalance:s}),expectedBPTIn:p,maxBPTIn:d,priceImpact:(new Mn).calcPriceImpact(t,l.map(BigInt),BigInt(p),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:a,slippage:n,toInternalBalance:o})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const i=nt(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,singleTokenOutIndex:-1,bptIn:a,slippage:n}),p=se.recoveryModeExit(a),d=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,minAmountsOut:s,userData:p,toInternalBalance:o}),l=(new Mn).calcPriceImpact(t,r.map(BigInt),BigInt(a),!1);return{...d,expectedAmountsOut:r,minAmountsOut:s,priceImpact:l}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:t,pool:a,shouldUnwrapNativeAsset:n})=>{if(!e.length||d(e,18).isNegative())throw new vn(An.INPUT_OUT_OF_BOUNDS);if(t&&t!==o&&!a.tokens.map((e=>e.address)).some((e=>Vt(e,t))))throw new vn(An.TOKEN_MISMATCH);if(!n&&t===o)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(a.tokens.some((e=>void 0===e.decimals)))throw new vn(An.MISSING_DECIMALS);if(!a.amp)throw new vn(An.MISSING_AMP)},this.checkInputsExactTokensOut=(e,t,a)=>{if(t.length!=e.length||t.length!=a.tokensList.length)throw new vn(An.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>void 0===e.decimals)))throw new vn(An.MISSING_DECIMALS);if(!a.amp)throw new vn(An.MISSING_AMP)},this.sortValuesExitExactBptIn=({pool:e,wrappedNativeAsset:t,shouldUnwrapNativeAsset:a,singleTokenOut:n})=>{const o=nt(e,t,a),{poolTokens:i}=o;let s=-1;return n&&(s=i.indexOf(n)),{...o,singleTokenOutIndex:s}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:t,amountsOut:a,tokensOut:n})=>{const i=n.some((e=>e===o)),s=nt(e,t,i),{scalingFactors:r}=s,p=new Le(t),[,d]=p.sortTokens(n,a),l=ze(d.map((e=>BigInt(e))),r.map((e=>BigInt(e))));return{...s,upScaledAmountsOut:l,downScaledAmountsOut:d}},this.calcTokenOutGivenExactBptIn=({poolTokens:e,ampWithPrecision:t,upScaledBalances:a,totalSharesEvm:n,swapFeeEvm:o,singleTokenOutIndex:i,bptIn:s,slippage:r,scalingFactors:d})=>{const l=M.StableMathBigInt._calcTokenOutGivenExactBptIn(t,a,i,BigInt(s),n,o).toString(),u=Ze(BigInt(l)-BigInt(1),d[i]).toString(),c=Array(e.length).fill("0"),y=Array(e.length).fill("0");return c[i]=u,y[i]=Dt(p.from(u),p.from(r)).toString(),{minAmountsOut:y,expectedAmountsOut:c}},this.calcTokensOutGivenExactBptIn=({upScaledBalances:e,totalSharesEvm:t,scalingFactors:a,bptIn:n,slippage:o})=>{const i=Qe(M.StableMathBigInt._calcTokensOutGivenExactBptIn(e,BigInt(n),t),a),s=i.map((e=>e.toString()));return{minAmountsOut:i.map((e=>Dt(p.from(e),p.from(o)).toString())),expectedAmountsOut:s}},this.calcBptInGivenExactTokensOut=({ampWithPrecision:e,upScaledBalances:t,upScaledAmountsOut:a,totalSharesEvm:n,swapFeeEvm:o,slippage:i})=>{const s=M.StableMathBigInt._calcBptInGivenExactTokensOut(e,t,a,n,o).toString();return{maxBPTIn:Ut(p.from(s),p.from(i)).toString(),expectedBPTIn:s}},this.encodeExitPool=({poolId:e,exiter:t,poolTokens:a,minAmountsOut:n,userData:o,toInternalBalance:i})=>{const s=wn,r="exitPool",p={poolId:e,sender:t,recipient:t,exitPoolRequest:{assets:a,minAmountsOut:n,userData:o,toInternalBalance:i}};return{data:nn.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest]),to:s,functionName:r,attributes:p}}}}class Fn{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(a,n,t);const s=this.sortValues({pool:t,wrappedNativeAsset:i,tokensIn:a,amountsIn:n}),{expectedBPTOut:r,minBPTOut:p}=this.calcBptOutGivenExactTokensIn({...s,slippage:o});return{...this.encodeJoinPool({joiner:e,amountsIn:n,tokensIn:a,poolId:t.id,minBPTOut:p,...s}),minBPTOut:p,expectedBPTOut:r,priceImpact:(new Mn).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r),!0)}},this.checkInputs=(e,t,a)=>{if(t.length!=e.length||t.length!=a.tokensList.length)throw new vn(An.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>void 0===e.decimals)))throw new vn(An.MISSING_DECIMALS);if(!a.amp)throw new vn(An.MISSING_AMP)},this.sortValues=({pool:e,wrappedNativeAsset:t,amountsIn:a,tokensIn:n})=>{const{poolTokens:i,ampWithPrecision:s,totalSharesEvm:r,swapFeeEvm:p,scalingFactors:d,upScaledBalances:l}=nt(e,t,n.includes(o)),u=new Le(t),[,c]=u.sortTokens(n,a);return{poolTokens:i,ampWithPrecision:s,totalSharesEvm:r,swapFeeEvm:p,upScaledBalances:l,upScaledAmountsIn:ze(c.map((e=>BigInt(e))),d.map((e=>BigInt(e)))),sortedAmountsIn:c}},this.calcBptOutGivenExactTokensIn=({ampWithPrecision:e,upScaledBalances:t,upScaledAmountsIn:a,totalSharesEvm:n,swapFeeEvm:o,slippage:i})=>{const s=M.StableMathBigInt._calcBptOutGivenExactTokensIn(e,t,a,n,o).toString();return{expectedBPTOut:s,minBPTOut:Dt(p.from(s),p.from(i)).toString()}},this.encodeJoinPool=({poolId:e,joiner:t,poolTokens:a,sortedAmountsIn:n,amountsIn:o,tokensIn:i,minBPTOut:s})=>{const r=re.joinExactTokensInForBPTOut(n,s),p=wn,d="joinPool",l={poolId:e,sender:t,recipient:t,joinPoolRequest:{assets:a,maxAmountsIn:n,userData:r,fromInternalBalance:!1}};return{attributes:l,data:nn.createInterface().encodeFunctionData(d,[l.poolId,l.sender,l.recipient,l.joinPoolRequest]),functionName:d,to:p,value:kt(i,o)}}}}class Bn{calcTotal(e){var t,a;let n=p.from(0),o=p.from(0);for(let a=0;a<e.length;a++){const i=e[a];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;const s=Mt(i.price.usd.toString(),18),r=Mt(i.balance,18),p=r.mul(s);o=o.add(p),n=n.add(r)}if(n.gt(0)){const t=o.div(n);for(let i=0;i<e.length;i++){const s=e[i];if(null===(a=s.price)||void 0===a?void 0:a.usd)continue;const r=Mt(s.balance,18),p=r.mul(t);o=o.add(p),n=n.add(r)}}return l(o,36).toString()}}class Rn{calcPoolSpotPrice(e,t,a){const n=C.fromPool(a),o=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(o,F).toString()}}class Nn{constructor(e=new Cn,t=new Fn,a=new Bn,n=new Rn,o=new Mn){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=o}}class Ln{calcPoolSpotPrice(e,t,a){const n=B.fromPool(a),o=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(o,F).toString()}}class Dn{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(a,n,t.tokensList);const s=this.sortValuesBasedOnPoolVersion({pool:t,wrappedNativeAsset:i,amountsIn:n,tokensIn:a}),r=this.buildExactTokensInForBPTOut({...s,slippage:o,joiner:e,poolId:t.id}),p=kt(a,n),d=(new Mn).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r.expectedBPTOut),!0);return{...r,to:wn,value:p,priceImpact:d}}}sortValuesBasedOnPoolVersion({pool:e,wrappedNativeAsset:t,amountsIn:a,tokensIn:n}){return this.sortV1(t,n,a,e)}checkInputs(e,t,a){if(e.length!=t.length||e.length!=a.length-1)throw new vn(An.INPUT_LENGTH_MISMATCH)}encodeUserDataExactTokensInForBPTOut(e,t,a){const n=Dt(p.from(e),p.from(t)).toString();return{userData:be.joinExactTokensInForBPTOut(a,n),minBPTOut:n}}encodeJoinPool(e,t,a,n,o,i){const s="joinPool",r={poolId:e,sender:t,recipient:a,joinPoolRequest:{assets:n,maxAmountsIn:i,userData:o,fromInternalBalance:!1}};return{functionName:s,attributes:r,data:nn.createInterface().encodeFunctionData(s,[r.poolId,r.sender,r.recipient,r.joinPoolRequest])}}sortV1(e,t,a,n){const i=new Le(e),[,s]=i.sortTokens(t,a),{poolTokens:r,ampWithPrecision:p,swapFeeEvm:d,totalSharesEvm:l,bptIndex:u,scalingFactorsWithoutBpt:c,upScaledBalancesWithoutBpt:y}=nt(n,e,t.includes(o));return{sortedAmountsIn:s,scalingFactorsWithoutBpt:c,upScaledBalancesWithoutBpt:y,ampWithPrecision:p,totalSharesEvm:l,swapFeeEvm:d,bptIndex:u,poolTokens:r}}buildExactTokensInForBPTOut(e){const{sortedAmountsIn:t,scalingFactorsWithoutBpt:a,upScaledBalancesWithoutBpt:n,ampWithPrecision:o,totalSharesEvm:i,swapFeeEvm:s,bptIndex:r,poolTokens:p,slippage:d,poolId:l,joiner:u}=e,c=this.calcBptOutGivenExactTokensIn(t,a,n,o,i,s),y=this.encodeUserDataExactTokensInForBPTOut(c,d,t),{functionName:b,data:m,attributes:f}=this.encodeJoinPool(l,u,u,p,y.userData,qt(t,r,"0"));return{functionName:b,data:m,attributes:f,minBPTOut:y.minBPTOut,expectedBPTOut:c.toString()}}calcBptOutGivenExactTokensIn(e,t,a,n,o,i){const s=ze(e.map(BigInt),t.map(BigInt));return R._calcBptOutGivenExactTokensIn(n,a,s,o,i)}sortV4(e,t,a){const{poolTokens:n,poolTokensWithoutBpt:o,ampWithPrecision:i,swapFeeEvm:s,totalSharesEvm:r,scalingFactorsWithoutBpt:p,upScaledBalancesWithoutBpt:d}=nt(a),[l]=$t(o,e,t);return{sortedAmountsIn:l,scalingFactorsWithoutBpt:p,upScaledBalancesWithoutBpt:d,ampWithPrecision:i,totalSharesEvm:r,swapFeeEvm:s,bptIndex:0,poolTokens:n}}}class Un{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const p=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:d,expectedAmountsOut:l}=p.singleTokenOutIndexWithoutBpt>=0?this.calcTokenOutGivenExactBptIn({...p,bptIn:a,slippage:n}):this.calcTokensOutGivenExactBptIn({...p,bptIn:a,slippage:n}),u=p.singleTokenOutIndexWithoutBpt>=0?be.exitExactBPTInForOneTokenOut(a,p.singleTokenOutIndexWithoutBpt):be.exitExactBPTInForAllTokensOut(a),c=qt(d,p.bptIndex,"0"),y=this.encodeExitPool({poolTokens:p.poolTokens,poolId:t.id,exiter:e,userData:u,minAmountsOut:c,toInternalBalance:r}),b=(new Mn).calcPriceImpact(t,l.map(BigInt),BigInt(a),!1);return{...y,expectedAmountsOut:l,minAmountsOut:d,priceImpact:b}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{this.checkInputsExactTokensOut(a,n,t);const r=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:n,tokensOut:a}),{bptIn:p,maxBPTIn:d}=this.calcBptInGivenExactTokensOut({...r,slippage:o}),l=be.exitBPTInForExactTokensOut(r.downscaledAmountsOutWithoutBpt,d);return{...this.encodeExitPool({poolTokens:r.poolTokens,minAmountsOut:r.downscaledAmountsOutWithBpt,userData:l,exiter:e,poolId:t.id,toInternalBalance:s}),maxBPTIn:d,expectedBPTIn:p,priceImpact:(new Mn).calcPriceImpact(t,r.downscaledAmountsOutWithoutBpt.map(BigInt),BigInt(p),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:a,slippage:n,toInternalBalance:o})=>{this.checkInputsRecoveryExit({bptIn:a,pool:t}),t.tokens.forEach((e=>e.priceRate="1"));const i=nt(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,bptIn:a,slippage:n}),p=se.recoveryModeExit(a),d=qt(s,i.bptIndex,"0"),l=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,userData:p,minAmountsOut:d,toInternalBalance:o}),u=(new Mn).calcPriceImpact(t,r.map(BigInt),BigInt(a),!1);return{...l,expectedAmountsOut:r,minAmountsOut:s,priceImpact:u}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:t,pool:a,shouldUnwrapNativeAsset:n})=>{if(p.from(e).lte(0))throw new vn(An.INPUT_OUT_OF_BOUNDS);if(!t&&a.poolTypeVersion<2)throw new Error("Unsupported Exit Type For Pool");if(t&&t!==o&&!a.tokens.map((e=>e.address)).some((e=>Vt(e,t))))throw new vn(An.TOKEN_MISMATCH);if(!n&&t===o)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(a.tokens.some((e=>void 0===e.decimals)))throw new vn(An.MISSING_DECIMALS);if(!a.amp)throw new vn(An.MISSING_AMP)},this.checkInputsExactTokensOut=(e,t,a)=>{if(e.length!=t.length||e.length!=a.tokensList.length-1)throw new vn(An.INPUT_LENGTH_MISMATCH)},this.checkInputsRecoveryExit=({bptIn:e,pool:t})=>{if(p.from(e).lte(0))throw new vn(An.INPUT_OUT_OF_BOUNDS);if(!t.isInRecoveryMode)throw new Error("Exit type not supported because pool is not in Recovery Mode");if(t.tokens.some((e=>void 0===e.decimals)))throw new vn(An.MISSING_DECIMALS);if(!t.amp)throw new vn(An.MISSING_AMP)},this.sortValuesExitExactBptIn=({pool:e,singleTokenOut:t,wrappedNativeAsset:a,shouldUnwrapNativeAsset:n})=>{const o=nt(e,a,n);let i=-1;return t&&(i=o.poolTokensWithoutBpt.indexOf(t)),{...o,singleTokenOutIndexWithoutBpt:i}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:t,amountsOut:a,tokensOut:n})=>{const i=n.some((e=>e===o)),s=nt(e,t,i),r=new Le(t),[,d]=r.sortTokens(n,a),l=qt(d,s.bptIndex,"0").map((e=>{const t=p.from(e);return t.isZero()?e:t.sub(1).toString()})),u=ze(d.map((e=>BigInt(e))),s.scalingFactorsWithoutBpt);return{...s,upScaledAmountsOutWithoutBpt:u,downscaledAmountsOutWithBpt:l,downscaledAmountsOutWithoutBpt:d}},this.calcTokenOutGivenExactBptIn=({ampWithPrecision:e,upScaledBalancesWithoutBpt:t,singleTokenOutIndexWithoutBpt:a,scalingFactorsWithoutBpt:n,totalSharesEvm:o,swapFeeEvm:i,bptIn:s,slippage:r})=>{const d=M.StableMathBigInt._calcTokenOutGivenExactBptIn(e,t,a,BigInt(s),o,i),l=Array(t.length).fill("0"),u=Array(t.length).fill("0"),c=Ze(d,n[a]);return l[a]=c.toString(),u[a]=Dt(p.from(c),p.from(r)).toString(),{minAmountsOut:u,expectedAmountsOut:l}},this.calcTokensOutGivenExactBptIn=({upScaledBalancesWithoutBpt:e,totalSharesEvm:t,scalingFactorsWithoutBpt:a,bptIn:n,slippage:o})=>{const i=Qe(M.StableMathBigInt._calcTokensOutGivenExactBptIn(e,BigInt(n),t),a),s=i.map((e=>e.toString()));return{minAmountsOut:i.map((e=>Dt(p.from(e),p.from(o)).toString())),expectedAmountsOut:s}},this.calcBptInGivenExactTokensOut=({ampWithPrecision:e,upScaledBalancesWithoutBpt:t,upScaledAmountsOutWithoutBpt:a,totalSharesEvm:n,swapFeeEvm:o,slippage:i})=>{const s=M.StableMathBigInt._calcBptInGivenExactTokensOut(e,t,a,n,o).toString();return{bptIn:s,maxBPTIn:Ut(p.from(s),p.from(i)).toString()}},this.encodeExitPool=e=>{const{exiter:t,poolId:a,minAmountsOut:n,userData:o,poolTokens:i,toInternalBalance:s}=e,r="exitPool",p={poolId:a,sender:t,recipient:t,exitPoolRequest:{assets:i,minAmountsOut:n,userData:o,toInternalBalance:s}};return{to:wn,functionName:r,attributes:p,data:nn.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest])}}}}class Vn{constructor(e=new Un,t=new Bn,a=new Ln,n=new Mn,o=new Dn){this.exit=e,this.liquidity=t,this.spotPriceCalculator=a,this.priceImpactCalculator=n,this.join=o}}class qn{bptZeroPriceImpact(e,t){if(t.length!==e.tokensList.length)throw new vn(An.INPUT_LENGTH_MISMATCH);const{scalingFactorsRaw:a,totalSharesEvm:n,upScaledBalances:o,weights:i}=nt(e);let s=He;for(let e=0;e<t.length;e++){s+=i[e]*n/o[e]*je(t[e],a[e])/Je}return s}calcPriceImpact(e,t,a,n){return Sn(a,this.bptZeroPriceImpact(e,t),n).toString()}}class Gn{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const p=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:d,expectedAmountsOut:l}=p.singleTokenOutIndex>=0?this.calcTokenOutGivenExactBptIn({...p,bptIn:a,slippage:n}):this.calcTokensOutGivenExactBptIn({...p,bptIn:a,slippage:n}),u=p.singleTokenOutIndex>=0?pe.exitExactBPTInForOneTokenOut(a,p.singleTokenOutIndex):pe.exitExactBPTInForTokensOut(a),c=this.encodeExitPool({poolTokens:p.poolTokens,poolId:t.id,exiter:e,minAmountsOut:d,userData:u,toInternalBalance:r}),y=(new qn).calcPriceImpact(t,l.map(BigInt),BigInt(a),!1);return{...c,expectedAmountsOut:l,minAmountsOut:d,priceImpact:y}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{this.checkInputsExactTokensOut(n,a,t);const r=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:n,tokensOut:a}),{expectedBPTIn:p,maxBPTIn:d}=this.calcBptInGivenExactTokensOut({...r,slippage:o}),{downScaledAmountsOut:l,poolTokens:u}=r,c=pe.exitBPTInForExactTokensOut(l,d);return{...this.encodeExitPool({poolId:t.id,userData:c,poolTokens:u,minAmountsOut:l,exiter:e,toInternalBalance:s}),expectedBPTIn:p,maxBPTIn:d,priceImpact:(new qn).calcPriceImpact(t,l.map(BigInt),BigInt(p),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:a,slippage:n,toInternalBalance:o})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1}),t.tokens.forEach((e=>e.priceRate="1"));const i=nt(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,bptIn:a,slippage:n,singleTokenOutIndex:-1}),p=se.recoveryModeExit(a),d=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,minAmountsOut:s,userData:p,toInternalBalance:o}),l=(new qn).calcPriceImpact(t,r.map(BigInt),BigInt(a),!1);return{...d,expectedAmountsOut:r,minAmountsOut:s,priceImpact:l}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:t,pool:a,shouldUnwrapNativeAsset:n})=>{if(!e.length||d(e,18).isNegative())throw new vn(An.INPUT_OUT_OF_BOUNDS);if(t&&t!==o&&!a.tokens.map((e=>e.address)).some((e=>Vt(e,t))))throw new vn(An.TOKEN_MISMATCH);if(!n&&t===o)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(a.tokens.some((e=>void 0===e.decimals)))throw new vn(An.MISSING_DECIMALS)},this.checkInputsExactTokensOut=(e,t,a)=>{if(t.length!=e.length||t.length!=a.tokensList.length)throw new vn(An.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>void 0===e.decimals)))throw new vn(An.MISSING_DECIMALS)},this.sortValuesExitExactBptIn=({pool:e,wrappedNativeAsset:t,shouldUnwrapNativeAsset:a,singleTokenOut:n})=>{const o=nt(e,t,a),{poolTokens:i}=o;let s=-1;return n&&(s=i.indexOf(n.toLowerCase())),{...o,singleTokenOutIndex:s}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:t,amountsOut:a,tokensOut:n})=>{const i=n.some((e=>e===o)),s=nt(e,t,i),{scalingFactors:r}=s,p=new Le(t),[,d]=p.sortTokens(n,a),l=ze(d.map((e=>BigInt(e))),r.map((e=>BigInt(e))));return{...s,upScaledAmountsOut:l,downScaledAmountsOut:d}},this.calcTokenOutGivenExactBptIn=({poolTokens:e,weights:t,upScaledBalances:a,totalSharesEvm:n,swapFeeEvm:o,singleTokenOutIndex:i,bptIn:s,slippage:r,scalingFactors:d})=>{const l=M.WeightedMaths._calcTokenOutGivenExactBptIn(a[i],t[i],BigInt(s),n,o).toString(),u=Ze(BigInt(l)-BigInt(1),d[i]).toString(),c=Array(e.length).fill("0"),y=Array(e.length).fill("0");return c[i]=u,y[i]=Dt(p.from(u),p.from(r)).toString(),{minAmountsOut:y,expectedAmountsOut:c}},this.calcTokensOutGivenExactBptIn=({upScaledBalances:e,totalSharesEvm:t,scalingFactors:a,bptIn:n,slippage:o})=>{const i=Qe(M.WeightedMaths._calcTokensOutGivenExactBptIn(e,BigInt(n),t).map((e=>e.toString())).map((e=>BigInt(e))),a),s=i.map((e=>e.toString()));return{minAmountsOut:i.map((e=>Dt(p.from(e),p.from(o)).toString())),expectedAmountsOut:s}},this.calcBptInGivenExactTokensOut=({weights:e,upScaledBalances:t,upScaledAmountsOut:a,totalSharesEvm:n,swapFeeEvm:o,slippage:i})=>{const s=M.WeightedMaths._calcBptInGivenExactTokensOut(t,e,a,n,o).toString();return{maxBPTIn:Ut(p.from(s),p.from(i)).toString(),expectedBPTIn:s}},this.encodeExitPool=({poolId:e,exiter:t,poolTokens:a,minAmountsOut:n,userData:o,toInternalBalance:i})=>{const s=wn,r="exitPool",p={poolId:e,sender:t,recipient:t,exitPoolRequest:{assets:a,minAmountsOut:n,userData:o,toInternalBalance:i}};return{data:nn.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest]),to:s,functionName:r,attributes:p}}}}class Wn{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(n,a,t);const s=this.sortValues({pool:t,wrappedNativeAsset:i,tokensIn:a,amountsIn:n}),{expectedBPTOut:r,minBPTOut:p}=this.calcBptOutGivenExactTokensIn({...s,slippage:o});return{...this.encodeJoinPool({...s,poolId:t.id,joiner:e,minBPTOut:p,tokensIn:a,amountsIn:n}),minBPTOut:p,expectedBPTOut:r,priceImpact:(new qn).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r),!0)}},this.checkInputs=(e,t,a)=>{if(e.length!=t.length||e.length!=a.tokensList.length)throw new vn(An.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>void 0===e.decimals)))throw new vn(An.MISSING_DECIMALS);if(a.tokens.some((e=>!e.weight)))throw new vn(An.MISSING_WEIGHT)},this.sortValues=({pool:e,tokensIn:t,amountsIn:a,wrappedNativeAsset:n})=>{const i=t.some((e=>e===o)),s=nt(e,n,i),r=new Le(n),[,p]=r.sortTokens(t,a),d=ze(p.map(BigInt),s.scalingFactors);return{...s,sortedAmountsIn:p,upScaledAmountsIn:d}},this.calcBptOutGivenExactTokensIn=({upScaledBalances:e,weights:t,upScaledAmountsIn:a,totalSharesEvm:n,swapFeeEvm:o,slippage:i})=>{const s=N._calcBptOutGivenExactTokensIn(e,t,a,n,o).toString();return{expectedBPTOut:s,minBPTOut:Dt(p.from(s),p.from(i)).toString()}},this.encodeJoinPool=({sortedAmountsIn:e,poolTokens:t,poolId:a,joiner:n,minBPTOut:o,amountsIn:i,tokensIn:s})=>{const r="joinPool",p={poolId:a,sender:n,recipient:n,joinPoolRequest:{assets:t,maxAmountsIn:e,userData:pe.joinExactTokensInForBPTOut(e,o),fromInternalBalance:!1}};return{to:wn,functionName:r,data:nn.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.joinPoolRequest]),attributes:p,value:kt(s,i)}}}}class $n{calcTotal(e){var t;let a=p.from(0),n=p.from(0);for(let o=0;o<e.length;o++){const i=e[o];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;let s;s=parseFloat(i.price.usd)<1?Mt(parseFloat(i.price.usd).toFixed(10),10).mul(1e8):Mt(i.price.usd,18);const r=Mt(i.balance,18),p=Mt(i.weight||"0",18),d=r.mul(s);n=n.add(d),a=a.add(p)}const o=e.reduce(((e,t)=>e.add(Mt(t.weight||"0",18))),p.from(0));if(a.gt(0)){return Ct(n.mul(o).div(a),36)}return"0"}}class Hn{calcPoolSpotPrice(e,t,a){const n=e===a.address||t===a.address;if(n){const e={address:a.address,balance:a.totalShares,decimals:18,priceRate:"1",weight:"0"};a.tokens.push(e),a.tokensList.push(a.address)}const o=L.fromPool(a),i=o.parsePoolPairData(e,t),s=o._spotPriceAfterSwapExactTokenInForTokenOut(i,F).toString();return n&&(a.tokens.pop(),a.tokensList.pop()),s}}class Kn{constructor(e=new Gn,t=new Wn,a=new $n,n=new Hn,o=new qn){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=o}}class Jn{calcTotal(e){var t,a;let o=n,i=n;for(let a=0;a<e.length;a++){const n=e[a];if(!(null===(t=n.price)||void 0===t?void 0:t.usd))continue;const s=Mt(n.price.usd.toString(),18),r=Mt(n.balance,18),p=r.mul(s);i=i.add(p),o=o.add(r)}if(o.gt(0)){const t=i.div(o);for(let n=0;n<e.length;n++){const s=e[n];if(null===(a=s.price)||void 0===a?void 0:a.usd)continue;const r=Mt(s.balance,18),p=r.mul(t);i=i.add(p),o=o.add(r)}}return l(i,36).toString()}}class Xn{calcPoolSpotPrice(e,t,a){const n=D.fromPool(a),o=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(o,F).toString()}}class Yn{constructor(e=new Cn,t=new Fn,a=new Jn,n=new Xn,o=new Mn){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=o}}class jn{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{throw new Error("Exit type not supported")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{throw new Error("Exit type not supported")},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:a,slippage:n,toInternalBalance:o})=>{throw new Error("Exit type not supported")}}}class zn{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:o,wrappedNativeAsset:i})=>{throw new Error("Join type not supported")}}}class Zn{constructor(e=new jn,t=new zn,a=new Bn,n=new Ln,o=new Mn){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=o}}class Qn{bptZeroPriceImpact(e,t){throw new Error("Linear Pool bptZeroPriceImpact Not Implented")}calcPriceImpact(e,t,a,n){return"0"}}class eo{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{throw new Error("Exit type not supported")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{throw new Error("Exit type not supported")},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:a,slippage:n,toInternalBalance:o})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1}),t.tokens.forEach((e=>e.priceRate="1"));const i=nt(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,bptIn:a,slippage:n}),p=se.recoveryModeExit(a),d=qt(s,i.bptIndex,"0"),l=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,minAmountsOut:d,userData:p,toInternalBalance:o}),u=(new Qn).calcPriceImpact(t,r.map(BigInt),BigInt(a),!1);return{...l,expectedAmountsOut:r,minAmountsOut:s,priceImpact:u}},this.checkInputsExactBPTIn=({bptIn:e,pool:t})=>{if(p.from(e).lte(0))throw new vn(An.INPUT_OUT_OF_BOUNDS);if(t.tokens.some((e=>void 0===e.decimals)))throw new vn(An.MISSING_DECIMALS)},this.calcTokensOutGivenExactBptIn=({bptIndex:e,upScaledBalances:t,totalSharesEvm:a,scalingFactors:n,bptIn:o,slippage:i})=>{const s=Wt(Qe(M.LinearMaths._calcTokensOutGivenExactBptIn(t,BigInt(o),a,e),n),e).map((e=>e.toString()));return{minAmountsOut:s.map((e=>Dt(p.from(e),p.from(i)).toString())),expectedAmountsOut:s}},this.encodeExitPool=e=>{const{exiter:t,poolId:a,minAmountsOut:n,userData:o,poolTokens:i,toInternalBalance:s}=e,r="exitPool",p={poolId:a,sender:t,recipient:t,exitPoolRequest:{assets:i,minAmountsOut:n,userData:o,toInternalBalance:s}};return{to:wn,functionName:r,attributes:p,data:nn.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest])}}}}class to{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:o,wrappedNativeAsset:i})=>{throw new Error("Join type not supported")}}}const ao=18,no=Mt("1",ao);class oo{calcTotal(e){var t,a;let o=n,i=n;for(let a=0;a<e.length;a++){const n=e[a];if(!(null===(t=n.price)||void 0===t?void 0:t.usd))continue;const s=Mt(n.price.usd.toString(),ao),r=Mt(n.balance,ao),p=r.mul(s);i=i.add(p),o=o.add(r)}if(o.gt(0)){const t=i.div(o);for(let n=0;n<e.length;n++){const s=e[n];if(null===(a=s.price)||void 0===a?void 0:a.usd)continue;const r=Mt(s.priceRate||"1",ao),p=Mt(s.balance,ao).mul(r).div(no),d=p.mul(t);i=i.add(d),o=o.add(p)}}return Ct(i,36)}}class io{calcPoolSpotPrice(e,t,a){const n=U.fromPool(a),o=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(o,F).toString()}}class so{constructor(e=new eo,t=new to,a=new oo,n=new io,o=new Qn){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=o}}class ro{buildExitExactTokensOut(){throw new Error("FXExitConcern Not implemented")}buildRecoveryExit(){throw new Error("FXExitConcern Not implemented")}}class po{calcTotal(e){var t,a;let n=BigInt(0),o=BigInt(0);for(let a=0;a<e.length;a++){const i=e[a];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;const s=Mt(i.price.usd.toString(),18).toBigInt(),r=Mt(i.balance,18).toBigInt(),p=et.mulDownFixed(r,s);o=et.add(o,p),n=et.add(n,r)}if(n>BigInt(0)){const t=et.divDownFixed(o,n);for(let i=0;i<e.length;i++){const s=e[i];if(null===(a=s.price)||void 0===a?void 0:a.usd)continue;const r=Mt(s.balance,18).toBigInt(),p=et.mulDownFixed(r,t);o=et.add(o,p),n=et.add(n,r)}}return l(o.toString(),18).toString()}}class lo{calcPoolSpotPrice(){throw new Error("FXSpotPriceConcern Not implemented")}}class uo{bptZeroPriceImpact(e,t){throw new Error("Not implemented")}calcPriceImpact(e,t,a,n){throw new Error("Not implemented")}}class co{buildJoin(){throw new Error("FXJoinConcern Not implemented")}}class yo{constructor(e=new ro,t=new po,a=new lo,n=new uo,o=new co){this.exit=e,this.liquidity=t,this.spotPriceCalculator=a,this.priceImpactCalculator=n,this.join=o}}class bo{buildExitExactTokensOut({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:i}){throw new Error("Not implemented")}buildRecoveryExit({exiter:e,pool:t,bptIn:a,slippage:n}){throw new Error("Not implemented")}}class mo{calcTotal(e){var t,a;let n=BigInt(0),o=BigInt(0);for(let a=0;a<e.length;a++){const i=e[a];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;const s=Mt(i.price.usd.toString(),18).toBigInt(),r=Mt(i.balance,18).toBigInt(),p=et.mulDownFixed(r,s);o=et.add(o,p),n=et.add(n,r)}if(n>BigInt(0)){const t=et.divDownFixed(o,n);for(let i=0;i<e.length;i++){const s=e[i];if(null===(a=s.price)||void 0===a?void 0:a.usd)continue;const r=Mt(s.balance,18).toBigInt(),p=et.mulDownFixed(r,t);o=et.add(o,p),n=et.add(n,r)}}return l(o.toString(),18).toString()}}class fo{calcPoolSpotPrice(){throw new Error("GyroSpotPriceConcern Not implemented")}}class To{bptZeroPriceImpact(e,t){throw new Error("Not implemented")}calcPriceImpact(e,t,a,n){throw new Error("Not implemented")}}class ho{buildJoin(){throw new Error("GyroJoinConcern Not implemented")}}class Io{constructor(e=new bo,t=new mo,a=new fo,n=new To,o=new ho){this.exit=e,this.liquidity=t,this.spotPriceCalculator=a,this.priceImpactCalculator=n,this.join=o}}class _o{constructor(e,t=new Kn,a=new Nn,n=new Vn,o=new Yn,i=new Zn,s=new so){this.weighted=t,this.stable=a,this.composableStable=n,this.metaStable=o,this.stablePhantom=i,this.linear=s}static from(e){switch(e){case"ComposableStable":return new Vn;case"FX":return new yo;case"GyroE":case"Gyro2":case"Gyro3":return new Io;case"MetaStable":return new Yn;case"Stable":return new Nn;case"StablePhantom":return new Zn;case"Investment":case"LiquidityBootstrapping":case"Weighted":return new Kn;default:if(Ht(e))return new so;throw new vn(An.UNSUPPORTED_POOL_TYPE)}}}class go{constructor(e,t){this.pools=e,this.tokenPrices=t}async getLiquidity(e){const t=e.tokens.filter((t=>t.address!==e.address)),a=await Promise.all(t.map((async e=>{const t=await this.pools.findBy("address",e.address);if(!t)return;const a=Mt(await this.getLiquidity(t),18),n=Mt(t.totalShares,18),o=Mt(e.balance,18),i=n.eq(0)?0:a.mul(o).div(n);return{address:t.address,liquidity:i.toString()}}))),n=a.reduce(((e,t)=>e.add(t?t.liquidity:p.from(0))),p.from(0)),o=t.filter((e=>!a.find((t=>(null==t?void 0:t.address)===e.address)))),i=await Promise.all(o.map((async e=>{var t;const a=await this.tokenPrices.find(e.address);return{address:e.address,decimals:e.decimals,priceRate:e.priceRate,price:(null==a?void 0:a.usd)&&a||{usd:null===(t=e.token)||void 0===t?void 0:t.latestUSDPrice},balance:e.balance,weight:e.weight}}))),s=Mt(_o.from(e.poolType).liquidity.calcTotal(i),18);return Ct(n.add(s),18)}async getBptPrice(e){const t=await this.getLiquidity(e);return(parseFloat(t)/parseFloat(e.totalShares)).toString()}}const Po=p.from("0"),wo=e=>e?Object.keys(e).filter((t=>e[t].gt(Po))).reduce(((t,a)=>(t[a]=e[a],t)),{}):{},xo=(e,t,a)=>e.map((e=>((e,t,a)=>{if(!t[e.address]&&!a[e.address])return e;const n=wo(t[e.address]),o=wo(a[e.address]);return e.claimableTokens||(e.claimableTokens={...n,...o}),e})(e,t,a))).filter((e=>e.claimableTokens&&Object.keys(e.claimableTokens).length)),Eo=(e,t)=>{var a;if(t.rewardTokens)for(const n of Object.keys(t.rewardTokens))e[a=t.id]||(e[a]=[]),e[t.id].push(n);return e},Ao=new t(["function claim_rewards(address sender, address receiver) returns (uint256)","function claimable_tokens(address addr) view returns (uint256)","function claimable_reward(address addr, address token) view returns (uint256)"]),vo=new t(["function mintMany(address[] gauges) returns (uint256)"]),So=new t(["function getPendingRewards(address gauge, address user, address token) view returns (uint256)","function claimRewardsFromGauges(address[] gauges, address user)"]);class ko{constructor(e,t,a,n,o,i){this.multicall=n,this.liquidityGauges=e,this.feeDistributor=t,this.chainId=a,this.gaugeClaimHelperAddress=o,this.balancerMinterAddress=i}async getClaimableRewardTokens(e){const t=await this.getGauges();if(!t.length)throw new vn(An.GAUGES_NOT_FOUND);const a=t.map((e=>e.address)),n=this.getRewardTokens(t),o=await this.retrieveClaimableTokens(a,e),i=await this.retrieveClaimableRewards(n,e);return xo(t,i,o)}async buildClaimRewardTokensRequest(e,t){if(1===this.chainId||5===this.chainId){if(!this.balancerMinterAddress)throw new vn(An.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED)}else if(!this.gaugeClaimHelperAddress)throw new vn(An.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);const a=(await this.getClaimableRewardTokens(t)).filter((t=>e.map((e=>e.toLowerCase())).includes(t.address.toLowerCase()))).filter((e=>e.claimableTokens&&Object.keys(e.claimableTokens).length)),n=Array.from(new Set(a.map((e=>e.claimableTokens)).map((e=>Object.keys(e||{}))).flatMap((e=>e))));if(!n.length)throw new vn(An.GAUGES_REWARD_TOKEN_EMPTY);const o=n.map((e=>a.reduce(((t,a)=>(a.claimableTokens&&a.claimableTokens[e]&&a.claimableTokens[e]!==Po&&(t=a.claimableTokens[e].add(t)),t)),p.from(0))));if(!o.length||o.every((e=>e.eq(Po))))throw new vn(An.REWARD_TOKEN_ZERO);if(1===this.chainId||5===this.chainId){if(!this.balancerMinterAddress)throw new vn(An.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED);const a=vo.encodeFunctionData("mintMany",[e]);return{to:this.balancerMinterAddress,from:t,callData:a,tokensOut:n,expectedTokensValue:o,functionName:"mintMany"}}{if(!this.gaugeClaimHelperAddress)throw new vn(An.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);const a=So.encodeFunctionData("claimRewardsFromGauges",[e,t]);return{to:this.gaugeClaimHelperAddress,from:t,callData:a,tokensOut:n,expectedTokensValue:o,functionName:"claimRewardsFromGauges"}}}async getClaimableVeBalTokens(e,t){var a;if(!this.feeDistributor)throw new vn(An.FEE_PROVIDER_NOT_PROVIDED);return null===(a=this.feeDistributor)||void 0===a?void 0:a.getClaimableBalances(e,t)}async buildClaimVeBalTokensRequest(e,t){if(!this.feeDistributor)throw new vn(An.FEE_PROVIDER_NOT_PROVIDED);const a=await this.feeDistributor.getClaimableBalances(e,t),n=t.map((e=>{var t;return null!==(t=a[e])&&void 0!==t?t:Po}));if(n.every((e=>e.eq(Po))))throw new vn(An.REWARD_TOKEN_ZERO);const o=this.feeDistributor.claimBalances(e,t);return{to:this.feeDistributor.feeDistributor.address,from:e,callData:o,tokensOut:t,expectedTokensValue:n,functionName:"claimTokens"}}async getGauges(){return await this.liquidityGauges.fetch()}getRewardTokens(e){return e.reduce(Eo,{})}async retrieveClaimableRewards(e,t){const a=Object.keys(e),{payload:n,paths:o}=this.getPayload(a,e,t),[,i]=await this.multicall.callStatic.aggregate(n),s=i.map((e=>"0x"==e?"0x0":e));return o.reduce((e=>(t,a,n)=>{var o;const i=p.from(`${e[n]}`);return i.gt(Po)&&(t[o=a.gauge]||(t[o]={}),t[a.gauge][a.token]=i),t})(s),{})}getPayload(e,t,a){const n=[],o=[];for(const i of e)for(const e of t[i])o.push({gauge:i,token:e}),n.push(this.getArguments(a,i,e));return{payload:n,paths:o}}getArguments(e,t,a){if(1===this.chainId||5===this.chainId)return{target:t,callData:Ao.encodeFunctionData("claimable_reward",[e,a])};if(!this.gaugeClaimHelperAddress)throw new vn(An.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);return{target:this.gaugeClaimHelperAddress,callData:So.encodeFunctionData("getPendingRewards",[t,e,a])}}async retrieveClaimableTokens(e,t){if(this.chainId===Pe.MAINNET||this.chainId===Pe.GOERLI){const a=xn[this.chainId].addresses.tokens.bal,n=e.map((e=>({target:e,callData:Ao.encodeFunctionData("claimable_tokens",[t])}))),[,o]=await this.multicall.callStatic.aggregate(n),i=o.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t)=>(a,n,o)=>{const i=p.from(`${e[o]}`);return i.gt(Po)&&(a[n]||(a[n]={}),a[n][t]=i),a})(i,a),{})}return{}}}async function Oo(e,t,a,n){const i={sender:o,recipient:o,fromInternalBalance:!1,toInternalBalance:!1};try{return(await e.callStatic.queryBatchSwap(t,a,n,i)).map((e=>e.toString()))}catch(e){throw`queryBatchSwap call error: ${e}`}}var Mo=function(){return Mo=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Mo.apply(this,arguments)},Co=new Map,Fo=new Map,Bo=!0,Ro=!1;function No(e){return e.replace(/[\s,]+/g," ").trim()}function Lo(e){var t=new Set,a=[];return e.definitions.forEach((function(e){if("FragmentDefinition"===e.kind){var n=e.name.value,o=No((s=e.loc).source.body.substring(s.start,s.end)),i=Fo.get(n);i&&!i.has(o)?Bo&&console.warn("Warning: fragment with name "+n+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"):i||Fo.set(n,i=new Set),i.add(o),t.has(o)||(t.add(o),a.push(e))}else a.push(e);var s})),Mo(Mo({},e),{definitions:a})}function Do(e){var t=No(e);if(!Co.has(t)){var a=j(e,{experimentalFragmentVariables:Ro,allowLegacyFragmentVariables:Ro});if(!a||"Document"!==a.kind)throw new Error("Not a valid GraphQL document.");Co.set(t,function(e){var t=new Set(e.definitions);t.forEach((function(e){e.loc&&delete e.loc,Object.keys(e).forEach((function(a){var n=e[a];n&&"object"==typeof n&&t.add(n)}))}));var a=e.loc;return a&&(delete a.startToken,delete a.endToken),e}(Lo(a)))}return Co.get(t)}function Uo(e){for(var t=[],a=1;a<arguments.length;a++)t[a-1]=arguments[a];"string"==typeof e&&(e=[e]);var n=e[0];return t.forEach((function(t,a){t&&"Document"===t.kind?n+=t.loc.source.body:n+=t,n+=e[a+1]})),Do(n)}var Vo,qo=Uo,Go=function(){Co.clear(),Fo.clear()},Wo=function(){Bo=!1},$o=function(){Ro=!0},Ho=function(){Ro=!1};(Vo=Uo||(Uo={})).gql=qo,Vo.resetCaches=Go,Vo.disableFragmentWarnings=Wo,Vo.enableExperimentalFragmentVariables=$o,Vo.disableExperimentalFragmentVariables=Ho,Uo.default=Uo;var Ko,Jo,Xo,Yo,jo,zo,Zo,Qo,ei,ti,ai,ni,oi,ii,si,ri,pi,di,li,ui,ci,yi,bi,mi,fi,Ti,hi,Ii,_i,gi=Uo;!function(e){e.EndAmp="endAmp",e.EndTimestamp="endTimestamp",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartAmp="startAmp",e.StartTimestamp="startTimestamp"}(Ko||(Ko={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Timestamp="timestamp",e.TotalLiquidity="totalLiquidity",e.TotalProtocolFee="totalProtocolFee",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.Vault="vault",e.VaultId="vault__id",e.VaultPoolCount="vault__poolCount",e.VaultProtocolFeesCollector="vault__protocolFeesCollector",e.VaultTotalLiquidity="vault__totalLiquidity",e.VaultTotalProtocolFee="vault__totalProtocolFee",e.VaultTotalSwapCount="vault__totalSwapCount",e.VaultTotalSwapFee="vault__totalSwapFee",e.VaultTotalSwapVolume="vault__totalSwapVolume"}(Jo||(Jo={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Pools="pools",e.ProtocolFeesCollector="protocolFeesCollector",e.TotalLiquidity="totalLiquidity",e.TotalProtocolFee="totalProtocolFee",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(Xo||(Xo={})),function(e){e.BptPrice="bptPrice",e.Id="id",e.LowerBoundPercentage="lowerBoundPercentage",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Token="token",e.TokenAddress="token__address",e.TokenAssetManager="token__assetManager",e.TokenBalance="token__balance",e.TokenCashBalance="token__cashBalance",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenIndex="token__index",e.TokenIsExemptFromYieldProtocolFee="token__isExemptFromYieldProtocolFee",e.TokenManagedBalance="token__managedBalance",e.TokenName="token__name",e.TokenOldPriceRate="token__oldPriceRate",e.TokenPaidProtocolFees="token__paidProtocolFees",e.TokenPriceRate="token__priceRate",e.TokenSymbol="token__symbol",e.TokenWeight="token__weight",e.UpperBoundPercentage="upperBoundPercentage"}(Yo||(Yo={})),function(e){e.EndTimestamp="endTimestamp",e.EndWeights="endWeights",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartTimestamp="startTimestamp",e.StartWeights="startWeights"}(jo||(jo={})),function(e){e.Exit="Exit",e.Join="Join"}(zo||(zo={})),function(e){e.Amounts="amounts",e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Sender="sender",e.Timestamp="timestamp",e.Tx="tx",e.Type="type",e.User="user",e.UserId="user__id",e.ValueUsd="valueUSD"}(Zo||(Zo={})),function(e){e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Price="price",e.PricingAsset="pricingAsset"}(Qo||(Qo={})),function(e){e.CashDelta="cashDelta",e.Id="id",e.ManagedDelta="managedDelta",e.PoolTokenId="poolTokenId",e.PoolTokenIdAddress="poolTokenId__address",e.PoolTokenIdAssetManager="poolTokenId__assetManager",e.PoolTokenIdBalance="poolTokenId__balance",e.PoolTokenIdCashBalance="poolTokenId__cashBalance",e.PoolTokenIdDecimals="poolTokenId__decimals",e.PoolTokenIdId="poolTokenId__id",e.PoolTokenIdIndex="poolTokenId__index",e.PoolTokenIdIsExemptFromYieldProtocolFee="poolTokenId__isExemptFromYieldProtocolFee",e.PoolTokenIdManagedBalance="poolTokenId__managedBalance",e.PoolTokenIdName="poolTokenId__name",e.PoolTokenIdOldPriceRate="poolTokenId__oldPriceRate",e.PoolTokenIdPaidProtocolFees="poolTokenId__paidProtocolFees",e.PoolTokenIdPriceRate="poolTokenId__priceRate",e.PoolTokenIdSymbol="poolTokenId__symbol",e.PoolTokenIdWeight="poolTokenId__weight",e.Timestamp="timestamp",e.Type="type"}(ei||(ei={})),function(e){e.Deposit="Deposit",e.Update="Update",e.Withdraw="Withdraw"}(ti||(ti={})),function(e){e.Asc="asc",e.Desc="desc"}(ai||(ai={})),function(e){e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z"}(ni||(ni={})),function(e){e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.PoolLiquidity="poolLiquidity",e.PoolShareValue="poolShareValue",e.PoolTotalShares="poolTotalShares",e.PricingAsset="pricingAsset"}(oi||(oi={})),function(e){e.Balance="balance",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.UserAddress="userAddress",e.UserAddressId="userAddress__id"}(ii||(ii={})),function(e){e.Amounts="amounts",e.HoldersCount="holdersCount",e.Id="id",e.Liquidity="liquidity",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.ProtocolFee="protocolFee",e.SwapFees="swapFees",e.SwapVolume="swapVolume",e.SwapsCount="swapsCount",e.Timestamp="timestamp",e.TotalShares="totalShares"}(si||(si={})),function(e){e.Address="address",e.AssetManager="assetManager",e.Balance="balance",e.CashBalance="cashBalance",e.CircuitBreaker="circuitBreaker",e.CircuitBreakerBptPrice="circuitBreaker__bptPrice",e.CircuitBreakerId="circuitBreaker__id",e.CircuitBreakerLowerBoundPercentage="circuitBreaker__lowerBoundPercentage",e.CircuitBreakerUpperBoundPercentage="circuitBreaker__upperBoundPercentage",e.Decimals="decimals",e.Id="id",e.Index="index",e.IsExemptFromYieldProtocolFee="isExemptFromYieldProtocolFee",e.ManagedBalance="managedBalance",e.Managements="managements",e.Name="name",e.OldPriceRate="oldPriceRate",e.PaidProtocolFees="paidProtocolFees",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.PriceRate="priceRate",e.Symbol="symbol",e.Token="token",e.TokenAddress="token__address",e.TokenDecimals="token__decimals",e.TokenFxOracleDecimals="token__fxOracleDecimals",e.TokenId="token__id",e.TokenLatestFxPrice="token__latestFXPrice",e.TokenLatestUsdPrice="token__latestUSDPrice",e.TokenLatestUsdPriceTimestamp="token__latestUSDPriceTimestamp",e.TokenName="token__name",e.TokenSymbol="token__symbol",e.TokenTotalBalanceNotional="token__totalBalanceNotional",e.TokenTotalBalanceUsd="token__totalBalanceUSD",e.TokenTotalSwapCount="token__totalSwapCount",e.TokenTotalVolumeNotional="token__totalVolumeNotional",e.TokenTotalVolumeUsd="token__totalVolumeUSD",e.Weight="weight"}(ri||(ri={})),function(e){e.Address="address",e.Alpha="alpha",e.Amp="amp",e.AmpUpdates="ampUpdates",e.BaseToken="baseToken",e.Beta="beta",e.C="c",e.CircuitBreakers="circuitBreakers",e.CreateTime="createTime",e.DSq="dSq",e.Delta="delta",e.Epsilon="epsilon",e.ExpiryTime="expiryTime",e.Factory="factory",e.HistoricalValues="historicalValues",e.HoldersCount="holdersCount",e.Id="id",e.IsInRecoveryMode="isInRecoveryMode",e.IsPaused="isPaused",e.JoinExitEnabled="joinExitEnabled",e.Lambda="lambda",e.LastJoinExitAmp="lastJoinExitAmp",e.LastPostJoinExitInvariant="lastPostJoinExitInvariant",e.LatestAmpUpdate="latestAmpUpdate",e.LatestAmpUpdateEndAmp="latestAmpUpdate__endAmp",e.LatestAmpUpdateEndTimestamp="latestAmpUpdate__endTimestamp",e.LatestAmpUpdateId="latestAmpUpdate__id",e.LatestAmpUpdateScheduledTimestamp="latestAmpUpdate__scheduledTimestamp",e.LatestAmpUpdateStartAmp="latestAmpUpdate__startAmp",e.LatestAmpUpdateStartTimestamp="latestAmpUpdate__startTimestamp",e.LowerTarget="lowerTarget",e.MainIndex="mainIndex",e.ManagementAumFee="managementAumFee",e.ManagementFee="managementFee",e.MustAllowlistLPs="mustAllowlistLPs",e.Name="name",e.OracleEnabled="oracleEnabled",e.Owner="owner",e.PoolType="poolType",e.PoolTypeVersion="poolTypeVersion",e.PriceRateProviders="priceRateProviders",e.PrincipalToken="principalToken",e.ProtocolAumFeeCache="protocolAumFeeCache",e.ProtocolId="protocolId",e.ProtocolIdData="protocolIdData",e.ProtocolIdDataId="protocolIdData__id",e.ProtocolIdDataName="protocolIdData__name",e.ProtocolSwapFeeCache="protocolSwapFeeCache",e.ProtocolYieldFeeCache="protocolYieldFeeCache",e.Root3Alpha="root3Alpha",e.S="s",e.Shares="shares",e.Snapshots="snapshots",e.SqrtAlpha="sqrtAlpha",e.SqrtBeta="sqrtBeta",e.StrategyType="strategyType",e.SwapEnabled="swapEnabled",e.SwapEnabledCurationSignal="swapEnabledCurationSignal",e.SwapEnabledInternal="swapEnabledInternal",e.SwapFee="swapFee",e.Swaps="swaps",e.SwapsCount="swapsCount",e.Symbol="symbol",e.TauAlphaX="tauAlphaX",e.TauAlphaY="tauAlphaY",e.TauBetaX="tauBetaX",e.TauBetaY="tauBetaY",e.Tokens="tokens",e.TokensList="tokensList",e.TotalAumFeeCollectedInBpt="totalAumFeeCollectedInBPT",e.TotalLiquidity="totalLiquidity",e.TotalLiquiditySansBpt="totalLiquiditySansBPT",e.TotalProtocolFee="totalProtocolFee",e.TotalProtocolFeePaidInBpt="totalProtocolFeePaidInBPT",e.TotalShares="totalShares",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.TotalWeight="totalWeight",e.Tx="tx",e.U="u",e.UnitSeconds="unitSeconds",e.UpperTarget="upperTarget",e.V="v",e.VaultId="vaultID",e.VaultIdId="vaultID__id",e.VaultIdPoolCount="vaultID__poolCount",e.VaultIdProtocolFeesCollector="vaultID__protocolFeesCollector",e.VaultIdTotalLiquidity="vaultID__totalLiquidity",e.VaultIdTotalProtocolFee="vaultID__totalProtocolFee",e.VaultIdTotalSwapCount="vaultID__totalSwapCount",e.VaultIdTotalSwapFee="vaultID__totalSwapFee",e.VaultIdTotalSwapVolume="vaultID__totalSwapVolume",e.W="w",e.WeightUpdates="weightUpdates",e.WrappedIndex="wrappedIndex",e.Z="z"}(pi||(pi={})),function(e){e.Address="address",e.CacheDuration="cacheDuration",e.CacheExpiry="cacheExpiry",e.Id="id",e.LastCached="lastCached",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Rate="rate",e.Token="token",e.TokenAddress="token__address",e.TokenAssetManager="token__assetManager",e.TokenBalance="token__balance",e.TokenCashBalance="token__cashBalance",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenIndex="token__index",e.TokenIsExemptFromYieldProtocolFee="token__isExemptFromYieldProtocolFee",e.TokenManagedBalance="token__managedBalance",e.TokenName="token__name",e.TokenOldPriceRate="token__oldPriceRate",e.TokenPaidProtocolFees="token__paidProtocolFees",e.TokenPriceRate="token__priceRate",e.TokenSymbol="token__symbol",e.TokenWeight="token__weight"}(di||(di={})),function(e){e.Id="id",e.Name="name"}(li||(li={})),function(e){e.EndSwapFeePercentage="endSwapFeePercentage",e.EndTimestamp="endTimestamp",e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartSwapFeePercentage="startSwapFeePercentage",e.StartTimestamp="startTimestamp"}(ui||(ui={})),function(e){e.Caller="caller",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Timestamp="timestamp",e.TokenAmountIn="tokenAmountIn",e.TokenAmountOut="tokenAmountOut",e.TokenIn="tokenIn",e.TokenInSym="tokenInSym",e.TokenOut="tokenOut",e.TokenOutSym="tokenOutSym",e.Tx="tx",e.UserAddress="userAddress",e.UserAddressId="userAddress__id",e.ValueUsd="valueUSD"}(ci||(ci={})),function(e){e.Amount="amount",e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Price="price",e.PricingAsset="pricingAsset",e.Timestamp="timestamp"}(yi||(yi={})),function(e){e.Id="id",e.Timestamp="timestamp",e.Token="token",e.TokenAddress="token__address",e.TokenDecimals="token__decimals",e.TokenFxOracleDecimals="token__fxOracleDecimals",e.TokenId="token__id",e.TokenLatestFxPrice="token__latestFXPrice",e.TokenLatestUsdPrice="token__latestUSDPrice",e.TokenLatestUsdPriceTimestamp="token__latestUSDPriceTimestamp",e.TokenName="token__name",e.TokenSymbol="token__symbol",e.TokenTotalBalanceNotional="token__totalBalanceNotional",e.TokenTotalBalanceUsd="token__totalBalanceUSD",e.TokenTotalSwapCount="token__totalSwapCount",e.TokenTotalVolumeNotional="token__totalVolumeNotional",e.TokenTotalVolumeUsd="token__totalVolumeUSD",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(bi||(bi={})),function(e){e.Address="address",e.Decimals="decimals",e.FxOracleDecimals="fxOracleDecimals",e.Id="id",e.LatestFxPrice="latestFXPrice",e.LatestPrice="latestPrice",e.LatestPriceAsset="latestPrice__asset",e.LatestPriceBlock="latestPrice__block",e.LatestPriceId="latestPrice__id",e.LatestPricePrice="latestPrice__price",e.LatestPricePricingAsset="latestPrice__pricingAsset",e.LatestUsdPrice="latestUSDPrice",e.LatestUsdPriceTimestamp="latestUSDPriceTimestamp",e.Name="name",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Symbol="symbol",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(mi||(mi={})),function(e){e.Id="id",e.Pair="pair",e.PairId="pair__id",e.PairTotalSwapFee="pair__totalSwapFee",e.PairTotalSwapVolume="pair__totalSwapVolume",e.Timestamp="timestamp",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(fi||(fi={})),function(e){e.Id="id",e.Token0="token0",e.Token0Address="token0__address",e.Token0Decimals="token0__decimals",e.Token0FxOracleDecimals="token0__fxOracleDecimals",e.Token0Id="token0__id",e.Token0LatestFxPrice="token0__latestFXPrice",e.Token0LatestUsdPrice="token0__latestUSDPrice",e.Token0LatestUsdPriceTimestamp="token0__latestUSDPriceTimestamp",e.Token0Name="token0__name",e.Token0Symbol="token0__symbol",e.Token0TotalBalanceNotional="token0__totalBalanceNotional",e.Token0TotalBalanceUsd="token0__totalBalanceUSD",e.Token0TotalSwapCount="token0__totalSwapCount",e.Token0TotalVolumeNotional="token0__totalVolumeNotional",e.Token0TotalVolumeUsd="token0__totalVolumeUSD",e.Token1="token1",e.Token1Address="token1__address",e.Token1Decimals="token1__decimals",e.Token1FxOracleDecimals="token1__fxOracleDecimals",e.Token1Id="token1__id",e.Token1LatestFxPrice="token1__latestFXPrice",e.Token1LatestUsdPrice="token1__latestUSDPrice",e.Token1LatestUsdPriceTimestamp="token1__latestUSDPriceTimestamp",e.Token1Name="token1__name",e.Token1Symbol="token1__symbol",e.Token1TotalBalanceNotional="token1__totalBalanceNotional",e.Token1TotalBalanceUsd="token1__totalBalanceUSD",e.Token1TotalSwapCount="token1__totalSwapCount",e.Token1TotalVolumeNotional="token1__totalVolumeNotional",e.Token1TotalVolumeUsd="token1__totalVolumeUSD",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(Ti||(Ti={})),function(e){e.Balance="balance",e.Id="id",e.Token="token",e.TokenInfo="tokenInfo",e.TokenInfoAddress="tokenInfo__address",e.TokenInfoDecimals="tokenInfo__decimals",e.TokenInfoFxOracleDecimals="tokenInfo__fxOracleDecimals",e.TokenInfoId="tokenInfo__id",e.TokenInfoLatestFxPrice="tokenInfo__latestFXPrice",e.TokenInfoLatestUsdPrice="tokenInfo__latestUSDPrice",e.TokenInfoLatestUsdPriceTimestamp="tokenInfo__latestUSDPriceTimestamp",e.TokenInfoName="tokenInfo__name",e.TokenInfoSymbol="tokenInfo__symbol",e.TokenInfoTotalBalanceNotional="tokenInfo__totalBalanceNotional",e.TokenInfoTotalBalanceUsd="tokenInfo__totalBalanceUSD",e.TokenInfoTotalSwapCount="tokenInfo__totalSwapCount",e.TokenInfoTotalVolumeNotional="tokenInfo__totalVolumeNotional",e.TokenInfoTotalVolumeUsd="tokenInfo__totalVolumeUSD",e.UserAddress="userAddress",e.UserAddressId="userAddress__id"}(hi||(hi={})),function(e){e.Id="id",e.SharesOwned="sharesOwned",e.Swaps="swaps",e.UserInternalBalances="userInternalBalances"}(Ii||(Ii={})),function(e){e.Allow="allow",e.Deny="deny"}(_i||(_i={}));const Pi=gi`
    fragment SubgraphPoolShare on PoolShare {
  id
  balance
  userAddress {
    id
  }
  poolId {
    id
    address
  }
}
    `,wi=gi`
    fragment SubgraphPool on Pool {
  id
  address
  poolType
  poolTypeVersion
  factory
  strategyType
  symbol
  name
  swapEnabled
  swapFee
  protocolYieldFeeCache
  protocolSwapFeeCache
  owner
  totalWeight
  totalSwapVolume
  totalSwapFee
  totalLiquidity
  totalShares
  tokens(first: 100, orderBy: index) {
    ...SubgraphPoolToken
  }
  swapsCount
  holdersCount
  tokensList
  amp
  priceRateProviders(first: 100) {
    ...SubgraphPriceRateProvider
  }
  expiryTime
  unitSeconds
  createTime
  principalToken
  baseToken
  wrappedIndex
  mainIndex
  lowerTarget
  upperTarget
  sqrtAlpha
  sqrtBeta
  root3Alpha
  isInRecoveryMode
  isPaused
  alpha
  beta
  c
  s
  lambda
  tauAlphaX
  tauAlphaY
  tauBetaX
  tauBetaY
  u
  v
  w
  z
  dSq
  delta
  epsilon
}
    ${gi`
    fragment SubgraphPoolToken on PoolToken {
  id
  symbol
  name
  decimals
  address
  balance
  managedBalance
  weight
  priceRate
  isExemptFromYieldProtocolFee
  token {
    ...TokenTree
  }
}
    ${gi`
    fragment TokenTree on Token {
  latestUSDPrice
  latestFXPrice
  pool {
    ...SubgraphSubPool
    tokens(first: 100, orderBy: index) {
      ...SubgraphSubPoolToken
      token {
        latestUSDPrice
        pool {
          ...SubgraphSubPool
          tokens(first: 100, orderBy: index) {
            ...SubgraphSubPoolToken
            token {
              latestUSDPrice
              pool {
                ...SubgraphSubPool
              }
            }
          }
        }
      }
    }
  }
}
    ${gi`
    fragment SubgraphSubPool on Pool {
  id
  totalShares
  address
  poolType
  mainIndex
}
    `}
${gi`
    fragment SubgraphSubPoolToken on PoolToken {
  address
  balance
  weight
  priceRate
  symbol
  decimals
  isExemptFromYieldProtocolFee
}
    `}`}`}
${gi`
    fragment SubgraphPriceRateProvider on PriceRateProvider {
  address
  token {
    address
  }
}
    `}`;gi`
    fragment TokenAttrs on Token {
  address
  symbol
  decimals
}
    `;const xi=gi`
    fragment SubgraphPoolSnapshot on PoolSnapshot {
  id
  pool {
    id
  }
  totalShares
  swapVolume
  swapFees
  timestamp
}
    `,Ei=gi`
    fragment SubgraphJoinExit on JoinExit {
  amounts
  id
  sender
  timestamp
  tx
  type
  user {
    id
  }
  pool {
    id
    tokensList
  }
}
    `,Ai=gi`
    fragment SubgraphBalancer on Balancer {
  id
  totalLiquidity
  totalSwapVolume
  totalSwapFee
  totalSwapCount
  poolCount
}
    `,vi=gi`
    fragment SubgraphTokenPrice on TokenPrice {
  id
  poolId {
    id
  }
  asset
  amount
  pricingAsset
  price
  block
  timestamp
}
    `,Si=gi`
    fragment SubgraphTokenLatestPrice on LatestPrice {
  id
  asset
  price
  poolId {
    id
  }
  pricingAsset
}
    `,ki=gi`
    fragment SubgraphUser on User {
  id
  sharesOwned(first: 1000) {
    balance
    poolId {
      id
    }
  }
}
    `,Oi=gi`
    query PoolShare($id: ID!, $block: Block_height) {
  poolShare(id: $id, block: $block) {
    ...SubgraphPoolShare
  }
}
    ${Pi}`,Mi=gi`
    query PoolShares($first: Int, $orderBy: PoolShare_orderBy, $orderDirection: OrderDirection, $skip: Int, $where: PoolShare_filter, $block: Block_height) {
  poolShares(
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    where: $where
    block: $block
  ) {
    ...SubgraphPoolShare
  }
}
    ${Pi}`,Ci=gi`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${wi}`,Fi=gi`
    query AllPools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pool0: pools(
    first: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool1000: pools(
    first: 1000
    skip: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool2000: pools(
    first: 1000
    skip: 2000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${wi}`,Bi=gi`
    query Pool($id: ID!, $block: Block_height) {
  pool(id: $id, block: $block) {
    ...SubgraphPool
  }
}
    ${wi}`,Ri=gi`
    query PoolHistoricalLiquidities($skip: Int, $first: Int, $orderBy: PoolHistoricalLiquidity_orderBy, $orderDirection: OrderDirection, $where: PoolHistoricalLiquidity_filter, $block: Block_height) {
  poolHistoricalLiquidities(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    id
    poolId {
      id
    }
    poolTotalShares
    poolLiquidity
    poolShareValue
    pricingAsset
    block
  }
}
    `,Ni=gi`
    query PoolSnapshots($skip: Int, $first: Int, $orderBy: PoolSnapshot_orderBy, $orderDirection: OrderDirection, $where: PoolSnapshot_filter, $block: Block_height) {
  poolSnapshots(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolSnapshot
  }
}
    ${xi}`,Li=gi`
    query JoinExits($skip: Int, $first: Int, $orderBy: JoinExit_orderBy, $orderDirection: OrderDirection, $where: JoinExit_filter, $block: Block_height) {
  joinExits(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphJoinExit
  }
}
    ${Ei}`,Di=gi`
    query Balancers($skip: Int, $first: Int, $orderBy: Balancer_orderBy, $orderDirection: OrderDirection, $where: Balancer_filter, $block: Block_height) {
  balancers(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphBalancer
  }
}
    ${Ai}`,Ui=gi`
    query TokenPrices($skip: Int, $first: Int, $orderBy: TokenPrice_orderBy, $orderDirection: OrderDirection, $where: TokenPrice_filter, $block: Block_height) {
  tokenPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenPrice
  }
}
    ${vi}`,Vi=gi`
    query TokenLatestPrices($skip: Int, $first: Int, $orderBy: LatestPrice_orderBy, $orderDirection: OrderDirection, $where: LatestPrice_filter, $block: Block_height) {
  latestPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenLatestPrice
  }
}
    ${Si}`,qi=gi`
    query TokenLatestPrice($id: ID!) {
  latestPrice(id: $id) {
    ...SubgraphTokenLatestPrice
  }
}
    ${Si}`,Gi=gi`
    query User($id: ID!, $block: Block_height) {
  user(id: $id, block: $block) {
    ...SubgraphUser
  }
}
    ${ki}`,Wi=gi`
    query Users($skip: Int, $first: Int, $orderBy: User_orderBy, $orderDirection: OrderDirection, $where: User_filter, $block: Block_height) {
  users(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphUser
  }
}
    ${ki}`,$i=(e,t,a)=>e();function Hi(e,t=$i){return{PoolShare:(a,n)=>t((t=>e.request(Oi,a,{...n,...t})),"PoolShare","query"),PoolShares:(a,n)=>t((t=>e.request(Mi,a,{...n,...t})),"PoolShares","query"),Pools:(a,n)=>t((t=>e.request(Ci,a,{...n,...t})),"Pools","query"),AllPools:(a,n)=>t((t=>e.request(Fi,a,{...n,...t})),"AllPools","query"),Pool:(a,n)=>t((t=>e.request(Bi,a,{...n,...t})),"Pool","query"),PoolHistoricalLiquidities:(a,n)=>t((t=>e.request(Ri,a,{...n,...t})),"PoolHistoricalLiquidities","query"),PoolSnapshots:(a,n)=>t((t=>e.request(Ni,a,{...n,...t})),"PoolSnapshots","query"),JoinExits:(a,n)=>t((t=>e.request(Li,a,{...n,...t})),"JoinExits","query"),Balancers:(a,n)=>t((t=>e.request(Di,a,{...n,...t})),"Balancers","query"),TokenPrices:(a,n)=>t((t=>e.request(Ui,a,{...n,...t})),"TokenPrices","query"),TokenLatestPrices:(a,n)=>t((t=>e.request(Vi,a,{...n,...t})),"TokenLatestPrices","query"),TokenLatestPrice:(a,n)=>t((t=>e.request(qi,a,{...n,...t})),"TokenLatestPrice","query"),User:(a,n)=>t((t=>e.request(Gi,a,{...n,...t})),"User","query"),Users:(a,n)=>t((t=>e.request(Wi,a,{...n,...t})),"Users","query")}}var Ki,Ji,Xi,Yi,ji,zi,Zi,Qi,es,ts,as,ns,os,is,ss,rs,ps,ds;!function(e){e.Arbitrum="Arbitrum",e.Avalanche="Avalanche",e.Base="Base",e.Gnosis="Gnosis",e.Optimism="Optimism",e.Polygon="Polygon",e.PolygonZkEvm="PolygonZkEvm"}(Ki||(Ki={})),function(e){e.gauges="gauges",e.id="id",e.numGauges="numGauges"}(Ji||(Ji={})),function(e){e.balance="balance",e.gauge="gauge",e.gauge__id="gauge__id",e.gauge__isKilled="gauge__isKilled",e.gauge__isPreferentialGauge="gauge__isPreferentialGauge",e.gauge__poolAddress="gauge__poolAddress",e.gauge__poolId="gauge__poolId",e.gauge__relativeWeightCap="gauge__relativeWeightCap",e.gauge__streamer="gauge__streamer",e.gauge__symbol="gauge__symbol",e.gauge__totalSupply="gauge__totalSupply",e.id="id",e.user="user",e.user__id="user__id"}(Xi||(Xi={})),function(e){e.id="id",e.name="name"}(Yi||(Yi={})),function(e){e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.timestamp="timestamp",e.user="user",e.user__id="user__id",e.weight="weight"}(ji||(ji={})),function(e){e.addedTimestamp="addedTimestamp",e.address="address",e.id="id",e.liquidityGauge="liquidityGauge",e.liquidityGauge__id="liquidityGauge__id",e.liquidityGauge__isKilled="liquidityGauge__isKilled",e.liquidityGauge__isPreferentialGauge="liquidityGauge__isPreferentialGauge",e.liquidityGauge__poolAddress="liquidityGauge__poolAddress",e.liquidityGauge__poolId="liquidityGauge__poolId",e.liquidityGauge__relativeWeightCap="liquidityGauge__relativeWeightCap",e.liquidityGauge__streamer="liquidityGauge__streamer",e.liquidityGauge__symbol="liquidityGauge__symbol",e.liquidityGauge__totalSupply="liquidityGauge__totalSupply",e.rootGauge="rootGauge",e.rootGauge__chain="rootGauge__chain",e.rootGauge__id="rootGauge__id",e.rootGauge__isKilled="rootGauge__isKilled",e.rootGauge__recipient="rootGauge__recipient",e.rootGauge__relativeWeightCap="rootGauge__relativeWeightCap",e.type="type",e.type__id="type__id",e.type__name="type__name"}(zi||(zi={})),function(e){e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.isPreferentialGauge="isPreferentialGauge",e.pool="pool",e.poolAddress="poolAddress",e.poolId="poolId",e.pool__address="pool__address",e.pool__id="pool__id",e.pool__poolId="pool__poolId",e.relativeWeightCap="relativeWeightCap",e.rewardTokensList="rewardTokensList",e.shares="shares",e.streamer="streamer",e.symbol="symbol",e.tokens="tokens",e.totalSupply="totalSupply"}(Zi||(Zi={})),function(e){e.bias="bias",e.id="id",e.slope="slope",e.timestamp="timestamp",e.user="user",e.user__id="user__id"}(Qi||(Qi={})),function(e){e.bias="bias",e.dstChainId="dstChainId",e.id="id",e.localUser="localUser",e.localUser__id="localUser__id",e.remoteUser="remoteUser",e.slope="slope",e.timestamp="timestamp",e.votingEscrowID="votingEscrowID",e.votingEscrowID__id="votingEscrowID__id",e.votingEscrowID__stakedSupply="votingEscrowID__stakedSupply"}(es||(es={})),function(e){e.asc="asc",e.desc="desc"}(ts||(ts={})),function(e){e.address="address",e.gauges="gauges",e.gaugesList="gaugesList",e.id="id",e.poolId="poolId",e.preferentialGauge="preferentialGauge",e.preferentialGauge__id="preferentialGauge__id",e.preferentialGauge__isKilled="preferentialGauge__isKilled",e.preferentialGauge__isPreferentialGauge="preferentialGauge__isPreferentialGauge",e.preferentialGauge__poolAddress="preferentialGauge__poolAddress",e.preferentialGauge__poolId="preferentialGauge__poolId",e.preferentialGauge__relativeWeightCap="preferentialGauge__relativeWeightCap",e.preferentialGauge__streamer="preferentialGauge__streamer",e.preferentialGauge__symbol="preferentialGauge__symbol",e.preferentialGauge__totalSupply="preferentialGauge__totalSupply"}(as||(as={})),function(e){e.decimals="decimals",e.gauge="gauge",e.gauge__id="gauge__id",e.gauge__isKilled="gauge__isKilled",e.gauge__isPreferentialGauge="gauge__isPreferentialGauge",e.gauge__poolAddress="gauge__poolAddress",e.gauge__poolId="gauge__poolId",e.gauge__relativeWeightCap="gauge__relativeWeightCap",e.gauge__streamer="gauge__streamer",e.gauge__symbol="gauge__symbol",e.gauge__totalSupply="gauge__totalSupply",e.id="id",e.periodFinish="periodFinish",e.rate="rate",e.symbol="symbol",e.totalDeposited="totalDeposited"}(ns||(ns={})),function(e){e.chain="chain",e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.recipient="recipient",e.relativeWeightCap="relativeWeightCap"}(os||(os={})),function(e){e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.recipient="recipient",e.relativeWeightCap="relativeWeightCap"}(is||(is={})),function(e){e.gaugeShares="gaugeShares",e.gaugeVotes="gaugeVotes",e.id="id",e.omniVotingLocks="omniVotingLocks",e.votingLocks="votingLocks"}(ss||(ss={})),function(e){e.bias="bias",e.id="id",e.lockedBalance="lockedBalance",e.slope="slope",e.timestamp="timestamp",e.unlockTime="unlockTime",e.updatedAt="updatedAt",e.user="user",e.user__id="user__id",e.votingEscrowID="votingEscrowID",e.votingEscrowID__id="votingEscrowID__id",e.votingEscrowID__stakedSupply="votingEscrowID__stakedSupply"}(rs||(rs={})),function(e){e.id="id",e.locks="locks",e.omniLocks="omniLocks",e.stakedSupply="stakedSupply"}(ps||(ps={})),function(e){e.allow="allow",e.deny="deny"}(ds||(ds={}));const ls=gi`
    fragment SubgraphGaugeShare on GaugeShare {
  id
  balance
  user {
    id
  }
  gauge {
    id
    isKilled
    poolId
    poolAddress
    totalSupply
  }
}
    `,us=gi`
    fragment SubgraphLiquidityGauge on LiquidityGauge {
  id
  symbol
  poolAddress
  poolId
  streamer
  factory {
    id
    numGauges
  }
  totalSupply
  tokens {
    id
    symbol
    decimals
    totalDeposited
    rate
    periodFinish
  }
}
    `,cs=gi`
    fragment SubgraphPoolWithPreferentialGauge on Pool {
  id
  poolId
  preferentialGauge {
    ...SubgraphLiquidityGauge
  }
}
    ${us}`,ys=gi`
    query GaugeShare($id: ID!, $block: Block_height) {
  gaugeShare(id: $id, block: $block) {
    ...SubgraphGaugeShare
  }
}
    ${ls}`,bs=gi`
    query GaugeShares($first: Int, $orderBy: GaugeShare_orderBy, $orderDirection: OrderDirection, $skip: Int, $where: GaugeShare_filter, $block: Block_height) {
  gaugeShares(
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    where: $where
    block: $block
  ) {
    ...SubgraphGaugeShare
  }
}
    ${ls}`,ms=gi`
    query LiquidityGauges($skip: Int, $first: Int, $orderBy: LiquidityGauge_orderBy, $orderDirection: OrderDirection, $where: LiquidityGauge_filter, $block: Block_height) {
  liquidityGauges(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphLiquidityGauge
  }
}
    ${us}`,fs=gi`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolWithPreferentialGauge
  }
}
    ${cs}`,Ts=gi`
    query PoolGauges($where: Pool_filter, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $skip: Int, $block: Block_height) {
  pools(
    where: $where
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    block: $block
  ) {
    gauges {
      id
      relativeWeightCap
    }
    preferentialGauge {
      id
    }
  }
}
    `,hs=(e,t,a)=>e();function Is(e){return Hi(new J(e))}function _s(e){return function(e,t=hs){return{GaugeShare:(a,n)=>t((t=>e.request(ys,a,{...n,...t})),"GaugeShare","query"),GaugeShares:(a,n)=>t((t=>e.request(bs,a,{...n,...t})),"GaugeShares","query"),LiquidityGauges:(a,n)=>t((t=>e.request(ms,a,{...n,...t})),"LiquidityGauges","query"),Pools:(a,n)=>t((t=>e.request(fs,a,{...n,...t})),"Pools","query"),PoolGauges:(a,n)=>t((t=>e.request(Ts,a,{...n,...t})),"PoolGauges","query")}}(new J(e))}class gs{constructor(e,a,n={}){this.options=n,this.calls=[],this.paths=[],this.address="0xcA11bde05977b3631167028862bE2a173976CA11",this.interface=new t(e),this.multicall=za.connect(this.address,a)}call(e,t,a,n){return this.calls.push([t,a,n]),this.paths.push(e),this}async execute(e={},t=1024){const a=e;return(await this.executeMulticall(t)).forEach(((e,t)=>g(a,this.paths[t],e.length>1?e:e[0]))),this.calls=[],this.paths=[],a}async executeMulticall(e){const t=Math.ceil(this.calls.length/e),a=[],n=[];for(let a=0;a<t;a++){const t=this.calls.slice(a*e,(a+1)*e).map((([e,t,a])=>({target:e,allowFailure:!0,callData:this.interface.encodeFunctionData(t,a)})));n.push(this.multicall.callStatic.aggregate3(t,this.options))}return(await Promise.all(n)).forEach(((t,n)=>{const o=n*e;for(let e=0;e<t.length;e++){const n=o+e,{success:i,returnData:s}=t[e];if(i)try{const e=this.interface.decodeFunctionResult(this.calls[n][1],s);a[n]=e}catch(e){console.error("Multicall error",this.paths[n]),a[n]=[]}else console.error("Failed request in multicall",this.paths[n]),a[n]=[]}})),a}}const Ps=["function getSwapFeePercentage() view returns (uint256)","function percentFee() view returns (uint256)","function protocolPercentFee() view returns (uint256)","function getNormalizedWeights() view returns (uint256[])","function totalSupply() view returns (uint256)","function getVirtualSupply() view returns (uint256)","function getActualSupply() view returns (uint256)","function getTargets() view returns (uint256 lowerTarget, uint256 upperTarget)","function getTokenRates() view returns (uint256, uint256)","function getWrappedTokenRate() view returns (uint256)","function getAmplificationParameter() view returns (uint256 value, bool isUpdating, uint256 precision)","function getPausedState() view returns (bool)","function inRecoveryMode() view returns (bool)","function getRate() view returns (uint256)","function getScalingFactors() view returns (uint256[] memory)","function getPoolTokens(bytes32) view returns (address[], uint256[])"],ws=(e,t,a)=>{a.call(`${e}.weights`,t,"getNormalizedWeights")},xs=(e,t,a)=>{a.call(`${e}.targets`,t,"getTargets"),a.call(`${e}.wrappedTokenRate`,t,"getWrappedTokenRate")},Es=(e,t,a)=>{a.call(`${e}.amp`,t,"getAmplificationParameter")},As=(e,t,a)=>{a.call(`${e}.tokenRates`,t,"getTokenRates")},vs=async(e,t,a,n=1024)=>{if(0===e.length)return{};const o=new gs(Ps,a);e.forEach((({id:e,address:a,poolType:n,poolTypeVersion:i})=>{((e,t,a,n,o)=>{o.call(`${e}.poolTokens`,a,"getPoolTokens",[e]),o.call(`${e}.totalShares`,t,(e=>e.includes("Linear")||["StablePhantom"].includes(e)?"getVirtualSupply":"ComposableStable"===e?"getActualSupply":"totalSupply")(n)),o.call(`${e}.swapFee`,t,(e=>"Element"===e?"percentFee":"FX"===e?"protocolPercentFee":"getSwapFeePercentage")(n))})(e,a,t,n,o),((e,t=1)=>{const a=()=>({});switch(e){case"Weighted":case"LiquidityBootstrapping":case"Investment":return ws;case"Stable":case"StablePhantom":case"MetaStable":case"ComposableStable":return Es;case"GyroE":case"Gyro2":return 2===t?As:a;case"AaveLinear":return 1===t?xs:a;default:return a}})(n,i)(e,a,o)}));return await o.execute({},n)};async function Ss(e,t,a,n,o=1024){if(0===e.length)return e;const i=[],s=await vs(e,a,n,o);return e.forEach((e=>{const t=s[e.id];i.push(((e,t)=>({...e,tokens:t.poolTokens?e.tokens.map((a=>{const n=t.poolTokens[0].map((e=>e.toLowerCase())).indexOf(a.address),o=e.wrappedIndex&&e.tokensList[e.wrappedIndex],i=void 0===a.decimals?18:a.decimals;return{...a,balance:l(t.poolTokens[1][n],i),weight:t.weights&&l(t.weights[n],18)||a.weight,priceRate:t.wrappedTokenRate&&o&&o.toLowerCase()===a.address.toLowerCase()&&l(t.wrappedTokenRate,18)||a.priceRate}})):e.tokens,totalShares:t.totalShares?l(t.totalShares,18):e.totalShares,swapFee:t.swapFee?l(t.swapFee,18):e.swapFee,amp:t.amp&&t.amp[0]&&l(t.amp[0],String(t.amp[2]).length-1)||e.amp,lowerTarget:t.targets&&l(t.targets[0],18)||e.lowerTarget,upperTarget:t.targets&&l(t.targets[1],18)||e.upperTarget,tokenRates:t.tokenRates&&t.tokenRates.map((e=>l(e,18)))||e.tokenRates}))(e,t))})),i}class ks{constructor(e,t,a,n,o){this.client=e,this.provider=t,this.network=a,this.sorConfig=n,this.defaultArgs=(null==o?void 0:o.args)||{orderBy:pi.TotalLiquidity,orderDirection:ai.Desc,where:{swapEnabled:{eq:!0},totalShares:{gt:1e-12}}}}async getPools(e){const t=function(e){return e.map((e=>({...e,poolType:e.poolType||"",tokens:(e.tokens||[]).map((e=>({...e,weight:e.weight||null}))),totalWeight:e.totalWeight||void 0,amp:e.amp||void 0,expiryTime:e.expiryTime?P(e.expiryTime):void 0,unitSeconds:e.unitSeconds?P(e.unitSeconds):void 0,principalToken:e.principalToken||void 0,baseToken:e.baseToken||void 0})))}((await this.getSubgraphPools(e)).filter((e=>{if(!this.network.poolsToIgnore)return!0;return-1===this.network.poolsToIgnore.findIndex((t=>t.toLowerCase()===e.id.toLowerCase()))})));if(this.sorConfig&&!1===this.sorConfig.fetchOnChainBalances)return t;const a=Re.getInstance();a.time(`fetching on-chain balances for ${t.length} pools`);const n=await Ss(t,this.network.addresses.contracts.multicall,this.network.addresses.contracts.vault,this.provider,this.network.multicallBatchSize);return a.timeEnd(`fetching on-chain balances for ${t.length} pools`),n}async getSubgraphPools(e){const t=new zt(e||this.defaultArgs).format(new jt);if(t.first){const{pools:e}=await this.client.Pools(t);return e}const{pool0:a,pool1000:n,pool2000:o}=await this.client.AllPools(t);return[...a,...n,...o]}}class Os{constructor(e,t){this.client=e,this.weth=t.toLowerCase()}async getNativeAssetPriceInToken(e){const t=await this.getLatestPriceInEthFromSubgraph(e);if(!t)throw Error("No price found in the subgraph");return""+1/t}async getLatestPriceInEthFromSubgraph(e){e=e.toLowerCase();const{latestPrices:t}=await this.client.TokenLatestPrices({where:{asset_in:[e,this.weth]}}),a=w(t,"id");if(a[`${e}-${this.weth}`])return parseFloat(a[`${e}-${this.weth}`].price);const n=t.filter((t=>t.asset===e));for(const e of n){const t=a[`${e.pricingAsset}-${this.weth}`];if(t)return parseFloat(e.price)*parseFloat(t.price)}return null}}function Ms(e){var t,a;if("number"==typeof e.network){const a=xn[e.network];return{...a,urls:{...a.urls,subgraph:null!==(t=e.customSubgraphUrl)&&void 0!==t?t:a.urls.subgraph},tenderly:e.tenderly}}return{...e.network,urls:{...e.network.urls,subgraph:null!==(a=e.customSubgraphUrl)&&void 0!==a?a:e.network.urls.subgraph},tenderly:e.network.tenderly}}const Cs=["0x00c2a4be503869fa751c2dbcb7156cc970b5a8da000000000000000000000477","0x02d928e68d8f10c0358566152677db51e1e2dc8c00000000000000000000051e","0x04248aabca09e9a1a3d5129a7ba05b7f17de768400000000000000000000050e","0x05513ca725b6ce035ca2641075474eb469f05f4c00020000000000000000041f","0x0a0fb4ff697de5ac5b6770cd8ee1b72af80b57cf000000000000000000000496","0x0afbd58beca09545e4fb67772faf3858e610bcd00000000000000000000004b9","0x0d05aac44ac7dd3c7ba5d50be93eb884a057d23400000000000000000000051c","0x11839d635e2f0270da37e8ef4324d4d5d54329570002000000000000000004d8","0x126e7643235ec0ab9c103c507642dc3f4ca23c66000000000000000000000468","0x133d241f225750d2c92948e464a5a80111920331000000000000000000000476","0x159cb00338fb63f263fd6f621df619cef71da9540000000000000000000004d5","0x173063a30e095313eee39411f07e95a8a806014e0002000000000000000003ab","0x1bd2f176a812e312077bca87e37c08432bb09f3e0000000000000000000005a1","0x20b156776114e8a801e9767d90c6ccccc8adf398000000000000000000000499","0x246ffb4d928e394a02e45761fecdba6c2e79b8eb000000000000000000000541","0x25accb7943fd73dda5e23ba6329085a3c24bfb6a000200000000000000000387","0x26c2b83fc8535deead276f5cc3ad9c1a2192e02700020000000000000000056b","0x2b218683178d029bab6c9789b1073aa6c96e517600000000000000000000058c","0x2ba7aa2213fa2c909cd9e46fed5a0059542b36b00000000000000000000003a3","0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c0000000000000000000000fd","0x2e52c64fd319e380cdbcfc4577ea1fda558a32e40002000000000000000005ba","0x2f4eb100552ef93840d5adc30560e5513dfffacb000000000000000000000334","0x2ff1a9dbdacd55297452cfd8a4d94724bc22a5f7000000000000000000000484","0x3035917be42af437cbdd774be26b9ec90a2bd677000200000000000000000543","0x331d50e0b00fc1c32742f151e56b9b616227e23e00000000000000000000047c","0x334c96d792e4b26b841d28f53235281cec1be1f200020000000000000000038a","0x335d1709d4da9aca59d16328db5cd4ea66bfe06b0000000000000000000004d6","0x395d8a1d9ad82b5abe558f8abbfe183b27138af40000000000000000000004e5","0x3bb22fc9033b802f2ac47c18885f63476f158afc000000000000000000000483","0x3c640f0d3036ad85afa2d5a9e32be651657b874f00000000000000000000046b","0x3cdae4f12a67ba563499e102f309c73213cb241c000000000000000000000335","0x3dbb8d974b82e82ce79c20c0f5995f4f1f533ede000000000000000000000470","0x3f7a7fd7f214be45ec26820fd01ac3be4fc75aa70002000000000000000004c5","0x3fcb7085b8f2f473f80bf6d879cae99ea4de934400000000000000000000056d","0x41503c9d499ddbd1dcdf818a1b05e9774203bf46000000000000000000000594","0x4228290ee9cab692938ff0b4ba303fbcdb68e9f200020000000000000000057d","0x454ed96955d04d2f5cdd05e0fd1c77975bfe5307000000000000000000000410","0x481c5fc05d63a58aa2f0f2aa417c021b5d419cb200000000000000000000056a","0x483006684f422a9448023b2382615c57c5ecf18f000000000000000000000488","0x4a82b580365cff9b146281ab72500957a849abdc000000000000000000000494","0x4c81255cc9ed7062180ea99962fe05ac0d57350b0000000000000000000005a3","0x4c8d2e60863e8d7e1033eda2b3d84e92a641802000000000000000000000040f","0x4cbde5c4b4b53ebe4af4adb85404725985406163000000000000000000000595","0x4ce0bd7debf13434d3ae127430e9bd4291bfb61f00020000000000000000038b","0x4ce277df0feb5b4d07a0ca2adcf5326e4005239d000000000000000000000518","0x4fd4687ec38220f805b6363c3c1e52d0df3b5023000200000000000000000473","0x4fd63966879300cafafbb35d157dc5229278ed230000000000000000000000e9","0x50cf90b954958480b8df7958a9e965752f62712400000000000000000000046f","0x53bc3cba3832ebecbfa002c12023f8ab1aa3a3a0000000000000000000000411","0x5a6a8cffb4347ff7fc484bf5f0f8a2e234d34255000200000000000000000275","0x5b3240b6be3e7487d61cd1afdfc7fe4fa1d81e6400000000000000000000037b","0x60683b05e9a39e3509d8fdb9c959f23170f8a0fa000000000000000000000489","0x60d604890feaa0b5460b28a424407c24fe89374a0000000000000000000004fc","0x639883476960a23b38579acfd7d71561a0f408cf000200000000000000000505","0x652d486b80c461c397b0d95612a404da936f3db30000000000000000000000e7","0x6667c6fa9f2b3fc1cc8d85320b62703d938e43850000000000000000000004fb","0x6a1eb2e9b45e772f55bd9a34659a04b6f75da68700000000000000000000040d","0x6c56e72c551b5ac4bf54a620a76077ca768c8fe40002000000000000000004da","0x70b7d3b3209a59fb0400e17f67f3ee8c37363f4900020000000000000000018f","0x7337224d59cb16c2dc6938cd45a7b2c60c865d6a0000000000000000000004d4","0x74cbfaf94a3577c539a9dcee9870a6349a33b34f000000000000000000000534","0x779d01f939d78a918a3de18cc236ee89221dfd4e0000000000000000000004c7","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x804cdb9116a10bb78768d3252355a1b18067bf8f0000000000000000000000fb","0x813e3fe1761f714c502d1d2d3a7cceb33f37f59d00000000000000000000040c","0x82698aecc9e28e9bb27608bd52cf57f704bd1b83000000000000000000000336","0x8a6b25e33b12d1bb6929a8793961076bd1f9d3eb0002000000000000000003e8","0x8e6ec57a822c2f527f2df7c7d7d361df3e7530a1000000000000000000000498","0x8f4063446f5011bc1c9f79a819efe87776f23704000000000000000000000197","0x9001cbbd96f54a658ff4e6e65ab564ded76a543100000000000000000000050a","0x9210f1204b5a24742eba12f710636d76240df3d00000000000000000000000fc","0x9516a2d25958edb8da246a320f2c7d94a0dbe25d000000000000000000000519","0x959216bb492b2efa72b15b7aacea5b5c984c3cca000200000000000000000472","0x968024662b9566b42d78af23a0f441bc8723fa83000200000000000000000418","0x99c88ad7dc566616548adde8ed3effa730eb6c3400000000000000000000049a","0x9b1c8407a360443a9e5eca004713e4088fab8ac0000000000000000000000497","0x9b692f571b256140a39a34676bffa30634c586e100000000000000000000059d","0x9d7f992c900fbea0ec314bdd71b7cc1becf76a33000200000000000000000573","0x9fb771d530b0ceba5160f7bfe2dd1e8b8aa1340300000000000000000000040e","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d","0xa1697f9af0875b63ddc472d6eebada8c1fab85680000000000000000000004f9","0xa3823e50f20982656557a4a6a9c06ba5467ae9080000000000000000000000e6","0xa718042e5622099e5f0ace4e7122058ab39e1bbe000200000000000000000475","0xa8b103a10a94f4f2d7ed2fdcd5545e807557330700000000000000000000048e","0xac5b4ef7ede2f2843a704e96dcaa637f4ba3dc3f00000000000000000000051d","0xac976bb42cb0c85635644e8c7c74d0e0286aa61c0000000000000000000003cb","0xae37d54ae477268b9997d4161b96b8200755935c000000000000000000000337","0xae8535c23afedda9304b03c68a3563b75fc8f92b0000000000000000000005a0","0xb0f75e97a114a4eb4a425edc48990e6760726709000000000000000000000198","0xb5e3de837f869b0248825e0175da73d4e8c3db6b000200000000000000000474","0xb841b062ea8ccf5c4cb78032e91de4ae875560420002000000000000000005b7","0xb9bd68a77ccf8314c0dfe51bc291c77590c4e9e6000200000000000000000385","0xbb6881874825e60e1160416d6c426eae65f2459e000000000000000000000592","0xbc0f2372008005471874e426e86ccfae7b4de79d000000000000000000000485","0xbf2ef8bdc2fc0f3203b3a01778e3ec5009aeef3300000000000000000000058d","0xbfa413a2ff0f20456d57b643746133f54bfe0cd20000000000000000000004c3","0xc2b021133d1b0cf07dba696fd5dd89338428225b000000000000000000000598","0xc443c15033fcb6cf72cc24f1bda0db070ddd9786000000000000000000000593","0xc50d4347209f285247bda8a09fc1c12ce42031c3000000000000000000000590","0xc5dc1316ab670a2eed5716d7f19ced321191f38200000000000000000000056e","0xc8c79fcd0e859e7ec81118e91ce8e4379a481ee6000000000000000000000196","0xcaa052584b462198a5a9356c28bce0634d65f65c0000000000000000000004db","0xcbfa4532d8b2ade2c261d3dd5ef2a2284f7926920000000000000000000004fa","0xcfae6e251369467f465f13836ac8135bd42f8a56000000000000000000000591","0xd4e7c1f3da1144c9e2cfd1b015eda7652b4a439900000000000000000000046a","0xd6e355036f41dc261b3f1ed3bbc6003e87aadb4f000000000000000000000495","0xd7edb56f63b2a0191742aea32df1f98ca81ed9c600000000000000000000058e","0xd997f35c9b1281b82c8928039d14cddab5e13c2000000000000000000000019c","0xdba274b4d04097b90a72b62467d828cefd708037000000000000000000000486","0xdc063deafce952160ec112fa382ac206305657e60000000000000000000004c4","0xdec02e6642e2c999af429f5ce944653cad15e093000000000000000000000469","0xe03af00fabe8401560c1ff7d242d622a5b601573000000000000000000000493","0xe0fcbf4d98f0ad982db260f86cf28b49845403c5000000000000000000000504","0xe2d16b0a39f3fbb4389a0e8f1efcbecfb3d1e6e10000000000000000000005a7","0xe4dc3c1998ac693d68f4c77476d7c815694c3e94000200000000000000000416","0xe6bcc79f328eec93d4ec8f7ed35534d9ab549faa0000000000000000000000e8","0xe8c56405bc405840154d9b572927f4197d110de10000000000000000000005a4","0xeb486af868aeb3b6e53066abc9623b1041b42bc000000000000000000000046c","0xeb567dde03f3da7fe185bdacd5ab495ab220769d000000000000000000000548","0xec3626fee40ef95e7c0cbb1d495c8b67b34d398300000000000000000000053d","0xf22ff21e17157340575158ad7394e068048dd98b0000000000000000000004b8","0xf57c794f42da72b38c8f610ff3b5e8502e48cbde00000000000000000000055c","0xf71d0774b214c4cf51e33eb3d30ef98132e4dbaa00000000000000000000046e","0xfa24a90a3f2bbe5feea92b95cd0d14ce709649f900000000000000000000058f","0xfd11ccdbdb7ab91cb9427a6d6bf570c95876d1950000000000000000000004c2","0xfebb0bbf162e64fb9d0dfe186e517d84c395f016000000000000000000000502","0xfef969638c52899f91781f1be594af6f40b99bad00000000000000000000047b","0x02e139d53ebf4033bf78ab66c6a1e7f1f204487f0002000000000000000009f9","0x03090a9811181a2afe830a3a0b467698ccf3a8b1000000000000000000000bf5","0x0320c1c5b6df19a194d48882aaec1c72940081d9000000000000000000000a7d","0x04b54ea92d73de2d62d651db7d9778f0c49157d8000200000000000000000ba2","0x0503dd6b2d3dd463c9bef67fb5156870af63393e00000000000000000000042e","0x0889b240a5876aae745ac19f1771853671dc5d36000000000000000000000b3f","0x0bc54e914f53f98d16035f4f0d948f3e09c2fac0000200000000000000000bac","0x0c06e87c7b88d998f645b91c1f53b51294b12bca000100000000000000000bb9","0x10b040038f87219d9b42e025e3bd9b8095c87dd9000000000000000000000b11","0x117a3d474976274b37b7b94af5dcade5c90c6e85000000000000000000000aca","0x11884da90fb4221b3aa288a7741c51ec4fc43b2f000000000000000000000a5f","0x1379b816b9be611431d693290289c204720ca56d000100000000000000000b6f","0x150e7b885bdfce974f2abe88a72fdbd692175c6f0002000000000000000009fd","0x178e029173417b1f9c8bc16dcec6f697bc323746000000000000000000000758","0x1aafc31091d93c3ff003cff5d2d8f7ba2e7284250000000000000000000003b3","0x216690738aac4aa0c4770253ca26a28f0115c595000000000000000000000b2c","0x216d6db0c28204014618482c369d7fbf0a8f3232000100000000000000000b60","0x230ecdb2a7cee56d6889965a023aa0473d6da507000000000000000000000bf3","0x252ff6a3a6fd7b5e8e999de8e3f5c3b306ed1401000200000000000000000bec","0x25e57f4612912614e6c99616bd2abb9b5ae71e99000000000000000000000bf0","0x2645b13fd2c5295296e94a76280b968bdcbbdfed000000000000000000000c11","0x284eb68520c8fa83361c1a3a5910aec7f873c18b000000000000000000000ac9","0x2c8dbe8eb86135d9f2f26d196748c088d47f73e7000200000000000000000a29","0x31bccf9e28b94e5dacebaa67fe8bc1603cecd904000000000000000000000a01","0x341068a547c3cde3c09e338714010dd01b32f93f000200000000000000000a34","0x3db543faf7a92052de7860c5c9debabee59ed5bd000000000000000000000a62","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd00000000000000000000070d","0x3efb91c4f9b103ee45885695c67794591916f34e000200000000000000000b43","0x402cfdb7781fa85d52f425352661128250b79e12000000000000000000000be3","0x43894de14462b421372bcfe445fa51b1b4a0ff3d000000000000000000000b36","0x4739e50b59b552d490d3fdc60d200977a38510c0000000000000000000000b10","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0x4a0b73f0d13ff6d43e304a174697e3d5cfd310a400020000000000000000091c","0x4a77ef015ddcd972fd9ba2c7d5d658689d090f1a000000000000000000000b38","0x4ae3661afa119892f0cc8c43edaf6a94989ac171000000000000000000000c06","0x4ccb966d8246240afb7a1a24628efb930870b1c40002000000000000000009fc","0x52cc8389c6b93d740325729cc7c958066cee4262000000000000000000000b0f","0x5b77107fcdf2b41903bab2bc555d4fc14cf7667d000000000000000000000b32","0x5bae72b75caab1f260d21bc028c630140607d6e8000000000000000000000ac6","0x600bd01b6526611079e12e1ff93aba7a3e34226f0000000000000000000009e4","0x63ce19ccd39930725b8a3d2733627804718ab83d000000000000000000000bf2","0x64efad69f099813021b41f4cac6e749fd55e188f000000000000000000000b39","0x6933ec1ca55c06a894107860c92acdfd2dd8512f000000000000000000000428","0x6abe4e7a497b8293c258389c1b00d177e4f257ed00010000000000000000080d","0x6c8c7fc50247a47038015eb1fd5dc105d05dafba000200000000000000000ba0","0x7079a25dec33be61bbd81b2fb69b468e80d3e72c0000000000000000000009ff","0x71bd10c2a590b5858f5576550c163976a48af906000000000000000000000b27","0x7c82a23b4c48d796dee36a9ca215b641c6a8709d000000000000000000000acd","0x7f4f4942f2a14b6ab7b08b10ada1aacede4ee8d4000200000000000000000b44","0x86aef31951e0a3a54333bd9e72f9a95587d058c5000200000000000000000912","0x882c7a84231484b3e9f3fd45ac04b1eb5d35b076000200000000000000000a91","0x894c82800526e0391e709c0983a5aea3718b7f6d000000000000000000000ac5","0x89b28a9494589b09dbccb69911c189f74fdadc5a000000000000000000000b33","0x89bb15076c9f2d86aa98ec6cffc1a71e31c38953000000000000000000000bf1","0x89f1146fee52b5d9166e9c83cc388b6d8f69f1380001000000000000000009e7","0x8a819a4cabd6efcb4e5504fe8679a1abd831dd8f00000000000000000000042d","0x8b58a1e7fff52001c22386c2918d45938a6a9be30001000000000000000008d9","0x8b8225bfedebaf1708c55743acb4ad43fd4d0f21000200000000000000000918","0x8fbd0f8e490735cfc3abf4f29cbddd5c3289b9a7000000000000000000000b5b","0x8fd39252d683fdb60bddd4df4b53c9380b496d59000200000000000000000b45","0x9321e2250767d79bab5aa06daa8606a2b3b7b4c5000000000000000000000bf4","0x949a12b95ec5b80c375b98963a5d6b33b0d0efff0002000000000000000009fe","0x9a020bdc2faff5bd24c6acc2020d01ff9f2c627a000000000000000000000ae2","0x9cf9358300e34bf9373d30129a1e718d8d058b54000200000000000000000913","0x9e34631547adcf2f8cefa0f5f223955c7b137571000000000000000000000ad5","0xa5a935833f6a5312715f182733eab088452335d7000100000000000000000bee","0xa5fe91dde37d8bf2dacacc0168b115d28ed03f84000000000000000000000b35","0xa8bf1c584519be0184311c48adbdc4c15cb2e8c1000000000000000000000bf6","0xab269164a10fab22bc87c39946da06c870b172d6000000000000000000000bfc","0xac2cae8d2f78a4a8f92f20dbe74042cd0a8d5af3000000000000000000000be2","0xae646817e458c0be890b81e8d880206710e3c44e000000000000000000000acb","0xaef2c171dbe64b0c18977e16e70bfd29d4ee0256000000000000000000000ac8","0xb0c830dceb4ef55a60192472c20c8bf19df03488000000000000000000000be1","0xb266ac3b7c98d7bcb28731dac0ef42dba1b276be000000000000000000000be4","0xb371aa09f5a110ab69b39a84b5469d29f9b22b76000000000000000000000b37","0xb3d658d5b95bf04e2932370dd1ff976fe18dd66a000000000000000000000ace","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0xb59be8f3c85a9dd6e2899103b6fbf6ea405b99a4000000000000000000000b34","0xb878ecce26838fbba4f78cb5b791a0e09152c067000000000000000000000427","0xb973ca96a3f0d61045f53255e319aedb6ed4924000000000000000000000042f","0xbd4e35784c832d0f9049b54cb3609e5907c5b495000100000000000000000b14","0xc55ec796a4debe625d95436a3531f4950b11bdcf000000000000000000000b3e","0xc7e6389e364f4275eb442ef215ed21877028e2af000000000000000000000ac7","0xc83b55bbd005f1f84906545fcdb145dee53523e0000200000000000000000b30","0xcb21a9e647c95127ed784626485b3104cb28d0e7000000000000000000000425","0xd00f9ca46ce0e4a63067c4657986f0167b0de1e5000000000000000000000b42","0xd2f3b9e67c69762dd1c88f1d3dadd1649a190761000200000000000000000bf7","0xd4accb350f9cf59fe3cf7a5ee6ed9ace6a568ea9000200000000000000000b75","0xda1cd1711743e57dd57102e9e61b75f3587703da000000000000000000000acc","0xdae301690004946424e41051ace1791083be42a1000000000000000000000b40","0xde0a77ab6689b980c30306b10f9131a007e1af81000200000000000000000ba1","0xe051605a83deae38d26a7346b100ef1ac2ef8a0b0000000000000000000003ce","0xe1fb90d0d3b47e551d494d7ebe8f209753526b01000000000000000000000ac4","0xe2272cddb2cc408e79e02a73d1db9acc24a843d5000200000000000000000ba7","0xe2dc0e0f2c358d6e31836dee69a558ab8d1390e70000000000000000000009fa","0xe4885ed2818cc9e840a25f94f9b2a28169d1aea7000000000000000000000b29","0xe6909c2f18a29d97217a6146f045e1780606991f000100000000000000000bfe","0xe78b25c06db117fdf8f98583cdaaa6c92b79e917000000000000000000000b2b","0xea11645ac7d8f2def94c9d8d86bd766296c9b6b6000000000000000000000b3a","0xeb480dbbdd921cd6c359e4cc4c65ddea6395e2a1000200000000000000000946","0xed35f28f837e96f81240ebb82e0e3f518c7e8a2f000100000000000000000bb5","0xf0211cceebe6fcc45052b4e57ee95d233f5669d2000100000000000000000c01","0xf22a66046b5307842f21b311ecb4c462c24c0635000000000000000000000b15","0xf28f17be00f8ca3c9b7f66a4aad5513757fb3341000200000000000000000b5a","0xf42ed61450458ee4620f5ef4f29adb25a6ef0fb6000000000000000000000bf8","0xf48f01dcb2cbb3ee1f6aab0e742c2d3941039d56000000000000000000000445","0xf93579002dbe8046c43fefe86ec78b1112247bb8000000000000000000000759","0xf984eb2b8a7ef780245a797a2fccd82f346409ca000000000000000000000a59","0xfa2c0bd8327c99db5bde4c9e9e5cbf30946351bb000000000000000000000948","0xff4ce5aaab5a627bf82f4a571ab1ce94aa365ea600000000000000000000075a","0x1ac55c31dac78ca943cb8ebfca5945ce09e036e2000000000000000000000024","0x225e0047671939a8d78e08ebd692788abe63f15c000000000000000000000009","0x41211bba6d37f5a74b22e667533f080c7c7f3f1300000000000000000000000b","0x4de21b365d6543661d0e105e579a34b963862497000200000000000000000045","0x581ec1f5e7ced12b186deae32256adb53bdd5b08000000000000000000000001","0x66f33ae36dd80327744207a48122f874634b3ada000100000000000000000013","0xa3ed6f78edc29f69df8a0d16b1d1ccf9871f918c000000000000000000000032","0xa611a551b95b205ccd9490657acf7899daee5db700000000000000000000002e","0xb95829adbacd8af89e291dee78bc09e24de51d6b000000000000000000000043","0xb973ca96a3f0d61045f53255e319aedb6ed49240000200000000000000000011","0xba1a5b19d09a79dada039b1f974015c5a989d5fd000100000000000000000046","0xbb9cd48d33033f5effbedec9dd700c7d7e1dcf5000000000000000000000000e","0xd16f72b02da5f51231fde542a8b9e2777a478c8800000000000000000000000f","0xd4015683b8153666190e0b2bec352580ebc4caca00000000000000000000000d","0xe15cac1df3621e001f76210ab12a7f1a1691481f000000000000000000000044","0xe7f88d7d4ef2eb18fcf9dd7216ba7da1c46f3dd600000000000000000000000a","0xf48f01dcb2cbb3ee1f6aab0e742c2d3941039d56000200000000000000000012","0xfedb19ec000d38d92af4b21436870f115db22725000000000000000000000010","0xffff76a3280e95dc855696111c2562da09db2ac000000000000000000000000c","0x00fcd3d55085e998e291a0005cedecf58ac14c4000020000000000000000047f","0x077794c30afeccdf5ad2abc0588e8cee7197b71a000000000000000000000352","0x117a3d474976274b37b7b94af5dcade5c90c6e85000000000000000000000381","0x11884da90fb4221b3aa288a7741c51ec4fc43b2f000000000000000000000353","0x19b1c92631405a0a9495ccba0becf4f2e8e908bd000000000000000000000410","0x1e550b7764da9638fdd32c8a701364de31f45ee800000000000000000000047c","0x1fa7f727934226aedab636d62a084931b97d366b000000000000000000000411","0x23ca0306b21ea71552b148cf3c4db4fc85ae19290000000000000000000000c9","0x284eb68520c8fa83361c1a3a5910aec7f873c18b000000000000000000000380","0x2a96254ca32020b20ed3506f8f75318da24709f9000200000000000000000456","0x36942963e3b6f37ecc45a4e72349558514233f0000000000000000000000048a","0x3f53a862919ccfa023cb6ace91378a79fb0f6bf500000000000000000000040f","0x40af308e3d07ec769d85eb80afb116525ff4ac99000000000000000000000485","0x418de00ae109e6f874d872658767866d680eaa1900000000000000000000047d","0x45c4d1376943ab28802b995acffc04903eb5223f000000000000000000000470","0x4689122d360c4725d244c5cfea22861333d862e6000100000000000000000468","0x4739e50b59b552d490d3fdc60d200977a38510c0000000000000000000000409","0x49a0e3334496442a9706e481617724e7e37eaa080000000000000000000003ff","0x519cce718fcd11ac09194cff4517f12d263be067000000000000000000000382","0x52cc8389c6b93d740325729cc7c958066cee4262000000000000000000000408","0x567ecfcb22205d279bb8eed3e066989902bf03d5000000000000000000000452","0x585d95df0231fa08aeee35ff0c16b92fd0ecdc3300020000000000000000045f","0x5a7f39435fd9c381e4932fa2047c9a5136a5e3e7000000000000000000000400","0x5bae72b75caab1f260d21bc028c630140607d6e8000000000000000000000350","0x6cb787a419c3e6ee2e9ff365856c29cd10659113000000000000000000000474","0x7c82a23b4c48d796dee36a9ca215b641c6a8709d000000000000000000000406","0x81fc12c60ee5b753cf5fd0adc342dfb5f3817e3200000000000000000000035d","0x894c82800526e0391e709c0983a5aea3718b7f6d00000000000000000000034f","0x970712708a08e8fb152be4d81b2dc586923f5369000200000000000000000479","0x9bf7c3b63c77b4b4f2717776f15a4bec1b532a280000000000000000000000c8","0x9cebf13bb702f253abf1579294694a1edad00eaa000000000000000000000486","0x9e34631547adcf2f8cefa0f5f223955c7b137571000000000000000000000407","0x9fb7d6dcac7b6aa20108bad226c35b85a9e31b63000200000000000000000412","0xa1ea76c42b2938cfa9abea12357881006c52851300000000000000000000048f","0xa50f89e9f439fde2a6fe05883721a00475da3c4500000000000000000000048b","0xa612b6aed2e7ca1a3a4f23fbca9128461bbb7718000000000000000000000274","0xa8af146d79ac0bb981e4e0d8b788ec5711b1d5d000000000000000000000047b","0xad28940024117b442a9efb6d0f25c8b59e1c950b00000000000000000000046f","0xae646817e458c0be890b81e8d880206710e3c44e00000000000000000000039d","0xaef2c171dbe64b0c18977e16e70bfd29d4ee0256000000000000000000000351","0xbbf9d705b75f408cfcaee91da32966124d2c6f7d00000000000000000000047e","0xbd724eb087d4cc0f61a5fed1fffaf937937e14de000000000000000000000473","0xbe0f30217be1e981add883848d0773a86d2d2cd4000000000000000000000471","0xc46be4b8bb6b5a3d3120660efae9c5416318ed40000000000000000000000472","0xc69771058481551261709d8db44977e9afde645000010000000000000000042a","0xc6eee8cb7643ec2f05f46d569e9ec8ef8b41b389000000000000000000000475","0xcba9ff45cfb9ce238afde32b0148eb82cbe635620000000000000000000003fd","0xcf8b555b7754556cf2ac2165e77ee23ed8517d7900020000000000000000045e","0xd0dc20e6342db2de82692b8dc842301ff9121805000200000000000000000454","0xd3d5d45f4edf82ba0dfaf061d230766032a10e07000200000000000000000413","0xd6d20527c7b0669989ee082b9d3a1c63af742290000000000000000000000483","0xda1cd1711743e57dd57102e9e61b75f3587703da0000000000000000000003fc","0xe1fb90d0d3b47e551d494d7ebe8f209753526b0100000000000000000000034e","0xee02583596aee94cccb7e8ccd3921d955f17982a00000000000000000000040a","0xf984eb2b8a7ef780245a797a2fccd82f346409ca00000000000000000000034d","0xff8f84e8c87532af96aef5582ee451572233678b000200000000000000000478","0x054e7b0c73e1ee5aed6864fa511658fc2b54bcaa000000000000000000000015","0x3f1a2c4a3a751f6626bd90ef16e104f0772d4d6b00020000000000000000001b","0x7275c131b1f67e8b53b4691f92b0e35a4c1c6e22000000000000000000000010","0xa154009870e9b6431305f19b09f9cfd7284d4e7a000000000000000000000013","0xa1d14d922a575232066520eda11e27760946c991000000000000000000000012","0xa826a114b0c7db4d1ff4a4be845a78998c64564c000000000000000000000008","0xea67626e1f0b59e0d172a04f5702ef90bcdf440c00000000000000000000000f","0xeb496161099d45b3ea4892408ef745c6182eb56e00000000000000000000000e","0xece571847897fd61e764d455dc15cf1cd9de8d6f000000000000000000000014","0xed3e2f496cbcd8e212192fb8d1499842f04a0d19000000000000000000000009","0x02c9dcb975262719a61f9b40bdf0987ead9add3a000000000000000000000006","0x16c9a4d841e88e52b51936106010f27085a529ec00000000000000000000000c","0x32be2d0ddeaf3333501b24a28668ce373ba8e763000200000000000000000014","0x32f03464fdf909fdf3798f87ff3712b10c59bd86000000000000000000000005","0x4b718e0e2fea1da68b763cd50c446fba03ceb2ea00000000000000000000000b","0x68a69c596b3839023c0e08d09682314f582314e5000200000000000000000011","0x6f34a44fce1506352a171232163e7716dd073ade000200000000000000000015","0x9e2d87f904862671eb49cb358e74284762cc9f42000200000000000000000013","0xac4b72c01072a52b73ca71105504f1372efcce0d000000000000000000000003","0xbfd65c6160cfd638a85c645e6e6d8acac5dac935000000000000000000000004","0xe274c9deb6ed34cfe4130f8d0a8a948dea5bb28600000000000000000000000d"];class Fs{constructor(e){this.chainId=e,this.balancerApiUrl="https://api-v3.balancer.fi/",this.tokenPriceQuery=X`
    query queryTokenPrices($chainKey: GqlChain!) {
      tokenGetCurrentPrices(chains: [$chainKey]) {
        address
        price
      }
    }
  `,this.chainKey=Pe[e]}async getNativeAssetPriceInToken(e){const{tokenGetCurrentPrices:t}=await Y(this.balancerApiUrl,this.tokenPriceQuery,{chainKey:this.chainKey}),a=t.find((({address:t})=>t.toLowerCase()===e.toLowerCase()));if(!a)throw new Error("Token Price not found in the API");const n=t.find((({address:e})=>e.toLowerCase()===Bs[this.chainKey]));if(!n)throw new Error("Native Token Price not found in the API");const o=a.price/n.price;return String(o)}}var Bs;function Rs(e=!0){return e?"https://api.coingecko.com/api/v3/":"https://pro-api.coingecko.com/api/v3/"}function Ns(e=!0){return e?"x-cg-demo-api-key":"x-cg-pro-api-key"}!function(e){e.MAINNET="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.POLYGON="0x0000000000000000000000000000000000001010",e.ARBITRUM="0x912ce59144191c1204e64559fe8253a0e49e6548",e.AVALANCHE="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.BASE="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.FANTOM="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.GNOSIS="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.OPTIMISM="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.ZKEVM="0xa2036f0538221a77a3937f1379699f44945018d0"}(Bs||(Bs={}));class Ls{constructor(e,t){this.chainId=e,this.urlBase=`${Rs(null==t?void 0:t.isDemoApiKey)}simple/token_price/${this.platformId}?vs_currencies=${this.nativeAssetId}`,this.coingeckoApiKeyHeaderName=Ns(null==t?void 0:t.isDemoApiKey),this.apiKey=t.coingeckoApiKey}async getNativeAssetPriceInToken(e){const t=await this.getTokenPriceInNativeAsset(e);return""+1/parseFloat(t)}async getTokenPriceInNativeAsset(e){var t;const a=`${this.urlBase}&contract_addresses=${e}`,{data:n}=await z.get(a,{headers:{Accept:"application/json","Content-Type":"application/json",[this.coingeckoApiKeyHeaderName]:null!==(t=this.apiKey)&&void 0!==t?t:""}});if(void 0===n[e.toLowerCase()]||void 0===n[e.toLowerCase()][this.nativeAssetId])throw Error("No price returned from Coingecko");return n[e.toLowerCase()][this.nativeAssetId]}get platformId(){return xn[this.chainId].thirdParty.coingecko.platformId||"2"}get nativeAssetId(){return xn[this.chainId].thirdParty.coingecko.nativeAssetId||""}}class Ds extends q{constructor(e){const t=Ms(e),a=Ds.getSorConfig(e),n=Ds.getSorNetworkConfig(t),o=new K(e.rpcUrl,e.network),i=Is(t.urls.subgraph);super(o,n,Ds.getPoolDataService(t,a,o,i),Ds.getTokenPriceService(t,a,i,e.coingecko))}static getSorConfig(e){return{tokenPriceService:"api",poolDataService:"subgraph",fetchOnChainBalances:!0,...e.sor}}static getSorNetworkConfig(e){var t;return{...e,vault:e.addresses.contracts.vault,weth:e.addresses.tokens.wrappedNativeAsset,lbpRaisingTokens:null===(t=e.addresses.tokens)||void 0===t?void 0:t.lbpRaisingTokens,wETHwstETH:e.pools.wETHwstETH,connectingTokens:e.sorConnectingTokens,triPathMidPoolIds:e.sorTriPathMidPoolIds}}static getPoolDataService(e,t,a,n){var o;const i=[...null!==(o=e.poolsToIgnore)&&void 0!==o?o:[],...Cs];return"object"==typeof t.poolDataService?t.poolDataService:new ks(n,a,{...e,poolsToIgnore:i},t)}static getTokenPriceService(e,t,a,n){return"coingecko"===t.tokenPriceService&&n?new Ls(e.chainId,n):"object"==typeof t.tokenPriceService?t.tokenPriceService:"subgraph"===t.tokenPriceService?new Os(a,e.addresses.tokens.wrappedNativeAsset):new Fs(e.chainId)}}function Us(e){if(e.poolIds.length>2)throw new Error("Simple flash swap only supports a maximum of two pools");if(e.assets.length>2)throw new Error("Simple flash swap only supports a maximum of to two assets (tokens)")}function Vs(e,t){return[{poolId:e[0],assetInIndex:0,assetOutIndex:1,amount:t,userData:"0x"},{poolId:e[1],assetInIndex:1,assetOutIndex:0,amount:"0",userData:"0x"}]}function qs(e){return-1*Number(e)}function Gs(e){return x(e)}const Ws={"0xae7ab96520de3a18e5e111b5eaab095312d7fe84":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0","0xd46ba6d942050d489dbd938a2c909a5d5039a161":"0xedb171c18ce90b633db442f2a6f72874093b49ef","0x1e6bb68acec8fefbd87d192be09bb274170a0548":"0xF03387d8d0FF326ab586A58E0ab4121d106147DF"};function $s(e){let t=e;return Ws.hasOwnProperty(e)&&(t=Ws[e]),t}var Hs;function Ks(e,t,a){const{tokens:n,contracts:o}=En(a);let i={id:Hs.vault,address:o.vault};return n.stETH&&o.lidoRelayer&&[e,t].includes(n.stETH)&&(i={id:Hs.lido,address:o.lidoRelayer}),i}function Js(e){return e.id===Hs.lido?ma.abi.filter((e=>"function"===e.type&&e.name&&["swap","batchSwap"].includes(e.name))):nn.abi.filter((e=>"function"===e.type&&e.name&&["swap","batchSwap"].includes(e.name)))}function Xs(e){return{amount:e,max:t=>e.mul(1e4+t).div(1e4),min:t=>e.mul(1e4-t).div(1e4)}}function Ys(e,t){const a=t===In.SwapExactIn?e.swapAmount:e.returnAmount,n=t===In.SwapExactIn?e.returnAmount:e.swapAmount,o=t===In.SwapExactIn?e.swapAmountForSwaps||e.swapAmount:e.returnAmountFromSwaps||e.returnAmount,i=t===In.SwapExactIn?e.returnAmountFromSwaps||e.returnAmount:e.swapAmountForSwaps||e.swapAmount,s=$s(e.tokenIn),r=$s(e.tokenOut);return{...e,amountIn:a,amountOut:n,amountInForLimits:Xs(o),amountOutForLimits:Xs(i),tokenInForSwaps:s,tokenOutFromSwaps:r}}!function(e){e[e.vault=1]="vault",e[e.lido=2]="lido"}(Hs||(Hs={}));class js{constructor(e,t,a){this.kind=t,this.chainId=a,this.functionName="swap",this.swapInfo=Ys(e,t),this.relayer=Ks(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e}get amount(){return this.kind===In.SwapExactOut?this.swapInfo.amountOutForLimits.amount:this.swapInfo.amountInForLimits.amount}setLimits(e){this.limit=this.kind===In.SwapExactIn?this.swapInfo.amountOutForLimits.min(e).toString():this.swapInfo.amountInForLimits.max(e).toString()}get singleSwap(){return{poolId:this.swapInfo.swaps[0].poolId,kind:this.kind,assetIn:this.swapInfo.tokenInForSwaps,assetOut:this.swapInfo.tokenOutFromSwaps,amount:this.amount.toString(),userData:"0x"}}attributes(){var e;if(!this.funds||!this.limit||!this.deadline)throw new Error("Uninitialized arguments");let t={request:this.singleSwap,funds:this.funds,limit:this.limit,deadline:this.deadline};const a=this.fragment();return a[0].inputs&&(null===(e=a[0].inputs)||void 0===e?void 0:e.length)>4&&(t={...t,value:"0",outputReference:"0"}),t}data(){return new t(this.fragment()).encodeFunctionData("swap",Object.values(this.attributes()))}value(e){let t=p.from(0);return this.swapInfo.tokenIn===o&&(t=this.kind===In.SwapExactIn?this.swapInfo.amountIn:this.swapInfo.amountInForLimits.max(e)),t}to(){return this.relayer.address}fragment(){return Js(this.relayer).filter((e=>e.name===this.functionName))}}class zs{constructor(e,t,a){this.kind=t,this.chainId=a,this.functionName="batchSwap",this.swapInfo=Ys(e,t),this.relayer=Ks(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e}minAmountOut(e){return this.kind===In.SwapExactIn?this.swapInfo.amountOutForLimits.min(e):this.swapInfo.amountOutForLimits.amount}maxAmountIn(e){return this.kind===In.SwapExactOut?this.swapInfo.amountInForLimits.max(e):this.swapInfo.amountInForLimits.amount}setLimits(e){this.limits=this.swapInfo.tokenAddresses.map((t=>{let a=p.from(0);return t===this.swapInfo.tokenInForSwaps&&(a=this.maxAmountIn(e)),t===this.swapInfo.tokenOutFromSwaps&&(a=this.minAmountOut(e).mul(-1)),a})).map((e=>e.toString().split(".")[0]))}attributes(){var e;if(!this.funds||!this.limits||!this.deadline)throw new Error("Uninitialized arguments");let t={kind:this.kind,swaps:this.swapInfo.swaps,assets:this.swapInfo.tokenAddresses,funds:this.funds,limits:this.limits,deadline:this.deadline};const a=this.fragment();return a[0].inputs&&(null===(e=a[0].inputs)||void 0===e?void 0:e.length)>6&&(t={...t,value:"0",outputReferences:[]}),t}data(){return new t(this.fragment()).encodeFunctionData("batchSwap",Object.values(this.attributes()))}value(e){let t=p.from(0);return this.swapInfo.tokenIn===o&&(t=this.maxAmountIn(e)),t}to(){return this.relayer.address}fragment(){return Js(this.relayer).filter((e=>e.name===this.functionName))}}const Zs={maxPools:4,gasPrice:"1",deadline:"999999999999999999",maxSlippage:10};class Qs{constructor(e){e instanceof q?(this.sor=e,this.chainId=this.sor.provider._network.chainId):(this.sor=new Ds(e),"number"==typeof e.network?this.chainId=e.network:this.chainId=e.network.chainId),this.vaultContract=nn.connect(wn,this.sor.provider)}static getLimitsForSlippage(e,t,a,n,o,i){return gn(e,t,a,n,o,i).map((e=>e.toString()))}async findRouteGivenIn({tokenIn:e,tokenOut:t,amount:a,gasPrice:n,maxPools:o=4}){return this.sor.getSwaps(e,t,V.SwapExactIn,a,{gasPrice:n,maxPools:o})}async findRouteGivenOut({tokenIn:e,tokenOut:t,amount:a,gasPrice:n,maxPools:o=4}){return this.sor.getSwaps(e,t,V.SwapExactOut,a,{gasPrice:n,maxPools:o})}buildSwap({userAddress:e,recipient:t,swapInfo:a,kind:n,deadline:o,maxSlippage:i}){if(!this.chainId)throw"Missing network configuration";const s=a.swaps.length>1?new zs(a,n,this.chainId):new js(a,n,this.chainId);s.setFunds(e,t),s.setDeadline(o),s.setLimits(i);const r=s.to(),{functionName:p}=s;return{to:r,functionName:p,attributes:s.attributes(),data:s.data(),value:s.value(i)}}async buildRouteExactIn(e,t,a,n,o,i=Zs){const s={...Zs,...i},r=await this.findRouteGivenIn({tokenIn:a,tokenOut:n,amount:p.from(o),gasPrice:p.from(s.gasPrice),maxPools:s.maxPools});return this.buildSwap({userAddress:e,recipient:t,swapInfo:r,kind:In.SwapExactIn,deadline:s.deadline,maxSlippage:s.maxSlippage})}static encodeBatchSwap(e){return nn.createInterface().encodeFunctionData("batchSwap",[e.kind,e.swaps,e.assets,e.funds,e.limits,e.deadline])}static encodeSimpleFlashSwap(e){return this.encodeBatchSwap(function({poolIds:e,assets:t,flashLoanAmount:a,walletAddress:n}){Us({poolIds:e,assets:t});const o=Vs(e,a),i={sender:n,fromInternalBalance:!1,recipient:n,toInternalBalance:!1};return{kind:In.SwapExactIn,swaps:o,assets:t,funds:i,limits:["0","0"],deadline:"999999999999999999"}}(e))}async fetchPools(e){return this.sor.fetchPools(e)}getPools(){return this.sor.getPools()}async queryBatchSwap(e){return await Oo(this.vaultContract,e.kind,e.swaps,e.assets)}async querySimpleFlashSwap(e){return await async function(e){Us(e);const[t,a]=e.assets;try{const n=await Oo(e.vaultContract,In.SwapExactIn,Vs(e.poolIds,e.flashLoanAmount),e.assets),o={[t]:qs(n[0]).toString(),[a]:qs(n[1]).toString()};return{profits:o,isProfitable:Gs([o[t],o[a]])>0}}catch(e){throw`Failed to querySimpleFlashSwap: ${e}`}}({...e,vaultContract:this.vaultContract})}async getSorSwap(e){return await async function(e,t,a,n,o){const i=a===In.SwapExactIn?V.SwapExactIn:V.SwapExactOut;return await o.getSwaps(e.toLowerCase(),t.toLowerCase(),i,n)}(e.tokenIn,e.tokenOut,e.swapType,e.amount,this.sor)}async queryExactIn(e){const t=await this.query(e,In.SwapExactIn);return this.assetDeltas(t.map(String),e.tokenAddresses)}async queryExactOut(e){const t=await this.query(e,In.SwapExactOut);return this.assetDeltas(t.map(String),e.tokenAddresses)}query(e,t){const{swaps:a,tokenAddresses:n}=e,i={sender:o,recipient:o,fromInternalBalance:!1,toInternalBalance:!1};return this.vaultContract.callStatic.queryBatchSwap(t,a,n,i)}assetDeltas(e,t){return Object.fromEntries(e.map(((e,a)=>[t[a],e])))}}var er;!function(e){e[e.WEIGHTED=0]="WEIGHTED",e[e.LEGACY_STABLE=1]="LEGACY_STABLE",e[e.COMPOSABLE_STABLE=2]="COMPOSABLE_STABLE",e[e.COMPOSABLE_STABLE_V2=3]="COMPOSABLE_STABLE_V2"}(er||(er={}));const tr=ma.createInterface();class ar{static encodeApproveVault(e,t){return tr.encodeFunctionData("approveVault",[e,t])}static encodeSetRelayerApproval(e,t,a){return tr.encodeFunctionData("setRelayerApproval",[e,t,a])}static encodeGaugeWithdraw(e,t,a,n){return tr.encodeFunctionData("gaugeWithdraw",[e,t,a,n])}static encodeGaugeDeposit(e,t,a,n){return tr.encodeFunctionData("gaugeDeposit",[e,t,a,n])}static encodeSwap(e){return tr.encodeFunctionData("swap",[e.request,e.funds,e.limit,e.deadline,e.value,e.outputReference])}static encodeBatchSwap(e){return tr.encodeFunctionData("batchSwap",[e.swapType,e.swaps,e.assets,e.funds,e.limits,e.deadline,e.value,e.outputReferences])}static encodeExitPool(e){return tr.encodeFunctionData("exitPool",[e.poolId,e.poolKind,e.sender,e.recipient,e.exitPoolRequest,e.outputReferences])}static encodeJoinPool(e){return tr.encodeFunctionData("joinPool",[e.poolId,e.kind,e.sender,e.recipient,e.joinPoolRequest,e.value,e.outputReference])}static encodeWrapAaveDynamicToken(e){return tr.encodeFunctionData("wrapAaveDynamicToken",[e.staticToken,e.sender,e.recipient,e.amount,e.fromUnderlying,e.outputReference])}static encodeUnwrapAaveStaticToken(e){return tr.encodeFunctionData("unwrapAaveStaticToken",[e.staticToken,e.sender,e.recipient,e.amount,e.toUnderlying,e.outputReference])}static encodeUnwrapWstETH(e){return tr.encodeFunctionData("unwrapWstETH",[e.sender,e.recipient,e.amount,e.outputReference])}static encodeUnwrap(e,t){let a;switch(t){case"AaveLinear":return this.encodeUnwrapAaveStaticToken({staticToken:e.wrappedToken,sender:e.sender,recipient:e.recipient,amount:e.amount,toUnderlying:!0,outputReference:e.outputReference});case"BeefyLinear":case"ERC4626Linear":a="unwrapERC4626";break;case"EulerLinear":a="unwrapEuler";break;case"GearboxLinear":a="unwrapGearbox";break;case"ReaperLinear":a="unwrapReaperVaultToken";break;case"TetuLinear":a="unwrapTetu";break;case"YearnLinear":a="unwrapYearn";break;case"MidasLinear":a="unwrapCompoundV2";break;case"SiloLinear":a="unwrapShareToken";break;default:throw new Error("Unwrapping not supported for this pool type: "+t)}return tr.encodeFunctionData(a,[e.wrappedToken,e.sender,e.recipient,e.amount,e.outputReference])}static encodePeekChainedReferenceValue(e){return tr.encodeFunctionData("peekChainedReferenceValue",[e])}static toChainedReference(e,t=!0){const a=t?ar.CHAINED_REFERENCE_TEMP_PREFIX:ar.CHAINED_REFERENCE_READONLY_PREFIX,n=`0x${a}${"0".repeat(64-a.length)}`;return p.from(n).add(e)}static fromChainedReference(e,t=!0){const a=t?ar.CHAINED_REFERENCE_TEMP_PREFIX:ar.CHAINED_REFERENCE_READONLY_PREFIX,n=`0x${a}${"0".repeat(64-a.length)}`;return p.from(e).sub(p.from(n))}static isChainedReference(e){const t=p.from(e),a=p.from("0xfff0000000000000000000000000000000000000000000000000000000000000"),n=t.toBigInt()&a.toBigInt();return"0xba10000000000000000000000000000000000000000000000000000000000000"===p.from(n)._hex.toString()}static formatExitPoolInput(e){const{assets:t,minAmountsOut:a,userData:n,toInternalBalance:o,poolId:i,poolKind:s,sender:r,recipient:p,outputReferences:d}=e;return{poolId:i,poolKind:s,sender:r,recipient:p,outputReferences:d,exitPoolRequest:{assets:t,minAmountsOut:a,userData:n,toInternalBalance:o}}}static formatJoinPoolInput(e){const{assets:t,maxAmountsIn:a,userData:n,fromInternalBalance:o,poolId:i,kind:s,sender:r,recipient:p,value:d,outputReference:l}=e;return{poolId:i,kind:s,sender:r,recipient:p,value:d,outputReference:l,joinPoolRequest:{assets:t,maxAmountsIn:a,userData:n,fromInternalBalance:o}}}}ar.CHAINED_REFERENCE_TEMP_PREFIX="ba10",ar.CHAINED_REFERENCE_READONLY_PREFIX="ba11",ar.signRelayerApproval=async(e,t,a,n)=>{const o=n.interface.encodeFunctionData("setRelayerApproval",[t,e,!0]),s=await Ge.signSetRelayerApprovalAuthorization(n,a,e,o);return Ge.encodeCalldataAuthorization("0x",i,s)};class nr{constructor(e){this.url=Ms(e).urls.subgraph,this.client=this.initClient()}initClient(){return Hi(new J(this.url))}}class or{constructor(e,t){this.swaps=t||new Qs(e)}async fetchPools(){return this.swaps.fetchPools()}getPools(){return this.swaps.getPools()}async getSpotPrice(e,t,a=[]){0===a.length&&(await this.fetchPools(),a=this.getPools());const n=G(a,0),o=this.swaps.sor.routeProposer.getCandidatePathsFromDict(e,t,0,n,4);if(0===o.length)throw new vn(An.UNSUPPORTED_PAIR);return W(o[0],0,F).toString()}}const ir=["function getPoolId() view returns (bytes32)","function getSwapFeePercentage() view returns (uint256)","function getProtocolFeesCollector() view returns (address)","function inRecoveryMode() view returns (bool)"];class sr{constructor(e,a,n={}){this.multicall=e,this.options=n,this.calls=[],this.paths=[],this.interface=new t(a)}call(e,t,a,n){return this.calls.push([t,a,n]),this.paths.push(e),this}async execute(e={}){const t=e;return(await this.executeMulticall()).forEach(((e,a)=>g(t,this.paths[a],e.length>1?e:e[0]))),this.calls=[],this.paths=[],t}async executeMulticall(){const[,e]=await this.multicall.callStatic.aggregate(this.calls.map((([e,t,a])=>({target:e,callData:this.interface.encodeFunctionData(t,a)}))),this.options);return e.map(((e,t)=>this.interface.decodeFunctionResult(this.calls[t][1],e)))}}function rr(e){return Math.round(Date.now()/1e3)-e<86400}class pr{constructor(e,t){this.veBalAddress=e,this.multicall=t}async getLockInfo(e){if(!this.veBalAddress)throw new Error("veBal address must be defined");const t=new sr(this.multicall,[...fn.abi]);t.call("locked",this.veBalAddress,"locked",[e]),t.call("epoch",this.veBalAddress,"epoch"),t.call("totalSupply",this.veBalAddress,"totalSupply()");const a=await t.execute();return this.formatLockInfo(a)}formatLockInfo(e){const[t,a]=e.locked,n=t.gt(0),o=1e3*a.toNumber();const i=n&&Date.now()>o;return{lockedEndDate:o,lockedAmount:It(t),totalSupply:It(e.totalSupply),epoch:It(e.epoch,0),hasExistingLock:n,isExpired:i}}}class dr{constructor(e,t){if(!e.veBalProxy)throw new Error("veBalProxy address must be defined");this.instance=hn.connect(e.veBalProxy,t)}async getAdjustedBalance(e){return It(await this.instance.adjustedBalanceOf(e))}}class lr{constructor(e,t){this.getLiquidityGauge=Ja.connect,this.contractAddresses="number"==typeof e?xn[e].addresses.contracts:e;const a=nn.connect(this.contractAddresses.vault,t),n=ra.connect(this.contractAddresses.balancerHelpers,t);let o;this.contractAddresses.lidoRelayer&&(o=Wa.connect(this.contractAddresses.lidoRelayer,t));const i=Ya.connect(this.contractAddresses.multicall,t),s=ya.connect(this.contractAddresses.balancerRelayer,t);let r,p,d,l,u,c,y,b,m,f,T;this.contractAddresses.veBal&&(r=new pr(this.contractAddresses.veBal,i)),this.contractAddresses.veBalProxy&&(p=new dr(this.contractAddresses,t)),this.contractAddresses.gaugeClaimHelper&&(d=Ra.connect(this.contractAddresses.gaugeClaimHelper,t)),this.contractAddresses.composableStablePoolFactory&&(l=Ia.connect(this.contractAddresses.composableStablePoolFactory,t)),this.contractAddresses.weightedPoolFactory&&(u=pn.connect(this.contractAddresses.weightedPoolFactory,t)),this.contractAddresses.aaveLinearPoolFactory&&(c=ta.connect(this.contractAddresses.aaveLinearPoolFactory,t)),this.contractAddresses.erc4626LinearPoolFactory&&(y=va.connect(this.contractAddresses.erc4626LinearPoolFactory,t)),this.contractAddresses.eulerLinearPoolFactory&&(b=Ma.connect(this.contractAddresses.eulerLinearPoolFactory,t)),this.contractAddresses.gearboxLinearPoolFactory&&(m=Ua.connect(this.contractAddresses.gearboxLinearPoolFactory,t)),this.contractAddresses.yearnLinearPoolFactory&&(f=cn.connect(this.contractAddresses.yearnLinearPoolFactory,t)),this.contractAddresses.gyroConfigProxy&&(T=qa.connect(this.contractAddresses.gyroConfigProxy,t)),this.instances={aaveLinearPoolFactory:c,balancerHelpers:n,BasePool:this.getBasePool,composableStablePoolFactory:l,ERC20:this.getErc20,erc4626LinearPoolFactory:y,eulerLinearPoolFactory:b,gaugeClaimHelper:d,gearboxLinearPoolFactory:m,gyroConfig:T,liquidityGauge:this.getLiquidityGauge,lidoRelayer:o,multicall:i,relayer:s,veBal:r,veBalProxy:p,weightedPoolFactory:u,yearnLinearPoolFactory:f,vault:a}}get contracts(){return this.instances}getErc20(e,t){return wa.connect(e,t)}getBasePool(e,t){return((e,t)=>new Z(e,ir,t))(e,t)}}class ur{constructor(e,t){this.tokenPrices=e,this.tokenHistoricalPrices=t}async calcImpLoss(e,t){if(1e3*e>=Date.now())throw console.error(`[ImpermanentLossService][calcImpLoss]Error: ${vn.getMessage(An.TIMESTAMP_IN_THE_FUTURE)}`),new vn(An.TIMESTAMP_IN_THE_FUTURE);const a=await this.prepareData(e,t),n=this.getPoolValueDelta(a),o=this.getHoldValueDelta(a);return this.calculateImpermanentLoss(n,o)}calculateImpermanentLoss(e,t){return Math.floor(100*Math.abs(e/t-1)*100)/100}getPoolValueDelta(e){return e.reduce(((e,t)=>e*Math.pow(Math.abs(t.priceDelta+1),t.weight)),1)}getHoldValueDelta(e){return e.reduce(((e,t)=>e+Math.abs(t.priceDelta+1)*t.weight),0)}async prepareData(e,t){const a=t.tokens.filter((e=>e.address!==t.address)),n=this.getWeights(a),o=a.map((e=>e.address)),i=await this.getEntryPrices(e,o),s=await this.getExitPrices(a);return this.getAssets(a,s,i,n)}getAssets(e,t,a,n){return e.map(((e,o)=>({priceDelta:this.getDelta(a[e.address],t[e.address]),weight:n[o]})))}getDelta(e,t){if(0===e)throw console.error(`[ImpermanentLossService][getDelta]Error: ${vn.getMessage(An.ILLEGAL_PARAMETER)}: entry price is 0`),new vn(An.ILLEGAL_PARAMETER);return(t-e)/e}getWeights(e){const t=e.every((e=>!e.weight)),a=Math.round(1/e.length*100)/100,n=t?e.map((()=>a)):e.map((e=>{var t;return Number(null!==(t=e.weight)&&void 0!==t?t:0)}));if(n.some((e=>0===e)))throw console.error(`[ImpermanentLossService][getWeights]Error: ${vn.getMessage(An.MISSING_WEIGHT)}`),new vn(An.MISSING_WEIGHT);return n}async getExitPrices(e){var t;const a=await Promise.all(e.map((e=>this.tokenPrices.find(e.address)))).catch((()=>[]));if(!a.length||a.some((e=>void 0===(null==e?void 0:e.usd))))throw console.error(`[ImpermanentLossService][getExitPrices]Error: ${vn.getMessage(An.MISSING_PRICE_RATE)}`),new vn(An.MISSING_PRICE_RATE);const n=e.map(((e,t)=>({...e,price:a[t]}))),o={};for(const e of n)(null===(t=e.price)||void 0===t?void 0:t.usd)&&(o[e.address]=+e.price.usd);return o}async getEntryPrices(e,t){const a={};for(const n of t){const t=await this.tokenHistoricalPrices.findBy(n,e).catch((e=>{Re.getInstance().warn(`[ImpermanentLossService][getEntryPrices]Error: ${e.message}`)}));if(!(null==t?void 0:t.usd)){throw Re.getInstance().warn(`[ImpermanentLossService][getEntryPrices]Error: ${vn.getMessage(An.MISSING_PRICE_RATE)}`),new vn(An.MISSING_PRICE_RATE)}a[n]=+t.usd}return a}}const cr=145e3,yr=1648465251,br=31536e3,mr=2**(1/4),fr=(e=Math.round((new Date).getTime()/1e3))=>{const t=Math.floor((e-yr)/br);return cr*mr**-t},Tr=e=>365*(cr*mr**-e/7);var hr=Object.freeze({__proto__:null,INITIAL_RATE:cr,START_EPOCH_TIME:yr,weekly:fr,total:Tr,between:(e,t)=>{if(e<yr)throw"start timestamp before emission schedule deployment";if(t<e)throw"cannot finish before starting";let a=0;const n=Math.floor((e-yr)/br),o=Math.floor((t-yr)/br);for(let e=n;e<=o;e++)a+=Tr(e);const i=yr+br*(n+1)-e,s=t-(yr+br*o);return a-=Tr(n)*(br-i)/br,a-=Tr(o)*(br-s)/br,a}});class Ir{constructor(e,t){this.repository=e,this.tokenPrices=t}async data(e=Date.now()){const t=await this.repository.multicallData(e),a=await this.tokenPrices.find(t.balAddress);if(!a||!a.usd)throw"No BAL USD price found";return{lastWeekBalRevenue:t.balAmount*parseFloat(a.usd),lastWeekBBAUsdRevenue:t.bbAUsdAmount*t.bbAUsdPrice,veBalSupply:t.veBalSupply}}}class _r{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapFee?(null==t?void 0:t.totalSwapFee)?parseFloat(e.totalSwapFee)-parseFloat(t.totalSwapFee):e.createTime&&rr(e.createTime)?parseFloat(e.totalSwapFee):0:0}}class gr{constructor(e,t,a,n,o,i,s,r,p){this.pools=e,this.tokenPrices=t,this.tokenMeta=a,this.tokenYields=n,this.feeCollector=o,this.yesterdaysPools=i,this.liquidityGauges=s,this.feeDistributor=r,this.gyroConfigRepository=p}async swapFees(e){const t=await this.last24hFees(e),a=await this.totalLiquidity(e);if(!t||!a)return 0;const n=t*(1-await this.protocolSwapFeePercentage(e))/parseFloat(a)*1e4;return Math.round(365*n)}async tokenAprs(e){if(!e.tokens)return{total:0,breakdown:{}};const t=await this.totalLiquidity(e),a=e.tokens.filter((t=>t.address!==e.address)),n=await Promise.all(a.map((async t=>{let a=0;const n=await this.tokenYields.find(t.address);if(n)a="MetaStable"===e.poolType||e.poolType.includes("Gyro")?n*(1-await this.protocolSwapFeePercentage(e)):"ComposableStable"===e.poolType||"Weighted"===e.poolType&&e.poolTypeVersion>=2?t.isExemptFromYieldProtocolFee?n:n*(1-parseFloat(e.protocolYieldFeeCache||"0.5")):n;else{const n=await this.pools.findBy("address",t.address);if(n){const o=await this.swapFees(n);let i=(await this.tokenAprs(n)).total;("ComposableStable"===e.poolType||"Weighted"===e.poolType&&2===e.poolTypeVersion)&&(t.isExemptFromYieldProtocolFee||(i*=1-parseFloat(e.protocolYieldFeeCache||"0.5"))),a=o+i}}return a}))),o=async e=>{var a,n,o,i,s;let r;if(e.weight)return parseFloat(e.weight);if(null===(n=null===(a=e.token)||void 0===a?void 0:a.pool)||void 0===n?void 0:n.poolType){const t=await this.pools.findBy("address",e.address);t&&(r=(await this.bptPrice(t)).toString())}else r=(null===(o=e.price)||void 0===o?void 0:o.usd)||(null===(i=await this.tokenPrices.find(e.address))||void 0===i?void 0:i.usd)||(null===(s=e.token)||void 0===s?void 0:s.latestUSDPrice);if(r){return parseFloat(e.balance)*parseFloat(r)/parseFloat(t)}throw`No price for ${e.address}`},i=await Promise.all(a.map((async(e,t)=>{if(0===n[t])return 0;try{const a=await o(e);return Math.round(n[t]*a)}catch(e){return Re.getInstance().error(e),0}}))),s=i.reduce(((e,t)=>e+t),0);return{total:s,breakdown:E(A(a.map((e=>e.address)),i),v)}}async stakingApr(e,t=1){if(!this.liquidityGauges)return 0;const a=await this.liquidityGauges.findBy("poolId",e.id);if(!a||1==e.chainId&&0===a.workingSupply||e.chainId>1&&0===a.totalSupply||e.chainId>1&&0===a.balInflationRate)return 0;const n=xn[e.chainId].addresses.tokens.bal;if(!n)return 0;const[o,i]=await Promise.all([this.tokenPrices.find(n),this.bptPrice(e)]);if(!(null==o?void 0:o.usd))throw"Missing BAL price";const s=(a.workingSupply+.4)/.4*i;if(a.balInflationRate){const e=86400*a.balInflationRate*365*parseFloat(o.usd);return Math.round(1e4*t*e/s)}if(e.chainId>1){if(!a.rewardTokens)return 0;const e=n&&a.rewardTokens[n];if(!e)return 0;{let t;try{t=await this.rewardTokenApr(n,e);const o=a.totalSupply*i,s=t.value/o;return Math.round(1e4*s)}catch(e){return 0}}}const r=parseFloat(o.usd),p=Math.round((new Date).getTime()/1e3),d=fr(p)/7*365*a.relativeWeight*r;return Math.round(1e4*t*d/s)}async rewardAprs(e){if(!this.liquidityGauges)return{total:0,breakdown:{}};const t=await this.liquidityGauges.findBy("poolId",e.id);if(!t||!t.rewardTokens||Object.keys(t.rewardTokens).length<1)return{total:0,breakdown:{}};const a=xn[e.chainId].addresses.tokens.bal,n=Object.keys(t.rewardTokens).filter((e=>e!=a)).map((async e=>{const a=t.rewardTokens[e];try{return await this.rewardTokenApr(e,a)}catch(t){return{address:e,value:0}}})),o=await this.bptPrice(e),i=t.totalSupply*o;if(0==i)return{total:0,breakdown:{}};const s={};let r=0;for await(const e of Object.values(n)){const t=e.value/i,a=Math.round(1e4*t);r+=a,s[e.address]=a}return{total:r,breakdown:s}}async protocolApr(e){if("0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"!=e.id||!this.feeDistributor)return 0;const t=new Ir(this.feeDistributor,this.tokenPrices),{lastWeekBalRevenue:a,lastWeekBBAUsdRevenue:n,veBalSupply:o}=await t.data(),i=await this.bptPrice(e);if(!i)throw"bptPrice for veBal pool missing";const s=(a+n)/7;return Math.round(365*s*1e4/(i*o))}async apr(e){if(Cs.includes(e.id))return{swapFees:0,tokenAprs:{total:0,breakdown:{}},stakingApr:{min:0,max:0},rewardAprs:{total:0,breakdown:{}},protocolApr:0,min:0,max:0};const[t,a,n,o,i,s]=await Promise.all([this.swapFees(e),this.tokenAprs(e),this.stakingApr(e),this.stakingApr(e,2.5),this.rewardAprs(e),this.protocolApr(e)]);return{swapFees:t,tokenAprs:a,stakingApr:{min:n,max:o},rewardAprs:i,protocolApr:s,min:t+a.total+i.total+n,max:t+a.total+i.total+s+o}}async last24hFees(e){return new _r(this.yesterdaysPools).last24h(e)}async totalLiquidity(e){try{const t=new go(this.pools,this.tokenPrices);return await t.getLiquidity(e)}catch(t){return Re.getInstance().warn("Liquidity calculcation failed, falling back to subgraph"),e.totalLiquidity}}async bptPrice(e){return parseFloat(await this.totalLiquidity(e))/parseFloat(e.totalShares)}async protocolSwapFeePercentage(e){let t=.5;return t=e.poolType.includes("Gyro")&&this.gyroConfigRepository?await this.gyroConfigRepository.getGyroProtocolFee(e.address):e.protocolSwapFeeCache?parseFloat(e.protocolSwapFeeCache):await this.feeCollector.find("")||.5,t}async rewardTokenApr(e,t){if(t.period_finish.toNumber()<Date.now()/1e3)return{address:e,value:0};{const a=t.rate.mul(86400).mul(365),n=await this.tokenPrices.find(e);if(n&&n.usd){let o=18;if(t.decimals)o=t.decimals;else{const t=await this.tokenMeta.find(e);o=(null==t?void 0:t.decimals)||18}return{address:e,value:parseFloat(It(a,o))*parseFloat(n.usd)}}throw`No USD price for ${e}`}}}const Pr=Object.values(Be),wr=new Map;Pr.forEach((e=>{e.includes("Linear")&&Pr.includes(e)&&wr.set(e,"batchSwap")})),wr.set(Be.Element,"batchSwap"),wr.set(Be.Investment,"joinPool"),wr.set(Be.LiquidityBootstrapping,"joinPool"),wr.set(Be.MetaStable,"joinPool"),wr.set(Be.Stable,"joinPool"),wr.set(Be.StablePhantom,"batchSwap"),wr.set(Be.Weighted,"joinPool"),wr.set(Be.ComposableStable,"joinPool");const xr=new Map;Pr.forEach((e=>{e.includes("Linear")&&Pr.includes(e)&&xr.set(e,"batchSwap")})),xr.set(Be.Element,"batchSwap"),xr.set(Be.Investment,"exitPool"),xr.set(Be.LiquidityBootstrapping,"exitPool"),xr.set(Be.MetaStable,"exitPool"),xr.set(Be.Stable,"exitPool"),xr.set(Be.StablePhantom,"batchSwap"),xr.set(Be.Weighted,"exitPool"),xr.set(Be.ComposableStable,"exitPool");class Er{constructor(e){this.pools=e,this.getGraphNodes=async(e,t,a)=>{if(!await this.pools.find(t))throw new vn(An.POOL_DOESNT_EXIST);const n=await this.buildGraphFromRootPool(t,a);if(n.id!==t)throw new Error("Error creating graph nodes");return e?Er.orderByBfs(n).reverse():Er.orderByBfs(n)}}async buildGraphFromRootPool(e,t){const n=await this.pools.find(e);if(!n)throw new vn(An.POOL_DOESNT_EXIST);return(await this.buildGraphFromPool(n.address,0,void 0,a,t))[0]}getTokenTotal(e){const t=e.tokensList.indexOf(e.address);let a=n;const{balancesEvm:o}=nt(e);return o.forEach(((e,n)=>{t!==n&&(a=a.add(e))})),a}async buildGraphFromPool(e,t,n,o,i){var s;const r=await this.pools.findBy("address",e);if(!r){if(n){const a=await this.pools.findBy("address",n.address),i=a.tokensList.indexOf(e),r=null!==(s=a.tokens[i].decimals)&&void 0!==s?s:18,{balancesEvm:p}=nt(a);return Er.createInputTokenNode(t,e,r,n,o,p[i].toString())}throw new vn(An.POOL_DOESNT_EXIST)}const l=wr.get(r.poolType),u=xr.get(r.poolType);if(!l||!u)throw new vn(An.UNSUPPORTED_POOL_TYPE);const c=this.getTokenTotal(r),{spotPriceCalculator:y}=_o.from(r.poolType),b={};let m=18;r.tokens.forEach((e=>{if(Vt(e.address,r.address))return void(m=e.decimals?e.decimals:18);const t=y.calcPoolSpotPrice(e.address,r.address,r);b[e.address]=t}));let f={address:r.address,id:r.id,type:r.poolType,joinAction:l,exitAction:u,isProportionalExit:!1,children:[],marked:!1,index:t.toString(),parent:n,proportionOfParent:o,isLeaf:!1,spotPrices:b,decimals:m,balance:r.totalShares,priceRate:a.toString()};if(this.updateNodeIfProportionalExit(r,f),t++,r.poolType.toString().includes("Linear"))[f,t]=this.createLinearNodeChildren(f,t,r,i);else{const{balancesEvm:e}=nt(r);for(let a=0;a<r.tokens.length;a++){if(Vt(r.tokens[a].address,r.address))continue;let n;if("Weighted"===r.poolType){const e=r.tokens[a].weight;n=d(e,18)}else n=p.from(e[a]).mul(1e18.toString()).div(c);const s=n.mul(o).div(1e18.toString()),l=await this.buildGraphFromPool(r.tokens[a].address,t,f,s,i);t=l[1],l[0]&&f.children.push(l[0])}}return[f,t]}updateNodeIfProportionalExit(e,t){(e.poolType===Be.Weighted||e.poolType===Be.ComposableStable&&e.poolTypeVersion>2)&&(t.isProportionalExit=!0)}createLinearNodeChildren(e,t,a,n){var o;if(void 0===a.mainIndex)throw new Error("Issue With Linear Pool");if(n.map((e=>e.toLowerCase())).includes(a.tokensList[a.mainIndex].toLowerCase())){const n=this.createWrappedTokenNode(a,t,e,e.proportionOfParent);return e.children.push(n[0]),[e,n[1]]}{const{balancesEvm:n}=nt(a),i=null!==(o=a.tokens[a.mainIndex].decimals)&&void 0!==o?o:18,s=Er.createInputTokenNode(t,a.tokensList[a.mainIndex],i,e,e.proportionOfParent,n[a.mainIndex].toString());return e.children.push(s[0]),[e,t=s[1]]}}createWrappedTokenNode(e,t,a,n){var o;if(void 0===e.wrappedIndex||void 0===e.mainIndex)throw new Error("Issue With Linear Pool");const{balancesEvm:i,upScaledBalances:s,scalingFactorsRaw:r,priceRates:p}=nt(e),d={type:"WrappedToken",address:e.tokensList[e.wrappedIndex],id:"N/A",children:[],marked:!1,joinAction:"wrap",exitAction:"unwrap",isProportionalExit:!1,index:t.toString(),parent:a,proportionOfParent:n,isLeaf:!1,spotPrices:{},decimals:18,balance:i[e.wrappedIndex].toString(),priceRate:p[e.wrappedIndex].toString()};t++;const l=null!==(o=e.tokens[e.mainIndex].decimals)&&void 0!==o?o:18,u=Ze(s[e.wrappedIndex],r[e.mainIndex]).toString(),c=Er.createInputTokenNode(t,e.tokensList[e.mainIndex],l,d,n,u);return d.children=[c[0]],[d,t=c[1]]}static createInputTokenNode(e,t,n,o,i,s){return[{address:t,id:"N/A",type:"Input",children:[],marked:!1,joinAction:"input",exitAction:"output",isProportionalExit:!1,index:e.toString(),parent:o,proportionOfParent:i,isLeaf:!0,spotPrices:{},decimals:n,balance:s,priceRate:a.toString()},e+1]}static orderByBfs(e){const t=[],a=[];for(e.marked=!0,t.push(e);t.length>0;){const e=t.shift();e&&a.push(e),null==e||e.children.forEach((e=>{e.marked||(e.marked=!0,t.push(e))}))}return a}static getLeafAddresses(e){return e.filter((e=>e.isLeaf)).map((e=>e.address))}static isProportionalPools(e){return e.every((e=>!(e.children.length>1)||e.isProportionalExit))}}class Ar{constructor(){}}Ar.joinInit=t=>e.decode(["uint256","uint256[]"],t),Ar.joinExactTokensInForBPTOut=t=>e.decode(["uint256","uint256[]","uint256"],t),Ar.joinTokenInForExactBPTOut=t=>e.decode(["uint256","uint256","uint256"],t),Ar.joinAllTokensInForExactBPTOut=t=>e.decode(["uint256","uint256"],t),Ar.exitExactBPTInForOneTokenOut=t=>e.decode(["uint256","uint256","uint256"],t),Ar.exitExactBPTInForTokensOut=t=>e.decode(["uint256","uint256"],t),Ar.exitBPTInForExactTokensOut=t=>e.decode(["uint256","uint256[]","uint256"],t);class vr{constructor(e){this.relayerModel=e}joinKind(t){const a=e.decode(["uint256"],t)[0];if(!a)throw new Error("No exit kind.");return a.toNumber()}decodeJoinData(e,t){if(t===oe.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT){return Ar.joinAllTokensInForExactBPTOut(e).toString()}if(t===oe.EXACT_TOKENS_IN_FOR_BPT_OUT){const[,t]=Ar.joinExactTokensInForBPTOut(e);return t}if(t===oe.TOKEN_IN_FOR_EXACT_BPT_OUT){const[,t,a]=Ar.joinTokenInForExactBPTOut(e);return[t.toString(),a]}throw new Error("Non supported join data")}allTokensInForExactBPTOut(){throw new Error("joinAllTokensInForExactBPTOut not supported")}joinExactTokensInForBPTOut(e,t){const a=this.decodeJoinData(e,oe.EXACT_TOKENS_IN_FOR_BPT_OUT),n=this.relayerModel.doChainedRefReplacements(a),o=t._calcBptOutGivenExactTokensIn(n.map((e=>p.from(e))));if("StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType){const e=t.tokens.find((e=>Vt(e.address,t.address)));if(!e)throw new Error("Pool does not contain BPT as a token");const a=d(e.balance.toString(),e.decimals);t.updateTokenBalanceForPool(t.address,a.sub(o))}else t.updateTokenBalanceForPool(t.address,t.totalShares.add(o));const i=t.tokens.filter((e=>!Vt(e.address,t.address)));return n.forEach(((e,a)=>{const n=d(i[a].balance.toString(),i[a].decimals);t.updateTokenBalanceForPool(i[a].address,n.add(e))})),[o.toString(),i.map((e=>e.address)),n]}joinTokenInForExactBPTOut(e,t){const[a,n]=this.decodeJoinData(e,oe.TOKEN_IN_FOR_EXACT_BPT_OUT),o=this.relayerModel.doChainedRefReplacement(a),i=t.parsePoolPairData(t.tokensList[Number(n)],t.address),s=l(o,18),r=t._tokenInForExactTokenOut(i,$(s.toString())).dp(i.decimalsIn),p=d(r.toString(),i.decimalsIn);return t.updateTokenBalanceForPool(i.tokenIn,i.balanceIn.add(p)),t.updateTokenBalanceForPool(i.tokenOut,i.balanceOut.add(o)),[p.toString(),i.tokenIn,p.toString()]}async doJoinPool(e,t){const a=t[e.poolId],o=this.joinKind(e.encodedUserData);let i="0",s=[],r=[];if(o===oe.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT)i=this.allTokensInForExactBPTOut();else if(o===oe.EXACT_TOKENS_IN_FOR_BPT_OUT)[i,s,r]=this.joinExactTokensInForBPTOut(e.encodedUserData,a);else{if(o!==oe.TOKEN_IN_FOR_EXACT_BPT_OUT)throw new Error("Exit type not implemented");{let t,n;[i,t,n]=this.joinTokenInForExactBPTOut(e.encodedUserData,a),s.push(t),r.push(n)}}return s.push(a.address),r.push(n.sub(i).toString()),e.outputReference&&ar.isChainedReference(e.outputReference)&&this.relayerModel.setChainedReferenceValue(e.outputReference,i),[s,r]}}class Sr{constructor(e){this.relayerModel=e}exitKind(t,a){const n=e.decode(["uint256"],a)[0];if(!n)throw new Error("No exit kind.");return"ComposableStable"===t?n.toNumber()===ye.BPT_IN_FOR_EXACT_TOKENS_OUT?ie.BPT_IN_FOR_EXACT_TOKENS_OUT:n.toNumber()===ye.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT?ie.EXACT_BPT_IN_FOR_TOKENS_OUT:ie.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT:n.toNumber()}decodeExitData(e,t){if(t===ie.BPT_IN_FOR_EXACT_TOKENS_OUT){const[,t,a]=Ar.exitBPTInForExactTokensOut(e);return[t.toString(),a.toString()]}if(t===ie.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT){const[,t,a]=Ar.exitExactBPTInForOneTokenOut(e);return[t.toString(),a.toString()]}if(t===ie.EXACT_BPT_IN_FOR_TOKENS_OUT){const[,t]=Ar.exitExactBPTInForTokensOut(e);return[t.toString()]}throw new Error("Non supported exit data")}exactBptInForTokensOut(e,t){const[a]=this.decodeExitData(e,ie.EXACT_BPT_IN_FOR_TOKENS_OUT),n=this.relayerModel.doChainedRefReplacement(a),o=t._calcTokensOutGivenExactBptIn(p.from(n)).map((e=>e.toString()));if("StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType){const e=t.tokens.find((e=>Vt(e.address,t.address)));if(!e)throw new Error("Pool does not contain BPT as a token");const a=d(e.balance.toString(),e.decimals);t.updateTokenBalanceForPool(t.address,a.add(n))}else t.updateTokenBalanceForPool(t.address,t.totalShares.sub(n));const i=t.tokens.filter((e=>!Vt(e.address,t.address)));return o.forEach(((e,a)=>{const n=d(i[a].balance.toString(),i[a].decimals);t.updateTokenBalanceForPool(i[a].address,n.sub(e))})),[n,i.map((e=>e.address)),o]}exactBptInForOneTokenOut(e,t){const[a,n]=this.decodeExitData(e,ie.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT),o=this.relayerModel.doChainedRefReplacement(a),i=t.parsePoolPairData(t.address,t.tokensList[Number(n)]),s=l(o,i.decimalsIn),r=t._exactTokenInForTokenOut(i,$(s)).dp(i.decimalsOut),u=d(r.toString(),i.decimalsOut),c=function(e,t){const a=[];return t.forEach((t=>{const n=e.tokens.findIndex((e=>Vt(e.address,t)));if(n<0)throw"Pool does not contain tokenIn";a.push(d(e.tokens[n].balance,e.tokens[n].decimals).toString())})),a}(t,[t.address,i.tokenOut]);t.updateTokenBalanceForPool(i.tokenOut,p.from(c[1]).sub(u)),"StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType?t.updateTokenBalanceForPool(t.address,p.from(c[0]).add(o)):t.updateTokenBalanceForPool(t.address,t.totalShares.sub(o));const y=t.tokensList.filter((e=>!Vt(e,t.address))),b=new Array(y.length).fill("0");return b[Number(n)]=u.toString(),[o,y,b]}async doExitPool(e,t){const a=t[e.poolId],o=this.exitKind(a.SubgraphType,e.encodedUserData);let i,s=[],r=[];const p=[],d=[];if(o===ie.EXACT_BPT_IN_FOR_TOKENS_OUT)[i,r,s]=this.exactBptInForTokensOut(e.encodedUserData,a);else{if(o!==ie.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT)throw new Error("Exit type not implemented");[i,r,s]=this.exactBptInForOneTokenOut(e.encodedUserData,a)}for(let t=0;t<e.outputReferences.length;t++){const n=a.tokensList[e.outputReferences[t].index],o=r.indexOf(n);if(-1===o)throw new Error("Token out not found");this.relayerModel.setChainedReferenceValue(e.outputReferences[t].key.toString(),s[o])}return p.push(a.address,...r),d.push(i,...s.map((e=>n.sub(e).toString()))),[p,d]}}class kr{constructor(e){this.relayerModel=e}async doSingleSwap(e,t){const a=this.relayerModel.doChainedRefReplacement(e.request.amount.toString()),o=t[e.request.poolId],[,i]=this.doSwap(e.request.assetIn,e.request.assetOut,o,e.request.kind,a),s=n.sub(i);if(!e.outputReference)throw new Error("Missing outputReference");return this.relayerModel.setChainedReferenceValue(e.outputReference.toString(),s.abs().toString()),[s.toString(),a]}async doBatchSwap(e,t){const a=e.assets,o=new Array(a.length).fill(n);let i;for(let t=0;t<e.swaps.length;++t){const a=e.swaps[t].amount;ar.isChainedReference(a)&&(e.swaps[t].amount=this.relayerModel.getChainedReferenceValue(a))}e.swaps.forEach((n=>{const s=a[n.assetInIndex],r=a[n.assetOutIndex],p=t[n.poolId];let d=n.amount;"0"===d&&(d=i);const[l,u]=this.doSwap(s,r,p,e.swapType,d);i=e.swapType===In.SwapExactIn?u.toString():l.toString(),o[n.assetInIndex]=o[n.assetInIndex].add(l),o[n.assetOutIndex]=o[n.assetOutIndex].sub(u)}));for(let t=0;t<e.outputReferences.length;t++)this.relayerModel.setChainedReferenceValue(e.outputReferences[t].key.toString(),o[e.outputReferences[t].index].abs().toString());return o.map((e=>e.toString()))}doSwap(e,t,a,o,i){const s=a.parsePoolPairData(e,t),r=o===In.SwapExactIn;let u=r?p.from(i):n,c=r?n:p.from(i);const y=l(u,s.decimalsIn),b=l(c,s.decimalsOut);if(r){const e=a._exactTokenInForTokenOut(s,$(y.toString())).dp(s.decimalsOut);c=d(e.toString(),s.decimalsOut)}else{const e=a._tokenInForExactTokenOut(s,$(b.toString())).dp(s.decimalsIn);u=d(e.toString(),s.decimalsIn)}return a.updateTokenBalanceForPool(s.tokenIn,s.balanceIn.add(u)),a.updateTokenBalanceForPool(s.tokenOut,s.balanceOut.sub(c)),[u,c]}}class Or{constructor(e){this.relayerModel=e}async doUnwrap(e,t){const o=t[e.poolId],i=o.tokens[o.wrappedIndex],s=o.tokens[o.mainIndex],r=this.relayerModel.doChainedRefReplacement(e.amount.toString()),p=et.divDownFixed(et.mulDownFixed(BigInt(r),d(i.priceRate,18).toBigInt()),a.toBigInt()).toString();this.relayerModel.setChainedReferenceValue(e.outputReference.toString(),p);return[[i.address,s.address],[r,n.sub(p).toString()]]}}class Mr{constructor(e){this.relayerModel=e,this.joinModel=new vr(e),this.exitModel=new Sr(e),this.swapModel=new kr(e),this.unwrapModel=new Or(e)}async doJoin(e,t){return this.joinModel.doJoinPool(e,t)}async doExit(e,t){return this.exitModel.doExitPool(e,t)}async doBatchSwap(e,t){return this.swapModel.doBatchSwap(e,t)}async doSingleSwap(e,t){return this.swapModel.doSingleSwap(e,t)}async doUnwrap(e,t){return this.unwrapModel.doUnwrap(e,t)}}class Cr{constructor(){this.chainedRefs={}}setChainedReferenceValue(e,t){this.chainedRefs[e]=t}getChainedReferenceValue(e){return this.chainedRefs[e]}doChainedRefReplacement(e){return ar.isChainedReference(e.toString())?this.getChainedReferenceValue(e.toString()):e}doChainedRefReplacements(e){return e.map((e=>this.doChainedRefReplacement(e).toString()))}}class Fr{constructor(e,t){this.poolDataService=e,this.wrappedNativeAsset=t,this.poolsArray=[],this.poolsDict={}}dataSource(){return this.poolDataService}async all(e=!1){if(e||0===this.poolsArray.length){const e=S(await this.dataSource().getPools());for(const t of e)if(["Weighted","Investment","Stable","LiquidityBootstrapping"].includes(t.poolType)){const e={address:t.address,balance:t.totalShares,decimals:18,priceRate:"1",weight:"0"};t.tokens.push(e),t.tokensList.push(t.address)}this.poolsArray=e}return this.poolsArray}parseToPoolsDict(e){return Object.fromEntries(S(e).filter((e=>e.tokensList.length>0&&"0"!==e.tokens[0].balance)).map((e=>[e.id,this.parseNewPool(e)])).filter((([,e])=>void 0!==e)))}parseNewPool(e){if(!e.swapEnabled)return;let t={};try{if(["Weighted","Investment","LiquidityBootstrapping"].includes(e.poolType)){t=L.fromPool(e,!1)}else if("Stable"===e.poolType){t=C.fromPool(e)}else if("MetaStable"===e.poolType){t=D.fromPool(e)}else if(e.poolType.toString().includes("Linear")){t=U.fromPool(e)}else if("StablePhantom"===e.poolType){t=B.fromPool(e)}else{if("ComposableStable"!==e.poolType){return void Re.getInstance().warn(`Unknown pool type or type field missing: ${e.poolType} ${e.id}`)}t=H.fromPool(e)}if(!t)throw new Error("Issue with Pool");t.SubgraphType=e.poolType}catch(e){return void console.error("Error parseNewPool")}return t}async poolsDictionary(e=!1){if(e||0===Object.keys(this.poolsDict).length){const t=await this.all(e);this.poolsDict=this.parseToPoolsDict(t)}return this.poolsDict}}var Br,Rr;!function(e){e[e.BatchSwap=0]="BatchSwap",e[e.Join=1]="Join",e[e.Exit=2]="Exit",e[e.Swap=3]="Swap",e[e.Unwrap=4]="Unwrap"}(Br||(Br={}));class Nr{constructor(e,t){this.poolsSource=new Fr(e,t)}updateDeltas(e,t,a){return t.forEach(((t,o)=>{e[t]||(e[t]=n),e[t]=e[t].add(a[o])})),e}async multicall(e,t=!1){const a=new Cr,n=new Mr(a),o=await this.poolsSource.poolsDictionary(t),i={};for(const t of e){let e=[],a=[];switch(t.actionType){case Br.Join:[e,a]=await n.doJoin(t,o);break;case Br.Exit:[e,a]=await n.doExit(t,o);break;case Br.BatchSwap:e=t.assets,a=await n.doBatchSwap(t,o);break;case Br.Swap:e=[t.request.assetOut,t.request.assetIn],a=await n.doSingleSwap(t,o);break;case Br.Unwrap:[e,a]=await n.doUnwrap(t,o)}this.updateDeltas(i,e,a)}return i}static mapSwapRequest(e){return{actionType:Br.Swap,request:e.request,funds:e.funds,outputReference:e.outputReference}}static mapBatchSwapRequest(e){return{actionType:Br.BatchSwap,swaps:e.swaps,assets:e.assets,funds:e.funds,swapType:e.swapType,outputReferences:e.outputReferences}}static mapJoinPoolRequest(e){return{actionType:Br.Join,poolId:e.poolId,encodedUserData:e.joinPoolRequest.userData,outputReference:e.outputReference}}static mapExitPoolRequest(e){return{actionType:Br.Exit,poolId:e.poolId,encodedUserData:e.exitPoolRequest.userData,outputReferences:e.outputReferences}}static mapUnwrapRequest(e,t,a){return{actionType:Br.Unwrap,poolId:a,amount:e,outputReference:t}}}const Lr=ya.createInterface();function Dr(e){Re.getInstance()}class Ur{constructor(e,t,a){this.poolGraph=e,this.simulationService=a,this.createCalls=async(e,t,a,n,o)=>{const{multiRequests:i,encodedCalls:s,outputIndexes:r,deltas:p}=this.createActionCalls(e,t,a,n);o&&s.unshift(this.createSetRelayerApproval(o));return{multiRequests:i,encodedCall:Lr.encodeFunctionData("multicall",[s]),outputIndexes:o?r.map((e=>e+1)):r,deltas:p}},this.amountsOutByJoinPath=async(e,t,a,o,i,s,r,d)=>{const l=await this.simulationService.simulateGeneralisedJoin(this.relayer,t,a,i,e,o,s,r,d),u=l.reduce(((e,t)=>e.add(p.from(t))),n).toString();return{amountsOut:l,totalAmountOut:u}},this.minAmountsOutByJoinPath=(e,t,a)=>({minAmountsOut:t.map((t=>Dt(p.from(t),p.from(e)).toString())),totalMinAmountOut:Dt(p.from(a),p.from(e)).toString()}),this.createActionCalls=(e,t,a,n)=>{const o=[],i=[],s=[],r=!n,p={};return e.forEach(((e,d)=>{const l=e[0].isLeaf,u=[];if(e.forEach(((o,s)=>{var c,y;if(o.children.length>0&&0===o.children.filter((e=>this.shouldBeConsidered(e))).length)return void(o.index="0");const b=o.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction))?t:this.relayer,m=s===e.length-1,f=null!==(y=l&&(null===(c=o.parent)||void 0===c?void 0:c.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction))))&&void 0!==y&&y,T=m||f?t:this.relayer,h=m&&n?n[d]:"0";switch(o.joinAction){case"batchSwap":{const{modelRequest:e,encodedCall:t,assets:n,amounts:s}=this.createSwap(o,d,h,b,T,a,r);u.push(e),i.push(t),this.updateDeltas(p,n,s)}break;case"joinPool":{const{modelRequest:e,encodedCall:t,assets:n,amounts:s,minBptOut:l}=this.createJoinPool(o,d,h,b,T,a,r);u.push(e),i.push(t),this.updateDeltas(p,[o.address,...n],[l,...s])}break;default:return}})),r){const e=100*d,t=ar.encodePeekChainedReferenceValue(ar.toChainedReference(e,!1));i.push(t),s.push(i.indexOf(t))}o.push(u)})),{multiRequests:o,encodedCalls:i,outputIndexes:s,deltas:p}},this.createSetRelayerApproval=e=>ar.encodeSetRelayerApproval(this.relayer,!0,e),this.createSwap=(e,t,a,o,i,s,r)=>{var d;if(1!==e.children.length)throw new Error("Unsupported swap");const l=e.children[0].address,u=this.getOutputRefValue(t,e.children[0]),c=a,y=s&&!r?this.replaceWrappedNativeAsset([l])[0]:l,b={poolId:e.id,kind:In.SwapExactIn,assetIn:y,assetOut:e.address,amount:u.value,userData:"0x"},m={sender:o,recipient:i,fromInternalBalance:this.allImmediateChildrenSendToInternal(e),toInternalBalance:this.allSiblingsSendToInternal(e)},f=p.from(this.getOutputRefValue(t,e).value),T=s&&!r?kt([y],[u.value]):n,h={request:b,funds:m,limit:c,deadline:p.from(Math.ceil(Date.now()/1e3)+3600),value:T,outputReference:f},I=ar.encodeSwap(h);Dr(),Dr(JSON.stringify(h)),Dr(JSON.stringify(null===(d=h.value)||void 0===d?void 0:d.toString()));const _=Nr.mapSwapRequest(h),g=e.children.some((e=>"input"===e.joinAction))?u.value:"0",P=null!=e.parent?"0":p.from(a).mul(-1).toString();return{modelRequest:_,encodedCall:I,assets:[e.address,l],amounts:[P,g]}},this.createJoinPool=(e,t,a,o,i,s,r)=>{var p;const d=[],l=[];e.children.forEach((e=>{d.push(e.address),this.shouldBeConsidered(e)?l.push(this.getOutputRefValue(t,e).value):l.push("0")})),e.type===Be.ComposableStable&&(d.push(e.address),l.push("0"));const u=new Le(this.wrappedNativeAsset),[c,y]=u.sortTokens(d,l);let b=[];const m=c.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());let f;b=-1===m?y:[...y.slice(0,m),...y.slice(m+1)],f=e.type===Be.Weighted?pe.joinExactTokensInForBPTOut(b,a):re.joinExactTokensInForBPTOut(b,a);const T=s&&!r?kt(this.replaceWrappedNativeAsset(c),y):n,h=this.allImmediateChildrenSendToInternal(e),I=ar.formatJoinPoolInput({poolId:e.id,kind:0,sender:o,recipient:i,value:T,outputReference:this.getOutputRefValue(t,e).value,joinPoolRequest:{},assets:s&&!r?this.replaceWrappedNativeAsset(c):c,maxAmountsIn:y,userData:f,fromInternalBalance:h}),_=ar.encodeJoinPool(I);Dr(),Dr(JSON.stringify(I)),Dr(JSON.stringify(null===(p=I.value)||void 0===p?void 0:p.toString()));const g=Nr.mapJoinPoolRequest(I),P=y.map((e=>ar.isChainedReference(e)?"0":e)),w=ar.isChainedReference(a)?"0":a,x=e.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction));return{modelRequest:g,encodedCall:_,assets:x?c:[],amounts:x?P:[],minBptOut:null!=e.parent?n.toString():n.sub(w).toString()}},this.getOutputRefValue=(e,t)=>"input"===t.joinAction?{value:t.index,isRef:!1}:"0"===t.index&&t.parent?{value:"0",isRef:!0}:{value:ar.toChainedReference(p.from(t.index).add(100*e)).toString(),isRef:!0},this.shouldBeConsidered=e=>"0"!==e.index,this.sendsToInternalBalance=e=>"input"!==e.joinAction&&"joinPool"!==e.joinAction,this.allImmediateChildrenSendToInternal=e=>{const t=e.children.filter((e=>this.shouldBeConsidered(e)));return 0!==t.length&&t.filter((e=>this.sendsToInternalBalance(e))).length===t.length},this.allSiblingsSendToInternal=e=>{if(!e.parent)return!1;const t=e.parent.children.filter((e=>this.shouldBeConsidered(e)));return t.filter((e=>this.sendsToInternalBalance(e))).length===t.length},this.replaceWrappedNativeAsset=e=>{const t=e.findIndex((e=>e.toLowerCase()===this.wrappedNativeAsset.toLowerCase()));return Gt(e,t,o)};const{tokens:i,contracts:s}=En(t.chainId);this.relayer=s.balancerRelayer,this.wrappedNativeAsset=i.wrappedNativeAsset}checkInputs(e,t){if(0===e.length)throw new vn(An.MISSING_TOKENS);if(t.every((e=>"0"===e)))throw new vn(An.JOIN_WITH_ZERO_AMOUNT);if(e.length!=t.length)throw new vn(An.INPUT_LENGTH_MISMATCH);if(e.some((e=>e===o))&&e.some((e=>e.toLowerCase()===this.wrappedNativeAsset.toLowerCase())))throw new vn(An.INPUT_TOKEN_INVALID)}async joinPool(e,t,a,i,s,r,p,d){this.checkInputs(t,a);const l=await this.poolGraph.getGraphNodes(!0,e,[]),u=t.findIndex((e=>e===o)),c=-1!==u,y=Gt(t,u,this.wrappedNativeAsset.toLowerCase()),b=Ur.getJoinPaths(l,y,a),m=Ur.totalBptZeroPriceImpact(b);Dr();const{multiRequests:f,encodedCall:T,outputIndexes:h}=await this.createCalls(b,i,c,void 0,d),{amountsOut:I,totalAmountOut:_}=await this.amountsOutByJoinPath(i,f,T,y,h,r,p,"0"),{minAmountsOut:g,totalMinAmountOut:P}=this.minAmountsOutByJoinPath(s,I,_),w=Sn(BigInt(_),m.toBigInt(),!0).toString();Dr();const{encodedCall:x,deltas:E}=await this.createCalls(b,i,c,g,d),A=c?E[this.wrappedNativeAsset.toLowerCase()]:n;return Dr(A.toString()),this.assertDeltas(e,E,y,a,P),{to:this.relayer,encodedCall:x,expectedOut:_,minOut:P,priceImpact:w,value:A}}assertDeltas(e,t,a,n,o){var i;const s=Ie(e);if(t[s.toLowerCase()].add(o).abs().gt(3))throw console.error("join assertDeltas, bptOut: ",s,o,null===(i=t[s.toLowerCase()])||void 0===i?void 0:i.toString()),new vn(An.JOIN_DELTA_AMOUNTS);delete t[s.toLowerCase()],a.forEach(((e,a)=>{var o,i;if(!p.from(n[a]).eq(0)&&(null===(o=t[e.toLowerCase()])||void 0===o?void 0:o.toString())!==n[a])throw console.error("join assertDeltas, tokenIn: ",e,n[a],null===(i=t[e.toLowerCase()])||void 0===i?void 0:i.toString()),new vn(An.JOIN_DELTA_AMOUNTS);delete t[e.toLowerCase()]}));for(const e in t)if("0"!==t[e].toString())throw console.error("join assertDeltas, non-input token should be 0: ",e,t[e].toString()),new vn(An.JOIN_DELTA_AMOUNTS)}updateDeltas(e,t,a){return t.forEach(((t,o)=>{const i=t.toLowerCase();e[i]||(e[i]=n),e[i]=e[i].add(a[o])})),e}}Rr=Ur,Ur.getJoinPaths=(e,t,n)=>{const o=[],i=e.filter((e=>t.filter(((e,t)=>p.from(n[t]).gt(0))).map((e=>e.toLowerCase())).includes(e.address.toLowerCase())));i.some((e=>e.isLeaf))&&o.push(e);const s=i.filter((e=>!e.isLeaf));return s.forEach((e=>{const i=n.find(((a,n)=>Vt(t[n],e.address))),r=s.filter((t=>Vt(t.address,e.address))).reduce(((e,t)=>e.add(t.proportionOfParent)),p.from(0)),d=p.from(i).mul(e.proportionOfParent).div(r).toString(),[l]=Er.createInputTokenNode(0,e.address,e.decimals,e.parent,a,e.balance);l.index=d,l.isLeaf=!1;const u=[l];let c=l.parent,y=l;for(;c;){const e=S(c);e.children=e.children.map((e=>e.address===y.address?y:{...e,index:"0"})),u.push(e),y=e,c=e.parent}o.push(u)})),Rr.updateInputAmounts(o,t,n),o},Ur.updateInputAmounts=(e,t,a)=>{const n=(e,t)=>{if(e.length>1){const a=e.reduce(((e,t)=>e.add(t.index)),p.from(0)),n=p.from(t).sub(a);e[0].index=n.add(e[0].index).toString()}},o=e.find((e=>e[0].isLeaf));if(o){const e=Rr.updateTotalProportions(o);o.forEach((n=>{"input"===n.joinAction&&(n=Rr.updateNodeAmount(n,t,a,e))})),t.forEach(((e,t)=>{const i=o.filter((t=>t.isLeaf&&Vt(t.address,e)));n(i,a[t])}))}const i=e.filter((e=>!e[0].isLeaf));i.length>1&&t.forEach(((e,t)=>{const o=i.map((e=>e[0])).filter((t=>Vt(t.address,e)));n(o,a[t])}))},Ur.totalBptZeroPriceImpact=e=>{let t=p.from("0");return e.forEach((e=>{if(e[0].isLeaf){e.filter((e=>e.isLeaf)).forEach((e=>{const a=Rr.bptOutZeroPiForInputNode(e);t=t.add(a)}))}else{const a=Rr.bptOutZeroPiForInputNode(e[0]);t=t.add(a)}})),t},Ur.bptOutZeroPiForInputNode=e=>{if("0"===e.index||"input"!==e.joinAction)return BigInt(0);let t=1,a=e.parent,n=e.address;for(;void 0!==a;){if("batchSwap"===a.joinAction||"joinPool"===a.joinAction){const e=a.spotPrices[n.toLowerCase()];t*=parseFloat(e),n=a.address}a=a.parent}const o=d(t.toFixed(18),18),i=Ye(BigInt(e.decimals)),s=je(BigInt(e.index),i);return et.divDownFixed(s,o.toBigInt())},Ur.updateTotalProportions=e=>{const t={};return e.forEach((e=>{t[e.address]?t[e.address]=t[e.address].add(e.proportionOfParent):t[e.address]=e.proportionOfParent})),t},Ur.updateNodeAmount=(e,t,a,n)=>{const o=t.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());if(-1===o)return e.index="0",e;const i=n[e.address],s=e.proportionOfParent.mul(1e18.toString()).div(i).mul(a[o]).div(1e18.toString());return e.index=s.toString(),e};class Vr{constructor(e,t){this.chainId=e,this.simulateMulticall=async(e,t,a,n,o="0")=>{const i={...await this.encodeBalanceAndAllowanceOverrides(a,n),...await this.encodeRelayerApprovalOverride(a,e)};return this.simulateTransaction(e,t,a,i,o)},this.simulateTransaction=async(e,t,a,n,o)=>{const i={...Object.fromEntries(Object.keys(n).map((e=>[e,{storage:n[e].value}]))),[a]:{balance:d("100",18).toHexString()}},s={network_id:this.chainId.toString(),block_number:this.blockNumber,from:a,to:e,input:t,value:o,save_if_fails:!0,simulation_type:"quick",state_objects:i},r=this.tenderlyUrl+"simulate";return(await z.post(r,s,this.opts)).data.transaction.transaction_info.call_trace.output},this.encodeRelayerApprovalOverride=async(e,t)=>{const a={[`${this.vaultAddress}`]:{value:{[`_approvedRelayers[${e}][${t}]`]:(!0).toString()}}};return await this.requestStateOverrides(a)},this.encodeBalanceAndAllowanceOverrides=async(e,t)=>{const a=t.filter((e=>e!==o));if(0===a.length)return{};let n={};a.forEach((t=>n={...n,[`${t}`]:{value:{[`_balances[${e}]`]:s.toString(),[`_allowances[${e}][${this.vaultAddress}]`]:s.toString(),[`balanceOf[${e}]`]:s.toString(),[`allowance[${e}][${this.vaultAddress}]`]:s.toString(),[`balances[${e}]`]:s.toString(),[`allowed[${e}][${this.vaultAddress}]`]:s.toString()}}}));const i=await this.requestStateOverrides(n);if(Object.keys(i).some((e=>2!==Object.keys(i[e].value).length)))throw new Error("Couldn't encode state overrides - states should match the ones in the contracts");return i},this.requestStateOverrides=async e=>{const t=this.tenderlyUrl+"contracts/encode-states",a={networkID:this.chainId.toString(),stateOverrides:e},n=(await z.post(t,a,this.opts)).data.stateOverrides;if(!n||Object.keys(n).length!==Object.keys(e).length)throw new Error("Couldn't encode state overrides - contracts should be verified and whitelisted on Tenderly");return n};const{contracts:a}=En(this.chainId);this.vaultAddress=a.vault,this.tenderlyUrl=`https://api.tenderly.co/api/v1/account/${t.user}/project/${t.project}/`,this.opts={headers:{"X-Access-Key":t.accessKey}},this.blockNumber=t.blockNumber}}var qr;!function(e){e[e.Tenderly=0]="Tenderly",e[e.VaultModel=1]="VaultModel",e[e.Static=2]="Static"}(qr||(qr={}));class Gr{constructor(t,a){this.simulateGeneralisedJoin=async(e,t,a,n,o,i,s,r,p)=>{const d=[];switch(r){case qr.Tenderly:{if(!this.tenderlyHelper)throw new Error("Missing Tenderly config");const t=await this.tenderlyHelper.simulateMulticall(e,a,o,i,p);d.push(...this.decodeResult(t,n));break}case qr.VaultModel:{const e=await this.simulateRequests(t);d.push(...e);break}case qr.Static:{const t=await s.call({to:e,data:a,value:p});try{d.push(...this.decodeResult(t,n))}catch(e){const a=Buffer.from(t.split("x")[1],"hex").toString("utf8");throw new Error(`Transaction reverted with error: ${a}`)}break}default:throw new Error("Simulation type not supported")}return d},this.simulateGeneralisedExit=async(e,t,a,n,o,i,s,r)=>{const p=[];switch(r){case qr.Tenderly:{if(!this.tenderlyHelper)throw new Error("Missing Tenderly config");const t=await this.tenderlyHelper.simulateMulticall(e,a,o,[i]);p.push(...this.decodeResult(t,n));break}case qr.VaultModel:{const e=await this.simulateRequests(t);p.push(...e);break}case qr.Static:{const t=await s.call({to:e,data:a});try{p.push(...this.decodeResult(t,n))}catch(e){const a=Buffer.from(t.split("x")[1],"hex").toString("utf8");throw new Error(`Transaction reverted with error: ${a}`)}break}default:throw new Error("Simulation type not supported")}return p},this.decodeResult=(t,a)=>{const n=e.decode(["bytes[]"],t)[0];return a.map((t=>e.decode(["uint256"],n[t]).toString()))},this.simulateRequests=async e=>{if(void 0===this.vaultModel)throw new Error("Missing Vault Model Config.");const t=[];for(const[a,n]of e.entries()){const e=await this.vaultModel.multicall(n,0===a),o=Object.values(e).filter((e=>e.lt(0)));if(0===o.length)throw new Error("No delta found for token out.");t.push(...o.map((e=>e.mul(-1).toString())))}return t},t.tenderly&&(this.tenderlyHelper=new Vr(t.chainId,t.tenderly)),this.vaultModel=a?new Nr(a,t.addresses.tokens.wrappedNativeAsset):void 0}}const Wr=ya.createInterface();function $r(e){Re.getInstance()}class Hr{constructor(e,t,o){this.poolGraph=e,this.simulationService=o,this.amountsOutByExitPath=async(e,t,a,n,o,i,s)=>await this.simulationService.simulateGeneralisedExit(this.relayer,t,a,o,e,n,i,s),this.amountsOutByTokenOut=(e,t,a)=>{const o={};t.forEach(((e,t)=>{var i;return o[e]=(null!==(i=o[e])&&void 0!==i?i:n).add(a[t])}));return e.map((e=>o[e].toString()))},this.minAmountsOut=(e,t,a)=>({minAmountsOutByExitPath:e.map((e=>Dt(p.from(e),p.from(a)).toString())),minAmountsOutByTokenOut:t.map((e=>Dt(p.from(e),p.from(a)).toString()))}),this.getExitPaths=(e,t)=>{const o=e.map((e=>{const n=[e];for(;n[0].parent;)n.unshift(S(n[0].parent));return n[0].index=n[n.length-1].proportionOfParent.mul(t).div(a).toString(),n})),i=o.reduce(((e,t)=>{const a=t[0].index;return p.from(a).add(e)}),n),s=p.from(t).sub(i);return o[o.length-1][0].index=s.add(o[o.length-1][0].index).toString(),o},this.createUnwrap=(e,t,a,o,i,s)=>{var r,p;const d=ar.toChainedReference(this.getOutputRef(a,e.index)).toString(),l=ar.toChainedReference(this.getOutputRef(a,t.index)),u=null===(r=e.parent)||void 0===r?void 0:r.type,c={wrappedToken:e.address,sender:i,recipient:s,amount:d,outputReference:l},y=ar.encodeUnwrap(c,u);$r(),$r(),$r(JSON.stringify(c));return{modelRequest:Nr.mapUnwrapRequest(d,l,null===(p=e.parent)||void 0===p?void 0:p.id),encodedCall:y,assets:[t.address],amounts:[n.sub(o).toString()]}},this.getOutputRef=(e,t)=>100*e+parseInt(t),this.receivesFromInternal=e=>!!e.parent&&("output"!==e.exitAction&&"unwrap"!==e.exitAction&&"exitPool"!==e.exitAction);const{tokens:i,contracts:s}=En(t.chainId);this.wrappedNativeAsset=i.wrappedNativeAsset,this.relayer=s.balancerRelayer}async getExitInfo(e,t,a,n){$r();const o=await this.getExit(e,t,a,n,[],qr.VaultModel);return{tokensOut:o.tokensOut,estimatedAmountsOut:o.expectedAmountsOut,priceImpact:o.priceImpact,tokensToUnwrap:o.tokensToUnwrap}}async buildExitCall(e,t,a,n,o,i,s,r){$r();const p=await this.getExit(e,t,a,o,null!=r?r:[],i,s),{minAmountsOutByExitPath:d,minAmountsOutByTokenOut:l}=this.minAmountsOut(p.expectedAmountsOutByExitPath,p.expectedAmountsOut,n);$r();const{encodedCall:u,deltas:c}=await this.createCalls(p.exitPaths,a,p.isProportional,d,s);return this.assertDeltas(e,c,t,p.tokensOut,l),{to:this.relayer,encodedCall:u,tokensOut:p.tokensOut,expectedAmountsOut:p.expectedAmountsOut,minAmountsOut:l,priceImpact:p.priceImpact}}async getExit(e,t,a,n,o,i,s){const r=await this.poolGraph.getGraphNodes(!1,e,o),d=Er.isProportionalPools(r);$r();let l=[],u=[],c=[];const y=r.filter((e=>"output"===e.exitAction));if(u=y.map((e=>e.address.toLowerCase())),c=[...new Set(u)].sort(),d){const e=r.map(((e,a)=>(0===a&&(e.index=t),e)));l[0]=e}else l=this.getExitPaths(y,t);const{multiRequests:b,encodedCall:m,outputIndexes:f}=await this.createCalls(l,a,d,void 0,s),T=await this.amountsOutByExitPath(a,b,m,r[0].address,f,n,i),h=y.filter(((e,t)=>p.from(T[t]).gt(e.balance))).map((e=>e.address.toLowerCase()));if(o.some((e=>h.includes(e.toLowerCase()))))throw new Error("Insufficient pool balance to perform generalised exit - try exitting with smaller amounts");if(h.length>0)return await this.getExit(e,t,a,n,[...new Set(h)].sort(),i,s);{const a=this.amountsOutByTokenOut(c,u,T),n=await this.calculatePriceImpact(e,this.poolGraph,c,a,t);return{tokensToUnwrap:o,tokensOut:c,exitPaths:l,isProportional:d,expectedAmountsOut:a,expectedAmountsOutByExitPath:T,priceImpact:n}}}async calculatePriceImpact(e,t,a,n,o){const i=await t.getGraphNodes(!0,e,[]),s=Ur.getJoinPaths(i,a,n),r=Ur.totalBptZeroPriceImpact(s);return Sn(BigInt(o),r.toBigInt(),!1).toString()}assertDeltas(e,t,a,n,o){var i;const s=Ie(e);if(t[s.toLowerCase()].sub(a).abs().gt(3))throw console.error("exit assertDeltas, bptIn: ",s,a,null===(i=t[s.toLowerCase()])||void 0===i?void 0:i.toString()),new vn(An.EXIT_DELTA_AMOUNTS);delete t[s.toLowerCase()],n.forEach(((e,a)=>{var n;if(t[e.toLowerCase()].add(o[a]).abs().gt(1))throw console.error("exit assertDeltas, tokenOut: ",e,o[a],null===(n=t[e.toLowerCase()])||void 0===n?void 0:n.toString()),new vn(An.EXIT_DELTA_AMOUNTS);delete t[e.toLowerCase()]}));for(const e in t)if("0"!==t[e].toString())throw console.error("exit assertDeltas, non-input token should be 0: ",e,t[e].toString()),new vn(An.EXIT_DELTA_AMOUNTS)}async createCalls(e,t,a,n,o){const{multiRequests:i,calls:s,outputIndexes:r,deltas:p}=this.createActionCalls(S(e),t,a,n);o&&s.unshift(ar.encodeSetRelayerApproval(this.relayer,!0,o));return{multiRequests:i,encodedCall:Wr.encodeFunctionData("multicall",[s]),outputIndexes:o?r.map((e=>e+1)):r,deltas:p}}updateDeltas(e,t,a){return t.forEach(((t,o)=>{const i=t.toLowerCase();e[i]||(e[i]=n),e[i]=e[i].add(a[o])})),e}createActionCalls(e,t,n,o){const i=[],s=[],r=[],p=!o,d={},l=(e,a)=>a.children.filter((t=>e.map((e=>e.index)).includes(t.index))).some((e=>"output"===e.exitAction))?t:this.relayer;return e.forEach(((e,u)=>{const c=[],y=e.filter((e=>"output"===e.exitAction));e.forEach((i=>{const b=i.children.find((t=>e.map((e=>e.index)).includes(t.index))),m=((e,a)=>a.parent?l(e,a.parent):t)(e,i),f=l(e,i),T=i.children.filter((t=>e.map((e=>e.index)).includes(t.index))).some((e=>"output"===e.exitAction||"unwrap"===e.exitAction));let h="0";const I=Array(i.children.length).fill("0");switch(o&&T&&(n?i.children.forEach(((e,t)=>{let n;"unwrap"===e.exitAction?(n=y.indexOf(e.children[0]),h=a.mul(o[n]).div(e.priceRate).toString()):"output"===e.exitAction?(n=y.indexOf(e),h=o[n]):h="0",I[t]=h})):h="unwrap"===(null==b?void 0:b.exitAction)?a.mul(o[u]).div(b.priceRate).toString():o[u]),i.exitAction){case"unwrap":{const{modelRequest:e,encodedCall:t,assets:a,amounts:n}=this.createUnwrap(i,b,u,h,m,f);c.push(e),s.push(t),this.updateDeltas(d,a,n);break}case"batchSwap":{const{modelRequest:e,encodedCall:t,assets:a,amounts:n}=this.createSwap(i,b,u,h,m,f);c.push(e),s.push(t),this.updateDeltas(d,a,n);break}case"exitPool":{let e;e=n?this.createExitPoolProportional(i,I,m,f):this.createExitPool(i,b,u,h,m,f);const{modelRequest:t,encodedCall:a,bptIn:o,tokensOut:r,amountsOut:p}=e;c.push(t),s.push(a),this.updateDeltas(d,[i.address,...r],[o,...p]);break}case"output":p&&(s.push(ar.encodePeekChainedReferenceValue(ar.toChainedReference(this.getOutputRef(u,i.index),!1))),r.push(s.length-1));break;default:return}})),i.push(c)})),{multiRequests:i,calls:s,outputIndexes:r,deltas:d}}createSwap(e,t,a,n,o,i){const s=!e.parent,r=s?e.index:ar.toChainedReference(this.getOutputRef(a,e.index)).toString(),d=t.address,l=[d,e.address],u=n,c={poolId:e.id,kind:In.SwapExactIn,assetIn:e.address,assetOut:d,amount:r,userData:"0x"},y={sender:o,recipient:i,fromInternalBalance:this.receivesFromInternal(e),toInternalBalance:this.receivesFromInternal(t)},b=ar.toChainedReference(this.getOutputRef(a,t.index)),m={request:c,funds:y,limit:u,deadline:p.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReference:b};$r(),$r(JSON.stringify(m));const f=ar.encodeSwap(m),T=s?r:"0";return{modelRequest:Nr.mapSwapRequest(m),encodedCall:f,assets:l,amounts:["output"!==t.exitAction?"0":p.from(n).mul(-1).toString(),T]}}createBatchSwap(e,t,n,o,i,s){const r=!e.parent,d=r?e.index:ar.toChainedReference(this.getOutputRef(n,e.index)).toString(),l=[...t.map((e=>e.address)),e.address],u=[...o];u.push(d);const c=[],y=[];t.forEach(((t,n)=>{const o=t.proportionOfParent.mul(d).div(a).toString(),i={poolId:e.id,assetInIndex:l.length-1,assetOutIndex:n,amount:o,userData:"0x"};c.push(i),y.push({index:n,key:ar.toChainedReference(this.getOutputRef(0,t.index))})}));const b=c.reduce(((e,t)=>e.add(t.amount)),p.from(0)),m=p.from(d).sub(b);c[0].amount=m.add(c[0].amount).toString();const f={sender:i,recipient:s,fromInternalBalance:this.receivesFromInternal(e),toInternalBalance:this.receivesFromInternal(t[0])},T={swapType:In.SwapExactIn,swaps:c,assets:l,funds:f,limits:u,deadline:p.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:y};$r(),$r(JSON.stringify(T));const h=ar.encodeBatchSwap(T),I=Nr.mapBatchSwapRequest(T),_=r?d:"0",g=[...t.map(((e,t)=>"output"!==e.exitAction?"0":p.from(o[t]).mul(-1).toString())),_];return{modelRequest:I,encodedCall:h,assets:l,amounts:g}}createExitPool(e,t,a,o,i,s){const r=t.address,p=!e.parent,d=p?e.index:ar.toChainedReference(this.getOutputRef(a,e.index)).toString(),l=[],u=[];e.children.forEach((e=>{l.push(e.address),u.push(e.address===r?o:"0")})),e.type===Be.ComposableStable&&(l.push(e.address),u.push("0"));const c=new Le(this.wrappedNativeAsset),[y,b]=c.sortTokens(l,u);let m=[];const f=y.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());let T;m=-1===f?y:[...y.slice(0,f),...y.slice(f+1)],T=e.type===Be.Weighted?pe.exitExactBPTInForOneTokenOut(d,m.indexOf(r)):re.exitExactBPTInForOneTokenOut(d,m.indexOf(r));const h=[{index:y.map((e=>e.toLowerCase())).indexOf(r.toLowerCase()),key:ar.toChainedReference(this.getOutputRef(a,t.index))}],I=this.receivesFromInternal(t),_=ar.formatExitPoolInput({poolId:e.id,poolKind:0,sender:i,recipient:s,outputReferences:h,exitPoolRequest:{},assets:y,minAmountsOut:b,userData:T,toInternalBalance:I});$r(),$r(JSON.stringify(_));const g=ar.encodeExitPool(_),P=Nr.mapExitPoolRequest(_),w=b.map((e=>ar.isChainedReference(e)?"0":n.sub(e).toString())),x=ar.isChainedReference(d)?"0":d;return{modelRequest:P,encodedCall:g,bptIn:p?x:n.toString(),tokensOut:"output"!==t.exitAction?[]:y,amountsOut:"output"!==t.exitAction?[]:w}}createExitPoolProportional(e,t,a,o){const i=!e.parent,s=i?e.index:ar.toChainedReference(this.getOutputRef(0,e.index)).toString(),r=e.children.map((e=>e.address)),p=[...t];e.type===Be.ComposableStable&&(r.push(e.address),p.push("0"));const d=new Le(this.wrappedNativeAsset),[l,u]=d.sortTokens(r,p);let c;c=e.type===Be.Weighted?pe.exitExactBPTInForTokensOut(s):e.type===Be.ComposableStable?be.exitExactBPTInForAllTokensOut(s):re.exitExactBPTInForTokensOut(s);const y=e.children.map((e=>({index:l.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase()),key:ar.toChainedReference(this.getOutputRef(0,e.index))})));let b=0;e.type===Be.ComposableStable&&(b=3);const m=e.children.every((e=>this.receivesFromInternal(e))),f=ar.formatExitPoolInput({poolId:e.id,poolKind:b,sender:a,recipient:o,outputReferences:y,exitPoolRequest:{},assets:l,minAmountsOut:u,userData:c,toInternalBalance:m});$r(),$r(JSON.stringify(f));const T=ar.encodeExitPool(f),h=Nr.mapExitPoolRequest(f),I=u.map((e=>ar.isChainedReference(e)?"0":n.sub(e).toString())),_=ar.isChainedReference(s)?"0":s,g=i?_:n.toString(),P=l.filter((t=>e.children.filter((e=>"output"===e.exitAction)).map((e=>e.address)).includes(t))),w=I.filter(((e,t)=>P.includes(l[t])));return{modelRequest:h,encodedCall:T,bptIn:g,tokensOut:P,amountsOut:w}}}class Kr{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapVolume?(null==t?void 0:t.totalSwapVolume)?parseFloat(e.totalSwapVolume)-parseFloat(t.totalSwapVolume):e.createTime&&rr(e.createTime)?parseFloat(e.totalSwapVolume):0:0}}class Jr{constructor(e,t){this.checkCreateInputs=({tokenAddresses:e,tokenRateCacheDurations:t,exemptFromYieldProtocolFeeFlags:a,rateProviders:n,swapFeeEvm:o})=>{if(e.length!==t.length||t.length!==a.length||a.length!==n.length)throw new vn(An.INPUT_LENGTH_MISMATCH);if(BigInt(o)<=BigInt(0)||BigInt(o)>BigInt(1e17))throw new vn(An.INVALID_SWAP_FEE_PERCENTAGE)},this.parseCreateParamsForEncoding=({name:e,symbol:t,tokenAddresses:a,amplificationParameter:n,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p,salt:d})=>{const l=new Le(this.wrappedNativeAsset),[u,c,y,b]=l.sortTokens(a,o,i,s);return[e,t,u,n,c,y,b,r.toString(),p,d||Xt()]},this.encodeCreateFunctionData=e=>Ia.createInterface().encodeFunctionData("create",e),this.checkInitJoinInputs=({poolId:e,poolAddress:t,tokensIn:a,amountsIn:n})=>{if(!e||!t)throw new vn(An.NO_POOL_DATA);if(a.length!==n.length)throw new vn(An.INPUT_LENGTH_MISMATCH)},this.parseParamsForInitJoin=({joiner:e,poolId:t,poolAddress:a,tokensIn:n,amountsIn:o})=>{const i=new Le(this.wrappedNativeAsset),s=[...n,a],r=[...o,"0"],p=[...o,BigInt.asUintN(256,BigInt(-1)).toString()],[d,l,u]=i.sortTokens(s,r,p),c={poolId:t,sender:e,recipient:e,joinPoolRequest:{assets:d,maxAmountsIn:u,userData:be.joinInit(l),fromInternalBalance:!1}};return{attributes:c,params:[c.poolId,c.sender,c.recipient,c.joinPoolRequest]}},this.encodeInitJoinFunctionData=e=>{const t="joinPool";return{functionName:t,data:nn.createInterface().encodeFunctionData(t,e)}},this.getPoolAddressAndIdWithReceipt=async(e,t)=>{var a;const n=Jt({receipt:t,to:(null===(a=this.contracts.composableStablePoolFactory)||void 0===a?void 0:a.address)||"",contractInterface:Ia.createInterface(),logName:"PoolCreated"}).args.pool,o=this.getPoolInterface(),i=new Z(n,o,e);return{poolAddress:n,poolId:await i.getPoolId()}};const{tokens:a}=En(e.chainId);this.wrappedNativeAsset=a.wrappedNativeAsset,this.contracts=t}create({name:e,symbol:t,tokenAddresses:a,amplificationParameter:n,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p,salt:d}){var l;this.checkCreateInputs({rateProviders:o,tokenAddresses:a,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r});const u=this.parseCreateParamsForEncoding({name:e,symbol:t,tokenAddresses:a,amplificationParameter:n,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p,salt:d}),c=this.encodeCreateFunctionData(u);return{to:null===(l=this.contracts.composableStablePoolFactory)||void 0===l?void 0:l.address,data:c}}buildInitJoin({joiner:e,poolId:t,poolAddress:a,tokensIn:n,amountsIn:o}){this.checkInitJoinInputs({tokensIn:n,amountsIn:o,poolId:t,poolAddress:a});const{attributes:i,params:s}=this.parseParamsForInitJoin({joiner:e,poolId:t,poolAddress:a,tokensIn:n,amountsIn:o}),{functionName:r,data:p}=this.encodeInitJoinFunctionData(s);return{to:wn,functionName:r,data:p,attributes:i}}getPoolInterface(){return Ta.createInterface()}}class Xr{constructor(e,t){this.parseCreateParamsForEncoding=({name:e,symbol:t,tokenAddresses:a,normalizedWeights:n,rateProviders:o,swapFeeEvm:i,owner:s,salt:r})=>{const p=new Le(this.wrappedNativeAsset),[d,l,u]=p.sortTokens(a,n,o);return[e,t,d,l,u,i.toString(),s,r||Xt()]},this.encodeCreateFunctionData=e=>pn.createInterface().encodeFunctionData("create",e),this.parseParamsForInitJoin=({joiner:e,poolId:t,tokensIn:a,amountsIn:n})=>{const o=new Le(this.wrappedNativeAsset),[i,s]=o.sortTokens(a,n),r={poolId:t,sender:e,recipient:e,joinPoolRequest:{assets:i,maxAmountsIn:s,userData:pe.joinInit(s),fromInternalBalance:!1}};return{attributes:r,params:[r.poolId,r.sender,r.recipient,r.joinPoolRequest]}},this.encodeInitJoinFunctionData=e=>{const t="joinPool";return{functionName:t,data:nn.createInterface().encodeFunctionData(t,e)}},this.checkInitJoinInputs=({poolId:e,tokensIn:t,amountsIn:a})=>{if(!e)throw new vn(An.NO_POOL_DATA);if(t.length!==a.length)throw new vn(An.INPUT_LENGTH_MISMATCH)};const{tokens:a}=En(e.chainId);this.wrappedNativeAsset=a.wrappedNativeAsset,this.contracts=t}create({name:e,symbol:t,tokenAddresses:a,normalizedWeights:n,rateProviders:o,swapFeeEvm:i,owner:s,salt:r}){var p;this.checkCreateInputs({tokenAddresses:a,normalizedWeights:n,swapFeeEvm:i,rateProviders:o});const d=this.parseCreateParamsForEncoding({name:e,symbol:t,tokenAddresses:a,normalizedWeights:n,rateProviders:o,swapFeeEvm:i,owner:s,salt:r}),l=this.encodeCreateFunctionData(d);return{to:null===(p=this.contracts.weightedPoolFactory)||void 0===p?void 0:p.address,data:l}}checkCreateInputs({tokenAddresses:e,normalizedWeights:t,swapFeeEvm:a,rateProviders:n}){if(e.length!==t.length||t.length!==n.length)throw new vn(An.INPUT_LENGTH_MISMATCH);if(e.length<2)throw new vn(An.BELOW_MIN_TOKENS);if(e.length>8)throw new vn(An.ABOVE_MAX_TOKENS);if(BigInt(a)<=BigInt(0)||BigInt(a)>BigInt(1e17))throw new vn(An.INVALID_SWAP_FEE_PERCENTAGE);if(t.reduce(((e,t)=>et.add(e,BigInt(t))),BigInt(0))!==BigInt(1e18))throw new vn(An.INVALID_WEIGHTS)}buildInitJoin({joiner:e,poolId:t,tokensIn:a,amountsIn:n}){this.checkInitJoinInputs({poolId:t,tokensIn:a,amountsIn:n});const{attributes:o,params:i}=this.parseParamsForInitJoin({joiner:e,poolId:t,tokensIn:a,amountsIn:n}),{functionName:s,data:r}=this.encodeInitJoinFunctionData(i);return{to:wn,functionName:s,data:r,attributes:o}}async getPoolAddressAndIdWithReceipt(e,t){var a;const n=Jt({receipt:t,to:(null===(a=this.contracts.weightedPoolFactory)||void 0===a?void 0:a.address)||"",contractInterface:pn.createInterface(),logName:"PoolCreated"}).args.pool,o=this.getPoolInterface(),i=new Z(n,o,e);return{poolAddress:n,poolId:await i.getPoolId()}}getPoolInterface(){return sn.createInterface()}}var Yr;!function(e){e[e.AAVE_V1=0]="AAVE_V1",e[e.AAVE_V2=1]="AAVE_V2",e[e.AAVE_V3=2]="AAVE_V3",e[e.AMPLEFORTH=3]="AMPLEFORTH",e[e.BEEFY=4]="BEEFY",e[e.EULER=5]="EULER",e[e.GEARBOX=6]="GEARBOX",e[e.IDLE=7]="IDLE",e[e.MORPHO=8]="MORPHO",e[e.RADIANT=9]="RADIANT",e[e.REAPER=10]="REAPER",e[e.SILO=11]="SILO",e[e.STARGATE=12]="STARGATE",e[e.STURDY=13]="STURDY",e[e.TESSERA=14]="TESSERA",e[e.TETU=15]="TETU",e[e.YEARN=16]="YEARN",e[e.MIDAS=17]="MIDAS",e[e.AGAVE=18]="AGAVE"}(Yr||(Yr={}));class jr{constructor(e,t){this.getPoolFactoryInterface=()=>{switch(this.poolType){case Be.AaveLinear:return ta.createInterface();case Be.Linear:case Be.ERC4626Linear:return va.createInterface();case Be.EulerLinear:return Ma.createInterface();case Be.GearboxLinear:return Ua.createInterface();case Be.YearnLinear:return cn.createInterface();default:throw new vn(An.UNSUPPORTED_POOL_TYPE)}},this.getPoolInterface=()=>{switch(this.poolType){case Be.AaveLinear:return Qt.createInterface();case Be.Linear:case Be.ERC4626Linear:return Ea.createInterface();case Be.EulerLinear:return ka.createInterface();case Be.GearboxLinear:return La.createInterface();case Be.YearnLinear:return ln.createInterface();default:throw new vn(An.UNSUPPORTED_POOL_TYPE)}},this.checkCreateInputs=({swapFeeEvm:e,protocolId:t})=>{if(!Yr[t])throw new vn(An.INVALID_PROTOCOL_ID);if(BigInt(e)<=BigInt(0)||BigInt(e)>BigInt(1e17))throw new vn(An.INVALID_SWAP_FEE_PERCENTAGE);this.getFactoryAddress()},this.parseCreateParamsForEncoding=({name:e,symbol:t,mainToken:a,wrappedToken:n,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r,salt:p})=>this.poolType===Be.EulerLinear?[e,t,a,n,o,i,s,r.toString()]:[e,t,a,n,o,i,s,r.toString(),p||Xt()],this.encodeCreateFunctionData=e=>{const t=this.getPoolFactoryInterface();return this.poolType,Be.EulerLinear,t.encodeFunctionData("create",e)},this.getFactoryAddress=()=>{switch(this.poolType){case Be.AaveLinear:if(this.contracts.aaveLinearPoolFactory)return this.contracts.aaveLinearPoolFactory.address;throw new vn(An.UNSUPPORTED_POOL_TYPE);case Be.Linear:case Be.ERC4626Linear:if(this.contracts.erc4626LinearPoolFactory)return this.contracts.erc4626LinearPoolFactory.address;throw new vn(An.UNSUPPORTED_POOL_TYPE);case Be.EulerLinear:if(this.contracts.eulerLinearPoolFactory)return this.contracts.eulerLinearPoolFactory.address;throw new vn(An.UNSUPPORTED_POOL_TYPE);case Be.GearboxLinear:if(this.contracts.gearboxLinearPoolFactory)return this.contracts.gearboxLinearPoolFactory.address;throw new vn(An.UNSUPPORTED_POOL_TYPE);case Be.YearnLinear:if(this.contracts.yearnLinearPoolFactory)return this.contracts.yearnLinearPoolFactory.address;throw new vn(An.UNSUPPORTED_POOL_TYPE);default:throw new vn(An.UNSUPPORTED_POOL_TYPE)}},this.getPoolAddressAndIdWithReceipt=async(e,t)=>{const a=Jt({receipt:t,to:this.getFactoryAddress()||"",contractInterface:this.getPoolFactoryInterface(),logName:"PoolCreated"}).args.pool,n=this.getPoolInterface(),o=new Z(a,n,e);return{poolAddress:a,poolId:await o.getPoolId()}},this.contracts=e,this.poolType=t}buildInitJoin(){throw new vn(An.UNSUPPORTED_POOL_TYPE)}create({name:e,symbol:t,mainToken:a,wrappedToken:n,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r,salt:p}){this.checkCreateInputs({swapFeeEvm:i,protocolId:r});const d=this.parseCreateParamsForEncoding({name:e,symbol:t,mainToken:a,wrappedToken:n,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r,salt:p}),l=this.encodeCreateFunctionData(d);return{to:this.getFactoryAddress(),data:l}}}class zr{constructor(e,t){this.networkConfig=e,this.contracts=t.contracts}of(e){switch(e){case"Weighted":return new Xr(this.networkConfig,this.contracts);case"Investment":case"LiquidityBootstrapping":case"Stable":case"MetaStable":case"StablePhantom":default:throw new vn(An.UNSUPPORTED_POOL_TYPE);case"ComposableStable":return new Jr(this.networkConfig,this.contracts);case"Linear":case"AaveLinear":case"ERC4626Linear":case"EulerLinear":case"GearboxLinear":case"YearnLinear":return new jr(this.contracts,e)}}}class Zr{constructor(e){this.pool=e;const t=(e=>{switch(e){case Be.Weighted:return pe;case Be.Stable:case Be.MetaStable:case Be.StablePhantom:case Be.Element:case Be.Gyro2:case Be.Gyro3:return re;case Be.ComposableStable:return be;default:if(Ht(e))return re}})(e.poolType);if(!t)throw"Pool type not supported";this.encoder=t}buildQueryJoinExactIn({maxAmountsInByToken:e,minimumBPT:t=n}){const a=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e))),i=[...this.pool.tokensList],s=this.pool.tokensList.map((t=>{var a;return null!==(a=e.get(t))&&void 0!==a?a:p.from("0")}));let r;r=a>-1?Wt(s,a):s;const d=this.encoder.joinExactTokensInForBPTOut(r,t);return[this.pool.id,o,o,{assets:i,maxAmountsIn:s,userData:d,fromInternalBalance:!1}]}buildQueryJoinExactOut({maxAmountIn:e,bptOut:t,tokenIn:a}){const n=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));let i=[...this.pool.tokensList];n>-1&&(i=Wt(this.pool.tokensList,n));const s=i.indexOf(a),r=this.encoder.joinTokenInForExactBPTOut(t,s),p=e?this.pool.tokensList.map((t=>t===a?e:"0")):[];return[this.pool.id,o,o,{assets:this.pool.tokensList,maxAmountsIn:p,userData:r,fromInternalBalance:!1}]}buildQueryExitToSingleToken({minAmountOut:e,bptIn:t,tokenOut:a}){const n=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));let i=[...this.pool.tokensList];n>-1&&(i=Wt(this.pool.tokensList,n));const s=i.indexOf(a),r=this.encoder.exitExactBPTInForOneTokenOut(t,s),p=e?this.pool.tokensList.map((t=>t===a?e:"0")):[];return[this.pool.id,o,o,{assets:this.pool.tokensList,minAmountsOut:p,userData:r,toInternalBalance:!1}]}buildQueryExitProportionally({minAmountsOut:e=[],bptIn:t}){if(!this.encoder.exitExactBPTInForTokensOut)throw"Proportional exit not implemented";const a=this.encoder.exitExactBPTInForTokensOut(t);return[this.pool.id,o,o,{assets:this.pool.tokensList,minAmountsOut:e,userData:a,toInternalBalance:!1}]}buildQueryExitExactOut({minAmountsOut:e,maxBptIn:t=i}){const a=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));let n=[...e];a>-1&&(n=Wt(e,a));const s=this.encoder.exitBPTInForExactTokensOut(n,t);return[this.pool.id,o,o,{assets:this.pool.tokensList,minAmountsOut:e,userData:s,toInternalBalance:!1}]}}class Qr{constructor(e){this.liquidityGaugesRepository=e}async relativeWeight(e){const t=await this.liquidityGaugesRepository.findBy("poolId",e);return t?t.relativeWeight:0}async weekly(e){return fr()*await this.relativeWeight(e)}}const ep=(e,t,a)=>{const n=e.tokens.filter((t=>!e.id.toLowerCase().includes(t.address.toLowerCase()))),o=n.findIndex((e=>e.address.toLowerCase()===t.toLowerCase()));if(-1==o)throw new Error("Token not found in pool");const i=n.map((e=>_t(e.balance,e.decimals))),s=p.from(a),r=i.map((e=>e.mul(s).div(i[o])));return{tokens:n.map((e=>e.address)),amounts:r.map((e=>e.toString()))}},tp=(e,t)=>()=>{throw`${t} for poolType ${e} not implemented`};class ap{constructor(e,t,a){this.networkConfig=e,this.repositories=t,this.balancerContracts=a,this.aprService=new gr(this.repositories.pools,this.repositories.tokenPrices,this.repositories.tokenMeta,this.repositories.tokenYields,this.repositories.feeCollector,this.repositories.yesterdaysPools,this.repositories.liquidityGauges,this.repositories.feeDistributor,this.repositories.gyroConfigRepository),this.liquidityService=new go(t.pools,t.tokenPrices),this.simulationService=new Gr(e,this.repositories.poolsForSimulations),this.graphService=new Er(this.repositories.poolsOnChain),this.joinService=new Ur(this.graphService,e,this.simulationService),this.exitService=new Hr(this.graphService,e,this.simulationService),this.feesService=new _r(t.yesterdaysPools),this.volumeService=new Kr(t.yesterdaysPools),this.poolFactory=new zr(e,a),this.impermanentLossService=new ur(t.tokenPrices,t.tokenHistoricalPrices),t.liquidityGauges&&(this.emissionsService=new Qr(t.liquidityGauges)),this.proportionalAmounts=ep}static wrap(e,t){let a,n,o;try{a=_o.from(e.poolType),o={buildJoin:(t,n,o,s)=>a.join.buildJoin({joiner:t,pool:e,tokensIn:n,amountsIn:o,slippage:s,wrappedNativeAsset:i}),calcPriceImpact:async(t,n,o)=>a.priceImpactCalculator.calcPriceImpact(e,t.map(BigInt),BigInt(n),o),buildExitExactBPTIn:(t,n,o,s=!1,r,p=!1)=>{if(a.exit.buildExitExactBPTIn)return a.exit.buildExitExactBPTIn({exiter:t,pool:e,bptIn:n,slippage:o,shouldUnwrapNativeAsset:s,wrappedNativeAsset:i,singleTokenOut:r,toInternalBalance:p});throw"ExitExactBPTIn not supported"},buildExitExactTokensOut:(t,n,o,s,r=!1)=>a.exit.buildExitExactTokensOut({exiter:t,pool:e,tokensOut:n,amountsOut:o,slippage:s,wrappedNativeAsset:i,toInternalBalance:r}),buildRecoveryExit:(t,n,o,i=!1)=>a.exit.buildRecoveryExit({exiter:t,pool:e,bptIn:n,slippage:o,toInternalBalance:i}),calcSpotPrice:(t,n)=>a.spotPriceCalculator.calcPoolSpotPrice(t,n,e),calcProportionalAmounts:(t,a)=>ep(e,t,a)}}catch(t){if("UNSUPPORTED_POOL_TYPE"!=t.code){Re.getInstance().warn(t)}o={buildJoin:tp(e.poolType,"buildJoin"),calcPriceImpact:tp(e.poolType,"calcPriceImpact"),buildExitExactBPTIn:tp(e.poolType,"buildExitExactBPTIn"),buildExitExactTokensOut:tp(e.poolType,"buildExitExactTokensOut"),calcSpotPrice:tp(e.poolType,"calcSpotPrice"),buildRecoveryExit:tp(e.poolType,"buildRecoveryExit")}}try{n=new Zr(e),o={...o,buildQueryJoinExactIn:n.buildQueryJoinExactIn.bind(n),buildQueryJoinExactOut:n.buildQueryJoinExactOut.bind(n),buildQueryExitExactOut:n.buildQueryExitExactOut.bind(n),buildQueryExitToSingleToken:n.buildQueryExitToSingleToken.bind(n),buildQueryExitProportionally:n.buildQueryExitProportionally.bind(n)}}catch(t){o={...o,buildQueryJoinExactIn:tp(e.poolType,"buildQueryJoinExactIn"),buildQueryJoinExactOut:tp(e.poolType,"buildQueryJoinExactOut"),buildQueryExitExactOut:tp(e.poolType,"buildQueryExitExactOut"),buildQueryExitToSingleToken:tp(e.poolType,"buildQueryExitToSingleToken"),buildQueryExitProportionally:tp(e.poolType,"buildQueryExitProportionally")}}const i=t.addresses.tokens.wrappedNativeAsset.toLowerCase(),s=e.tokensList.indexOf(e.address);return{...e,...o,bptIndex:s}}dataSource(){return this.repositories.pools}async apr(e){return this.aprService.apr(e)}async impermanentLoss(e,t){return this.impermanentLossService.calcImpLoss(e,t)}async liquidity(e){return this.liquidityService.getLiquidity(e)}async bptPrice(e){return this.liquidityService.getBptPrice(e)}buildJoin({pool:e,tokensIn:t,amountsIn:a,userAddress:n,slippage:o}){const i=_o.from(e.poolType);if(!i)throw`buildJoin for poolType ${e.poolType} not implemented`;return i.join.buildJoin({joiner:n,pool:e,tokensIn:t,amountsIn:a,slippage:o,wrappedNativeAsset:this.networkConfig.addresses.tokens.wrappedNativeAsset.toLowerCase()})}buildExitExactBPTIn({pool:e,bptAmount:t,userAddress:a,slippage:n,shouldUnwrapNativeAsset:o,singleTokenOut:i}){const s=_o.from(e.poolType);if(!s||!s.exit.buildExitExactBPTIn)throw`buildExit for poolType ${e.poolType} not implemented`;return s.exit.buildExitExactBPTIn({pool:e,exiter:a,bptIn:t,slippage:n,wrappedNativeAsset:this.networkConfig.addresses.tokens.wrappedNativeAsset.toLowerCase(),shouldUnwrapNativeAsset:null!=o&&o,singleTokenOut:null!=i?i:void 0,toInternalBalance:!1})}buildRecoveryExit({pool:e,bptAmount:t,userAddress:a,slippage:n,toInternalBalance:o}){const i=_o.from(e.poolType);if(!i||!i.exit.buildRecoveryExit)throw`buildRecoveryExit for poolType ${e.poolType} not implemented`;return i.exit.buildRecoveryExit({exiter:a,pool:e,bptIn:t,slippage:n,toInternalBalance:!!o})}async generalisedJoin(e,t,a,n,o,i,s,r){return this.joinService.joinPool(e,t,a,n,o,i,s,r)}async generalisedExit(e,t,a,n,o,i,s,r){return this.exitService.buildExitCall(e,t,a,n,o,i,s,r)}calcPriceImpact({pool:e,tokenAmounts:t,bptAmount:a,isJoin:n}){return _o.from(e.poolType).priceImpactCalculator.calcPriceImpact(e,t.map(BigInt),BigInt(a),n)}async getExitInfo(e,t,a,n){return this.exitService.getExitInfo(e,t,a,n)}async fees(e){return this.feesService.last24h(e)}async volume(e){return this.volumeService.last24h(e)}async find(e){const t=await this.dataSource().find(e);if(t)return ap.wrap(t,this.networkConfig)}async findBy(e,t){if("id"==e)return this.find(t);if("address"==e){const e=await this.dataSource().findBy("address",t);if(!e)return;return ap.wrap(e,this.networkConfig)}throw`search by ${e} not implemented`}async all(){const e=await this.dataSource().all();return e?e.map((e=>ap.wrap(e,this.networkConfig))).filter((e=>e)):[]}async where(e){const t=await this.dataSource().where(e);if(!t)return[];return t.map((e=>ap.wrap(e,this.networkConfig))).filter((e=>e))}}const np=new ft("strings/5.7.0");var op,ip;function sp(e,t,a,n,o){if(e===ip.BAD_PREFIX||e===ip.UNEXPECTED_CONTINUE){let e=0;for(let n=t+1;n<a.length&&a[n]>>6==2;n++)e++;return e}return e===ip.OVERRUN?a.length-t-1:0}function rp(e,t=op.current){t!=op.current&&(np.checkNormalize(),e=e.normalize(t));let a=[];for(let t=0;t<e.length;t++){const n=e.charCodeAt(t);if(n<128)a.push(n);else if(n<2048)a.push(n>>6|192),a.push(63&n|128);else if(55296==(64512&n)){t++;const o=e.charCodeAt(t);if(t>=e.length||56320!=(64512&o))throw new Error("invalid utf-8 string");const i=65536+((1023&n)<<10)+(1023&o);a.push(i>>18|240),a.push(i>>12&63|128),a.push(i>>6&63|128),a.push(63&i|128)}else a.push(n>>12|224),a.push(n>>6&63|128),a.push(63&n|128)}return m(a)}function pp(e){const t=rp(e);if(t.length>31)throw new Error("bytes32 string must be less than 32 bytes");return f(T([t,r]).slice(0,32))}!function(e){e.current="",e.NFC="NFC",e.NFD="NFD",e.NFKC="NFKC",e.NFKD="NFKD"}(op||(op={})),function(e){e.UNEXPECTED_CONTINUE="unexpected continuation byte",e.BAD_PREFIX="bad codepoint prefix",e.OVERRUN="string overrun",e.MISSING_CONTINUE="missing continuation byte",e.OUT_OF_RANGE="out of UTF-8 range",e.UTF16_SURROGATE="UTF-16 surrogate",e.OVERLONG="overlong representation"}(ip||(ip={})),Object.freeze({error:function(e,t,a,n,o){return np.throwArgumentError(`invalid codepoint at offset ${t}; ${e}`,"bytes",a)},ignore:sp,replace:function(e,t,a,n,o){return e===ip.OVERLONG?(n.push(o),0):(n.push(65533),sp(e,t,a))}});var dp,lp="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},up={exports:{}};dp=up,function(){var e="input is invalid type",t="object"==typeof window,a=t?window:{};a.JS_SHA3_NO_WINDOW&&(t=!1);var n=!t&&"object"==typeof self;!a.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?a=lp:n&&(a=self);var o=!a.JS_SHA3_NO_COMMON_JS&&dp.exports,i=!a.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,s="0123456789abcdef".split(""),r=[4,1024,262144,67108864],p=[0,8,16,24],d=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],l=[224,256,384,512],u=[128,256],c=["hex","buffer","arrayBuffer","array","digest"],y={128:168,256:136};!a.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!i||!a.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var b=function(e,t,a){return function(n){return new k(e,t,e).update(n)[a]()}},m=function(e,t,a){return function(n,o){return new k(e,t,o).update(n)[a]()}},f=function(e,t,a){return function(t,n,o,i){return g["cshake"+e].update(t,n,o,i)[a]()}},T=function(e,t,a){return function(t,n,o,i){return g["kmac"+e].update(t,n,o,i)[a]()}},h=function(e,t,a,n){for(var o=0;o<c.length;++o){var i=c[o];e[i]=t(a,n,i)}return e},I=function(e,t){var a=b(e,t,"hex");return a.create=function(){return new k(e,t,e)},a.update=function(e){return a.create().update(e)},h(a,b,e,t)},_=[{name:"keccak",padding:[1,256,65536,16777216],bits:l,createMethod:I},{name:"sha3",padding:[6,1536,393216,100663296],bits:l,createMethod:I},{name:"shake",padding:[31,7936,2031616,520093696],bits:u,createMethod:function(e,t){var a=m(e,t,"hex");return a.create=function(a){return new k(e,t,a)},a.update=function(e,t){return a.create(t).update(e)},h(a,m,e,t)}},{name:"cshake",padding:r,bits:u,createMethod:function(e,t){var a=y[e],n=f(e,0,"hex");return n.create=function(n,o,i){return o||i?new k(e,t,n).bytepad([o,i],a):g["shake"+e].create(n)},n.update=function(e,t,a,o){return n.create(t,a,o).update(e)},h(n,f,e,t)}},{name:"kmac",padding:r,bits:u,createMethod:function(e,t){var a=y[e],n=T(e,0,"hex");return n.create=function(n,o,i){return new O(e,t,o).bytepad(["KMAC",i],a).bytepad([n],a)},n.update=function(e,t,a,o){return n.create(e,a,o).update(t)},h(n,T,e,t)}}],g={},P=[],w=0;w<_.length;++w)for(var x=_[w],E=x.bits,A=0;A<E.length;++A){var v=x.name+"_"+E[A];if(P.push(v),g[v]=x.createMethod(E[A],x.padding),"sha3"!==x.name){var S=x.name+E[A];P.push(S),g[S]=g[v]}}function k(e,t,a){this.blocks=[],this.s=[],this.padding=t,this.outputBits=a,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=a>>5,this.extraBytes=(31&a)>>3;for(var n=0;n<50;++n)this.s[n]=0}function O(e,t,a){k.call(this,e,t,a)}k.prototype.update=function(t){if(this.finalized)throw new Error("finalize already called");var a,n=typeof t;if("string"!==n){if("object"!==n)throw new Error(e);if(null===t)throw new Error(e);if(i&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||i&&ArrayBuffer.isView(t)))throw new Error(e);a=!0}for(var o,s,r=this.blocks,d=this.byteCount,l=t.length,u=this.blockCount,c=0,y=this.s;c<l;){if(this.reset)for(this.reset=!1,r[0]=this.block,o=1;o<u+1;++o)r[o]=0;if(a)for(o=this.start;c<l&&o<d;++c)r[o>>2]|=t[c]<<p[3&o++];else for(o=this.start;c<l&&o<d;++c)(s=t.charCodeAt(c))<128?r[o>>2]|=s<<p[3&o++]:s<2048?(r[o>>2]|=(192|s>>6)<<p[3&o++],r[o>>2]|=(128|63&s)<<p[3&o++]):s<55296||s>=57344?(r[o>>2]|=(224|s>>12)<<p[3&o++],r[o>>2]|=(128|s>>6&63)<<p[3&o++],r[o>>2]|=(128|63&s)<<p[3&o++]):(s=65536+((1023&s)<<10|1023&t.charCodeAt(++c)),r[o>>2]|=(240|s>>18)<<p[3&o++],r[o>>2]|=(128|s>>12&63)<<p[3&o++],r[o>>2]|=(128|s>>6&63)<<p[3&o++],r[o>>2]|=(128|63&s)<<p[3&o++]);if(this.lastByteIndex=o,o>=d){for(this.start=o-d,this.block=r[u],o=0;o<u;++o)y[o]^=r[o];M(y),this.reset=!0}else this.start=o}return this},k.prototype.encode=function(e,t){var a=255&e,n=1,o=[a];for(a=255&(e>>=8);a>0;)o.unshift(a),a=255&(e>>=8),++n;return t?o.push(n):o.unshift(n),this.update(o),o.length},k.prototype.encodeString=function(t){var a,n=typeof t;if("string"!==n){if("object"!==n)throw new Error(e);if(null===t)throw new Error(e);if(i&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||i&&ArrayBuffer.isView(t)))throw new Error(e);a=!0}var o=0,s=t.length;if(a)o=s;else for(var r=0;r<t.length;++r){var p=t.charCodeAt(r);p<128?o+=1:p<2048?o+=2:p<55296||p>=57344?o+=3:(p=65536+((1023&p)<<10|1023&t.charCodeAt(++r)),o+=4)}return o+=this.encode(8*o),this.update(t),o},k.prototype.bytepad=function(e,t){for(var a=this.encode(t),n=0;n<e.length;++n)a+=this.encodeString(e[n]);var o=t-a%t,i=[];return i.length=o,this.update(i),this},k.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,a=this.blockCount,n=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[a],t=1;t<a+1;++t)e[t]=0;for(e[a-1]|=2147483648,t=0;t<a;++t)n[t]^=e[t];M(n)}},k.prototype.toString=k.prototype.hex=function(){this.finalize();for(var e,t=this.blockCount,a=this.s,n=this.outputBlocks,o=this.extraBytes,i=0,r=0,p="";r<n;){for(i=0;i<t&&r<n;++i,++r)e=a[i],p+=s[e>>4&15]+s[15&e]+s[e>>12&15]+s[e>>8&15]+s[e>>20&15]+s[e>>16&15]+s[e>>28&15]+s[e>>24&15];r%t==0&&(M(a),i=0)}return o&&(e=a[i],p+=s[e>>4&15]+s[15&e],o>1&&(p+=s[e>>12&15]+s[e>>8&15]),o>2&&(p+=s[e>>20&15]+s[e>>16&15])),p},k.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,a=this.s,n=this.outputBlocks,o=this.extraBytes,i=0,s=0,r=this.outputBits>>3;e=o?new ArrayBuffer(n+1<<2):new ArrayBuffer(r);for(var p=new Uint32Array(e);s<n;){for(i=0;i<t&&s<n;++i,++s)p[s]=a[i];s%t==0&&M(a)}return o&&(p[i]=a[i],e=e.slice(0,r)),e},k.prototype.buffer=k.prototype.arrayBuffer,k.prototype.digest=k.prototype.array=function(){this.finalize();for(var e,t,a=this.blockCount,n=this.s,o=this.outputBlocks,i=this.extraBytes,s=0,r=0,p=[];r<o;){for(s=0;s<a&&r<o;++s,++r)e=r<<2,t=n[s],p[e]=255&t,p[e+1]=t>>8&255,p[e+2]=t>>16&255,p[e+3]=t>>24&255;r%a==0&&M(n)}return i&&(e=r<<2,t=n[s],p[e]=255&t,i>1&&(p[e+1]=t>>8&255),i>2&&(p[e+2]=t>>16&255)),p},O.prototype=new k,O.prototype.finalize=function(){return this.encode(this.outputBits,!0),k.prototype.finalize.call(this)};var M=function(e){var t,a,n,o,i,s,r,p,l,u,c,y,b,m,f,T,h,I,_,g,P,w,x,E,A,v,S,k,O,M,C,F,B,R,N,L,D,U,V,q,G,W,$,H,K,J,X,Y,j,z,Z,Q,ee,te,ae,ne,oe,ie,se,re,pe,de,le;for(n=0;n<48;n+=2)o=e[0]^e[10]^e[20]^e[30]^e[40],i=e[1]^e[11]^e[21]^e[31]^e[41],s=e[2]^e[12]^e[22]^e[32]^e[42],r=e[3]^e[13]^e[23]^e[33]^e[43],p=e[4]^e[14]^e[24]^e[34]^e[44],l=e[5]^e[15]^e[25]^e[35]^e[45],u=e[6]^e[16]^e[26]^e[36]^e[46],c=e[7]^e[17]^e[27]^e[37]^e[47],t=(y=e[8]^e[18]^e[28]^e[38]^e[48])^(s<<1|r>>>31),a=(b=e[9]^e[19]^e[29]^e[39]^e[49])^(r<<1|s>>>31),e[0]^=t,e[1]^=a,e[10]^=t,e[11]^=a,e[20]^=t,e[21]^=a,e[30]^=t,e[31]^=a,e[40]^=t,e[41]^=a,t=o^(p<<1|l>>>31),a=i^(l<<1|p>>>31),e[2]^=t,e[3]^=a,e[12]^=t,e[13]^=a,e[22]^=t,e[23]^=a,e[32]^=t,e[33]^=a,e[42]^=t,e[43]^=a,t=s^(u<<1|c>>>31),a=r^(c<<1|u>>>31),e[4]^=t,e[5]^=a,e[14]^=t,e[15]^=a,e[24]^=t,e[25]^=a,e[34]^=t,e[35]^=a,e[44]^=t,e[45]^=a,t=p^(y<<1|b>>>31),a=l^(b<<1|y>>>31),e[6]^=t,e[7]^=a,e[16]^=t,e[17]^=a,e[26]^=t,e[27]^=a,e[36]^=t,e[37]^=a,e[46]^=t,e[47]^=a,t=u^(o<<1|i>>>31),a=c^(i<<1|o>>>31),e[8]^=t,e[9]^=a,e[18]^=t,e[19]^=a,e[28]^=t,e[29]^=a,e[38]^=t,e[39]^=a,e[48]^=t,e[49]^=a,m=e[0],f=e[1],J=e[11]<<4|e[10]>>>28,X=e[10]<<4|e[11]>>>28,k=e[20]<<3|e[21]>>>29,O=e[21]<<3|e[20]>>>29,re=e[31]<<9|e[30]>>>23,pe=e[30]<<9|e[31]>>>23,W=e[40]<<18|e[41]>>>14,$=e[41]<<18|e[40]>>>14,R=e[2]<<1|e[3]>>>31,N=e[3]<<1|e[2]>>>31,T=e[13]<<12|e[12]>>>20,h=e[12]<<12|e[13]>>>20,Y=e[22]<<10|e[23]>>>22,j=e[23]<<10|e[22]>>>22,M=e[33]<<13|e[32]>>>19,C=e[32]<<13|e[33]>>>19,de=e[42]<<2|e[43]>>>30,le=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,ae=e[4]<<30|e[5]>>>2,L=e[14]<<6|e[15]>>>26,D=e[15]<<6|e[14]>>>26,I=e[25]<<11|e[24]>>>21,_=e[24]<<11|e[25]>>>21,z=e[34]<<15|e[35]>>>17,Z=e[35]<<15|e[34]>>>17,F=e[45]<<29|e[44]>>>3,B=e[44]<<29|e[45]>>>3,E=e[6]<<28|e[7]>>>4,A=e[7]<<28|e[6]>>>4,ne=e[17]<<23|e[16]>>>9,oe=e[16]<<23|e[17]>>>9,U=e[26]<<25|e[27]>>>7,V=e[27]<<25|e[26]>>>7,g=e[36]<<21|e[37]>>>11,P=e[37]<<21|e[36]>>>11,Q=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,H=e[8]<<27|e[9]>>>5,K=e[9]<<27|e[8]>>>5,v=e[18]<<20|e[19]>>>12,S=e[19]<<20|e[18]>>>12,ie=e[29]<<7|e[28]>>>25,se=e[28]<<7|e[29]>>>25,q=e[38]<<8|e[39]>>>24,G=e[39]<<8|e[38]>>>24,w=e[48]<<14|e[49]>>>18,x=e[49]<<14|e[48]>>>18,e[0]=m^~T&I,e[1]=f^~h&_,e[10]=E^~v&k,e[11]=A^~S&O,e[20]=R^~L&U,e[21]=N^~D&V,e[30]=H^~J&Y,e[31]=K^~X&j,e[40]=te^~ne&ie,e[41]=ae^~oe&se,e[2]=T^~I&g,e[3]=h^~_&P,e[12]=v^~k&M,e[13]=S^~O&C,e[22]=L^~U&q,e[23]=D^~V&G,e[32]=J^~Y&z,e[33]=X^~j&Z,e[42]=ne^~ie&re,e[43]=oe^~se&pe,e[4]=I^~g&w,e[5]=_^~P&x,e[14]=k^~M&F,e[15]=O^~C&B,e[24]=U^~q&W,e[25]=V^~G&$,e[34]=Y^~z&Q,e[35]=j^~Z&ee,e[44]=ie^~re&de,e[45]=se^~pe&le,e[6]=g^~w&m,e[7]=P^~x&f,e[16]=M^~F&E,e[17]=C^~B&A,e[26]=q^~W&R,e[27]=G^~$&N,e[36]=z^~Q&H,e[37]=Z^~ee&K,e[46]=re^~de&te,e[47]=pe^~le&ae,e[8]=w^~m&T,e[9]=x^~f&h,e[18]=F^~E&v,e[19]=B^~A&S,e[28]=W^~R&L,e[29]=$^~N&D,e[38]=Q^~H&J,e[39]=ee^~K&X,e[48]=de^~te&ne,e[49]=le^~ae&oe,e[0]^=d[n],e[1]^=d[n+1]};if(o)dp.exports=g;else for(w=0;w<P.length;++w)a[P[w]]=g[P[w]]}();var cp=up.exports;const yp=new RegExp("^bytes([0-9]+)$"),bp=new RegExp("^(u?int)([0-9]*)$"),mp=new RegExp("^(.*)\\[([0-9]*)\\]$"),fp=new ft("solidity/5.7.0");function Tp(e,t,a){switch(e){case"address":return a?h(t,32):m(t);case"string":return rp(t);case"bytes":return m(t);case"bool":return t=t?"0x01":"0x00",a?h(t,32):m(t)}let n=e.match(bp);if(n){let o=parseInt(n[2]||"256");return(n[2]&&String(o)!==n[2]||o%8!=0||0===o||o>256)&&fp.throwArgumentError("invalid number type","type",e),a&&(o=256),t=p.from(t).toTwos(o),h(t,o/8)}if(n=e.match(yp),n){const o=parseInt(n[1]);return(String(o)!==n[1]||0===o||o>32)&&fp.throwArgumentError("invalid bytes type","type",e),m(t).byteLength!==o&&fp.throwArgumentError(`invalid value for ${e}`,"value",t),a?m((t+"0000000000000000000000000000000000000000000000000000000000000000").substring(0,66)):t}if(n=e.match(mp),n&&Array.isArray(t)){const a=n[1];parseInt(n[2]||String(t.length))!=t.length&&fp.throwArgumentError(`invalid array length for ${e}`,"value",t);const o=[];return t.forEach((function(e){o.push(Tp(a,e,!0))})),T(o)}return fp.throwArgumentError("invalid type","type",e)}function hp(e,t){e.length!=t.length&&fp.throwArgumentError("wrong number of values; expected ${ types.length }","values",t);const a=[];return e.forEach((function(e,n){a.push(Tp(e,t[n]))})),f(T(a))}function Ip(e,t){return a=hp(e,t),"0x"+cp.keccak_256(m(a));var a}const _p=pp("PROTOCOL_SWAP_FEE_PERC"),gp=pp("E-CLP"),Pp=Ip(["bytes"],[e.encode(["bytes32","bytes32"],[_p,gp])]);class wp{constructor(e,t,a){this.gyroConfigAddress=e,this.multicall=t,this.gyroConfigInterface=qa.createInterface(),this.gyroConfig=qa.connect(e,a)}async getGyroProtocolFee(t){let a;const n=Ip(["bytes"],[e.encode(["bytes32","uint256"],[_p,t])]),o=[{target:this.gyroConfigAddress,callData:this.gyroConfigInterface.encodeFunctionData("hasKey",[n])},{target:this.gyroConfigAddress,callData:this.gyroConfigInterface.encodeFunctionData("hasKey",[Pp])},{target:this.gyroConfigAddress,callData:this.gyroConfigInterface.encodeFunctionData("hasKey",[_p])}],[,[i,s,r]]=await this.multicall.callStatic.aggregate(o),d=p.from(i).eq(1),u=p.from(s).eq(1),c=p.from(r).eq(1);return a=d?parseFloat(l(await this.gyroConfig.getUint(n),18)):u?parseFloat(l(await this.gyroConfig.getUint(Pp),18)):c?parseFloat(l(await this.gyroConfig.getUint(_p),18)):0,a}}const xp=new t(["function gauge_relative_weight(address gauge, uint timestamp) view returns (uint)"]),Ep=new t(["function gauge_relative_weight(address gauge) view returns (uint)"]);class Ap{constructor(e,t,a){this.multicall=e,this.gaugeControllerAddress=t,this.gaugeControllerCheckpointerAddress=a}async getRelativeWeights(e,t){const a=e.map((e=>this.gaugeControllerCheckpointerAddress&&!t?{target:this.gaugeControllerCheckpointerAddress,callData:Ep.encodeFunctionData("gauge_relative_weight",[u(e)])}:{target:this.gaugeControllerAddress,callData:xp.encodeFunctionData("gauge_relative_weight",[u(e),t||Math.floor(Date.now()/1e3)])})),[,n]=await this.multicall.callStatic.aggregate(a);return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(It(n[a],18))),e)),{})}}class vp{async get(e){const t=await this.query(e);return(null==t?void 0:t.length)>0?t[0]:void 0}async find(e){return this.get({where:{id:e}})}async findBy(e,t){return this.get({where:{[String(e)]:t}})}async findAllBy(e,t,a=1e3,n=0){const o={where:{[String(e)]:t},first:a,skip:n};return this.query(o)}}class Sp extends vp{constructor(e,t,a){super(),this.chainId=t,this.blockHeight=a,this.client=Is(e)}}class kp extends vp{constructor(e,t,a){super(),this.chainId=t,this.blockHeight=a,this.client=_s(e)}}class Op extends kp{async query(e){e.orderBy||(e.orderBy=Xi.balance),e.orderDirection||(e.orderDirection=ts.desc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{gaugeShares:t}=await this.client.GaugeShares(e);return t.map(this.mapType)}mapType(e){var t;return{id:e.id,balance:e.balance,userAddress:null===(t=e.user)||void 0===t?void 0:t.id,gauge:{id:e.gauge.id,poolId:e.gauge.poolId||void 0,isKilled:e.gauge.isKilled,totalSupply:e.gauge.totalSupply}}}async findByUser(e,t,a){return this.findAllBy(Oe.UserAddress,e,t,a)}async findByGauge(e,t,a){return this.findAllBy(Oe.GaugeId,e,t,a)}}const Mp=new t(["function totalSupply() view returns (uint)","function working_supply() view returns (uint)","function reward_count() view returns (uint)","function reward_tokens(uint rewardIndex) view returns (address)","function reward_data(address rewardToken) view returns (tuple(address token, address distributor, uint period_finish, uint rate, uint last_update, uint integral) data)"]),Cp=new t(["function inflation_rate(uint currentWeekTimestamp) view returns (uint)"]);class Fp{constructor(e,t){this.multicall=e,this.chainId=t}async getTotalSupplies(e){const t=e.map((e=>({target:e,callData:Mp.encodeFunctionData("totalSupply",[])}))),[,a]=await this.multicall.callStatic.aggregate(t),n=a.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(It(n[a],18))),e)),{})}async getWorkingSupplies(e){const t=e.map((e=>({target:e,callData:Mp.encodeFunctionData("working_supply",[])}))),[,a]=await this.multicall.callStatic.aggregate(t),n=a.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(It(n[a],18))),e)),{})}async getInflationRates(e){const t=Math.floor(Date.now()/1e3/604800),a=e.map((e=>({target:e,callData:Cp.encodeFunctionData("inflation_rate",[t])}))),[,n]=await this.multicall.callStatic.aggregate(a),o=n.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(It(o[a],18))),e)),{})}async getRewardCounts(e){let t;if(1==this.chainId){const a=e.map((e=>({target:e,callData:Mp.encodeFunctionData("reward_count",[])}))),[,n]=await this.multicall.callStatic.aggregate(a),o=n.map((e=>"0x"==e?"0x0":e));t=e.reduce(((e,t,a)=>(e[t]||(e[t]=parseInt(o[a])),e)),{})}else t=e.reduce(((e,t)=>(e[t]||(e[t]=1),e)),{});return t}async getRewardTokens(e,t){const a=t||await this.getRewardCounts(e),n=e.filter((e=>a[e]>0)),o=[0],i=n.map(((e,t)=>{const n=[];for(let t=0;t<a[e];t++)n.push({target:e,callData:Mp.encodeFunctionData("reward_tokens",[t])});return o[t+1]=o[t]+a[e],n})).flat(),[,s]=await this.multicall.callStatic.aggregate(i);return n.reduce(((e,t,a)=>{const n=o[a],i=o[a+1],r=[];for(let e=n;e<i;e++)r.push(Mp.decodeFunctionResult("reward_tokens",s[e])[0]);return e[t]||(e[t]=r),e}),{})}async getRewardData(e,t){const a=t||await this.getRewardTokens(e),n=[0],o=Object.keys(a).map(((e,t)=>{const o=[];for(let t=0;t<a[e].length;t++)o.push({target:e,callData:Mp.encodeFunctionData("reward_data",[a[e][t]])});return n[t+1]=n[t]+a[e].length,o})).flat(),[,i]=await this.multicall.callStatic.aggregate(o),s=i.map((e=>Mp.decodeFunctionResult("reward_data",e)[0]));return Object.keys(a).reduce(((e,t,o)=>{const i=n[o],r=a[t].reduce(((e,t,a)=>(e[t]||(e[t]=s[i+a]),e)),{});return e[t]||(e[t]=r),e}),{})}}class Bp{constructor(e){this.gauges=[],this.client=_s(e)}async fetch(){const e=(await this.client.Pools({first:1e3,where:{preferentialGauge_not:null}})).pools.map((e=>e.preferentialGauge));return this.gauges=e,this.gauges}async find(e){return 0==this.gauges.length&&await this.fetch(),this.gauges.find((t=>t.id==e))}async findBy(e,t){if(0==this.gauges.length&&await this.fetch(),"id"==e)return this.find(t);if("poolId"==e)return this.gauges.find((e=>e.poolId==t));if("poolAddress"==e)return this.gauges.find((e=>e.poolAddress==t));throw`search by ${e} not implemented`}}class Rp{constructor(e,t,a,n,o){this.chainId=n,this.workingSupplies={},this.relativeWeights={},this.inflationRates={},this.rewardData={},a&&(this.gaugeController=new Ap(t,a,o)),this.multicall=new Fp(t,n),this.subgraph=new Bp(e)}async fetch(){const e=await this.subgraph.fetch(),t=e.map((e=>e.id));if(1==this.chainId)this.workingSupplies=await this.multicall.getWorkingSupplies(t);else{const t=["0x3b8ca519122cdd8efb272b0d3085453404b25bd0","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2","0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647","0x809b79b53f18e9bc08a961ed4678b901ac93213a"],a=e.filter((e=>!t.includes(e.factory.id.toLowerCase()))).map((e=>e.id));a.length>0&&(this.inflationRates=await this.multicall.getInflationRates(a),this.workingSupplies=await this.multicall.getWorkingSupplies(a))}return this.gaugeController&&(this.relativeWeights=await this.gaugeController.getRelativeWeights(t)),this.rewardData=e.reduce(((e,t)=>{var a;return e[a=t.id]||(e[a]=t.tokens?Object.fromEntries(t.tokens.map((e=>[e.id.split("-")[0],{distributor:"",last_update:p.from(0),integral:p.from(0),token:e.id.split("-")[0],decimals:e.decimals,rate:_t(e.rate||"0",e.decimals),period_finish:p.from(e.periodFinish||"0")}]))):{}),e}),{}),e.map(this.compose.bind(this))}async find(e){return this.gauges||(this.gauges=this.fetch()),(await this.gauges).find((t=>t.id==e))}async findBy(e,t){let a;if(this.gauges||(this.gauges=this.fetch()),"id"==e)return this.find(t);if("address"==e)return this.find(t);if("poolId"==e)a=(await this.gauges).find((e=>e.poolId==t));else{if("poolAddress"!=e)throw`search by ${e} not implemented`;a=(await this.gauges).find((e=>e.poolAddress==t))}return a}compose(e){return{id:e.id,address:e.id,name:e.symbol,poolId:e.poolId,poolAddress:e.poolAddress,totalSupply:parseFloat(e.totalSupply),workingSupply:this.workingSupplies[e.id],relativeWeight:this.relativeWeights[e.id],rewardTokens:this.rewardData[e.id],balInflationRate:this.inflationRates[e.id]}}}class Np{constructor(e,t){this.url=e,this.apiKey=t}async get(e){try{const t=this.toPayload(e),{data:a}=await z.post(this.url,t,{headers:{"x-api-key":this.apiKey}});if(a.errors)throw new Error(a.errors.map((e=>e.message)).join(","));return a.data}catch(e){throw console.error(e),e}return[]}toPayload(e){return JSON.stringify({query:Q({query:e})})}}function Lp(e){return new Promise((t=>setTimeout(t,e)))}class Dp{constructor(e){var t,a;this.pools=[],this.skip=0,this.hasFetched=!1,this.isFetching=!1,this.client=new Np(e.url,e.apiKey);this.query={args:Object.assign({},(null===(t=e.query)||void 0===t?void 0:t.args)||{chainId:1,orderBy:"totalLiquidity",orderDirection:"desc",where:{swapEnabled:{eq:!0},totalShares:{gt:.05}}}),attrs:Object.assign({},(null===(a=e.query)||void 0===a?void 0:a.attrs)||{id:!0,address:!0})},delete this.query.args.skip}fetchFromCache(e,t){return this.pools.slice(t,e+t)}async fetch(e){const t=(null==e?void 0:e.first)||10,a=(null==e?void 0:e.skip)||0;return this.hasFetched||this.fetchAll(e),await this.awaitEnoughPoolsFetched(t,a),this.fetchFromCache(t,a)}async fetchAll(e){this.isFetching=!0,this.hasFetched=!0,this.nextToken&&(this.query.args.nextToken=this.nextToken),this.query.args.first=1e3;const t=new zt(this.query.args).format(new Yt),a=this.query.attrs;a.nextToken=!0;const n={pools:{__args:t,...a}},o=(await this.client.get(n)).pools;if(this.nextToken=o.nextToken,this.pools=this.pools.concat(o.pools.map(this.format)),this.nextToken)return await this.fetchAll(e);this.isFetching=!1}async awaitEnoughPoolsFetched(e,t){for(let a=0;a<1e3;a++){if(this.pools.length>e+t)return;if(!this.isFetching)return;await Lp(10)}}async find(e){return 0==this.pools.length&&await this.fetch(),this.findBy("id",e)}async findBy(e,t){0==this.pools.length&&await this.fetch();const a=this.pools.find((a=>a[e]==t));if(a)return this.format(a)}format(e){var t,a,n,o;if(null===(t=e.apr)||void 0===t?void 0:t.rewardAprs.breakdown){const t=JSON.parse(null===(a=e.apr)||void 0===a?void 0:a.rewardAprs.breakdown);e.apr.rewardAprs.breakdown=t}if(null===(n=e.apr)||void 0===n?void 0:n.tokenAprs.breakdown){const t=JSON.parse(null===(o=e.apr)||void 0===o?void 0:o.tokenAprs.breakdown);e.apr.tokenAprs.breakdown=t}return e}}class Up{constructor(e,t={}){this.providers=e,this.currentProviderIdx=0,this.timeout=t.timeout||1e4}async fetch(e){return this.fallbackQuery("fetch",[e])}get currentProvider(){if(this.providers.length&&!(this.currentProviderIdx>=this.providers.length))return this.providers[this.currentProviderIdx]}async find(e){return this.fallbackQuery("find",[e])}async findBy(e,t){return this.fallbackQuery("findBy",[e,t])}async fallbackQuery(e,t){if(this.currentProviderIdx>=this.providers.length)throw new Error("No working providers found");let a;try{const n=this.providers[this.currentProviderIdx];a=await Promise.race([n[e].apply(n,t),new Promise(((e,t)=>setTimeout((()=>t(new Error("timeout"))),this.timeout)))])}catch(n){const o=n.message;if("timeout"===o){Re.getInstance().warn("Provider "+this.currentProviderIdx+" timed out, falling back to next provider")}else{const e=Re.getInstance();e.warn(`Provider ${this.currentProviderIdx} failed with error, falling back to next provider.`),e.warn(o)}this.currentProviderIdx++,a=await this.fallbackQuery.call(this,e,t)}return a}}class Vp{constructor(e){this.pools=e}async find(e){return this.pools.find((t=>t.id.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.pools.find((a=>a[e]===t))}async all(){return this.pools}async where(e){return(await this.all()).filter(e)}}const qp=(e,t)=>{var a,n,o,i,s,r,p,d,l,u,c;return{id:e.id,name:e.name||"",address:e.address,chainId:t,poolType:e.poolType,poolTypeVersion:e.poolTypeVersion||1,swapFee:e.swapFee,swapEnabled:e.swapEnabled,protocolYieldFeeCache:e.protocolYieldFeeCache||"0.5",protocolSwapFeeCache:e.protocolSwapFeeCache||"0.5",amp:null!==(a=e.amp)&&void 0!==a?a:void 0,owner:null!==(n=e.owner)&&void 0!==n?n:void 0,factory:null!==(o=e.factory)&&void 0!==o?o:void 0,symbol:null!==(i=e.symbol)&&void 0!==i?i:void 0,tokens:(e.tokens||[]).map(Gp),tokensList:e.tokensList,tokenAddresses:(e.tokens||[]).map((e=>e.address)),totalLiquidity:e.totalLiquidity,totalShares:e.totalShares,totalSwapFee:e.totalSwapFee,totalSwapVolume:e.totalSwapVolume,priceRateProviders:null!==(s=e.priceRateProviders)&&void 0!==s?s:void 0,createTime:e.createTime,mainIndex:null!==(r=e.mainIndex)&&void 0!==r?r:void 0,wrappedIndex:null!==(p=e.wrappedIndex)&&void 0!==p?p:void 0,totalWeight:e.totalWeight||"1",lowerTarget:null!==(d=e.lowerTarget)&&void 0!==d?d:"0",upperTarget:null!==(l=e.upperTarget)&&void 0!==l?l:"0",isInRecoveryMode:null!==(u=e.isInRecoveryMode)&&void 0!==u&&u,isPaused:null!==(c=e.isPaused)&&void 0!==c&&c}},Gp=e=>{const t=Wp(e.token);return{...e,isExemptFromYieldProtocolFee:e.isExemptFromYieldProtocolFee||!1,token:t}},Wp=e=>{let t=null;return e.pool&&(t={id:e.pool.id,address:e.pool.address,totalShares:e.pool.totalShares,poolType:e.pool.poolType,mainIndex:e.pool.mainIndex||0},(null==e?void 0:e.pool.tokens)&&(t.tokens=e.pool.tokens.map($p))),{pool:t,latestUSDPrice:e.latestUSDPrice||void 0}},$p=e=>({address:e.address,decimals:e.decimals,symbol:e.symbol,balance:e.balance,priceRate:e.priceRate,weight:e.weight,isExemptFromYieldProtocolFee:e.isExemptFromYieldProtocolFee||void 0,token:e.token?Wp(e.token):void 0});class Hp{constructor(e){var t,a;this.skip=0,this.client=Is(e.url),this.blockHeight=e.blockHeight,this.chainId=e.chainId;const n={orderBy:pi.TotalLiquidity,orderDirection:ai.Desc,where:{totalShares:{gt:1e-12}}},o=Object.assign({},(null===(t=e.query)||void 0===t?void 0:t.args)||n),i=Object.assign({},(null===(a=e.query)||void 0===a?void 0:a.attrs)||{});this.query={args:o,attrs:i}}async fetchAllPools(){const e=Re.getInstance();e.time("fetching pools"),this.blockHeight&&(this.query.args.block={number:await this.blockHeight()});const t=new zt(this.query.args).format(new jt),{pool0:a,pool1000:n,pool2000:o}=await this.client.AllPools(t);return e.timeEnd("fetching pools"),[...a,...n,...o].map((e=>qp(e,this.chainId)))}async fetch(e){const t=Re.getInstance();t.time("fetching pools"),(null==e?void 0:e.skip)&&(this.query.args.skip=e.skip),this.blockHeight&&(this.query.args.block={number:await this.blockHeight()}),this.query.args.first=(null==e?void 0:e.first)||this.query.args.first||1e3;const a=new zt(this.query.args).format(new jt),{pools:n}=await this.client.Pools(a);return this.skip=((null==e?void 0:e.skip)||0)+n.length,t.timeEnd("fetching pools"),n.map((e=>qp(e,this.chainId)))}async find(e){return await this.findBy("id",e)}async findBy(e,t){return this.pools||(this.pools=this.fetchAllPools()),(await this.pools).find((a=>a[e]==t))}async all(){return this.pools||(this.pools=this.fetchAllPools()),this.pools}async block(){return this.blockHeight?{number:await this.blockHeight()}:void 0}async where(e){return this.pools||(this.pools=this.fetchAllPools()),(await this.pools).filter(e)}}class Kp{constructor(e,t,a,n){this.poolsSubgraph=e,this.poolsToIgnore=a,this.batchSize=n,this.skip=0,this.provider=t.provider,this.multicall=t.multicall,this.vault=t.vault}filterPools(e){return e.filter((e=>{if(!1===e.swapEnabled)return!1;if(!this.poolsToIgnore)return!0;return-1===this.poolsToIgnore.findIndex((t=>t.toLowerCase()===e.id.toLowerCase()))}))}async fetchDefault(){const e=await this.poolsSubgraph.all(),t=this.filterPools(e),a=Re.getInstance();a.time(`fetching onchain ${t.length} pools`);const n=await Ss(t,this.multicall,this.vault,this.provider,this.batchSize);return a.timeEnd(`fetching onchain ${t.length} pools`),n}async fetch(e){const t=await this.poolsSubgraph.fetch(e),a=this.filterPools(t),n=Re.getInstance();n.time(`fetching onchain ${a.length} pools`);const o=await Ss(a,this.multicall,this.vault,this.provider,this.batchSize);return n.timeEnd(`fetching onchain ${a.length} pools`),o}async find(e,t=!1){return await this.findBy("id",e,t)}async findBy(e,t,a=!1){return this.pools&&!a||(this.pools=this.fetchDefault()),(await this.pools).find((a=>a[e]==t))}async all(){return this.pools||(this.pools=this.fetchDefault()),this.pools}async where(e){return this.pools||(this.pools=this.fetchDefault()),(await this.pools).filter(e)}async refresh(e){const t=await Ss([e],this.multicall,this.vault,this.provider);if(this.pools){const a=(await this.pools).findIndex((t=>t.address===e.address));-1!==a&&(this.pools=Promise.resolve([...(await this.pools).splice(a,1),t[0]]))}return t[0]}}class Jp extends kp{async query(e){!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{pools:t}=await this.client.PoolGauges(e);return t.map(this.mapType)}mapType(e){return e}}var Xp;!function(e){e.Pool="pool",e.Sender="sender"}(Xp||(Xp={}));class Yp extends Sp{async query(e){e.orderBy||(e.orderBy=Zo.Timestamp),e.orderDirection||(e.orderDirection=ai.Asc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{joinExits:t}=await this.client.JoinExits(e);return t.map(this.mapType)}mapType(e){return{id:e.id,userAddress:e.user.id,poolId:e.pool.id,timestamp:e.timestamp,type:e.type,amounts:e.amounts,tokens:e.pool.tokensList}}async findByUser(e,t,a){return this.findAllBy(Xp.Sender,e,t,a)}async findJoins(e,t){return this.query({where:{sender:e,pool:t,type:"Join"}})}async findExits(e,t){return this.query({where:{sender:e,pool:t,type:"Exit"}})}async findByPool(e,t,a){return this.findAllBy(Xp.Pool,e,t,a)}}class jp extends Sp{async query(e){e.orderBy||(e.orderBy=ii.Balance),e.orderDirection||(e.orderDirection=ai.Desc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{poolShares:t}=await this.client.PoolShares(e);return t.map(this.mapType)}mapType(e){return{id:e.id,userAddress:e.userAddress.id,poolId:e.poolId.id,balance:e.balance}}async findByUser(e,t,a){return this.findAllBy(ke.UserAddress,e,t,a)}async findByPool(e,t,a){return this.findAllBy(ke.PoolId,e,t,a)}}class zp{constructor(e){this.tokens=e}async find(e){return this.tokens.find((t=>t.address.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.tokens.find((a=>a[e]===t))}}class Zp{constructor(e){this.tokenPrices=Object.fromEntries(Object.entries(e).map((([e,t])=>[e.toLowerCase(),t])))}async find(e){const t=e.toLowerCase(),a=this.tokenPrices[t];if(a)return a}async findBy(e,t){if("address"==e)return this.find(t)}}class Qp{constructor(e,t=1,a){var n;this.chainId=t,this.prices={},this.baseTokenAddresses=e.map(At),this.url=`${Rs(null==a?void 0:a.isDemoApiKey)}simple/token_price/${this.platform(t)}?vs_currencies=usd,eth`,this.urlNative=`${Rs(null==a?void 0:a.isDemoApiKey)}simple/price/?vs_currencies=eth,usd&ids=`,this.coingeckoApiKeyHeaderName=Ns(null==a?void 0:a.isDemoApiKey),this.apiKey=null==a?void 0:a.coingeckoApiKey,this.debouncer=new Ot(this.fetch.bind(this),200,null!==(n=null==a?void 0:a.tokensPerPriceRequest)&&void 0!==n?n:10)}async fetch(e,{signal:t}={}){var a,n,o;try{const{data:n}=await z.get(`${this.url}&contract_addresses=${e.join(",")}`,{signal:t,headers:{[this.coingeckoApiKeyHeaderName]:null!==(a=this.apiKey)&&void 0!==a?a:""}});return n}catch(e){const t=["Error fetching token prices from coingecko"];return e.isAxiosError?void 0!==(null===(n=e.response)||void 0===n?void 0:n.status)&&t.push(`with status ${null===(o=e.response)||void 0===o?void 0:o.status}`):t.push(e),Promise.reject(t.join(" "))}}fetchNative({signal:e}={}){var t;let a;!function(e){e.ETH="ethereum",e.MATIC="matic-network",e.XDAI="xdai"}(a||(a={}));let n=a.ETH;return 137===this.chainId&&(n=a.MATIC),100===this.chainId&&(n=a.XDAI),z.get(`${this.urlNative}${n}`,{signal:e,headers:{[this.coingeckoApiKeyHeaderName]:null!==(t=this.apiKey)&&void 0!==t?t:""}}).then((({data:e})=>e[n])).catch((e=>{var t;const a=["Error fetching native token from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&a.push(`with status ${e.response.status}`):a.push(e),Promise.reject(a.join(" "))})).finally((()=>{}))}find(e){const t=At(e,this.chainId);if(!this.prices[t]){if(0===Object.keys(this.prices).length)for(const e of this.baseTokenAddresses)this.prices[e]=this.debouncer.fetch(e).then((t=>t[e]));if(t===st(this.chainId).Addresses.nativeAsset.toLowerCase())return this.nativePrice||(this.prices[t]=this.fetchNative()),this.prices[t];this.prices[t]=this.debouncer.fetch(t).then((e=>e[t]))}return this.prices[t]}async findBy(e,t){if("address"==e)return this.find(t)}platform(e){switch(e){case 1:case 5:case 42:case 31337:return"ethereum";case 100:return"xdai";case 137:return"polygon-pos";case 250:return"fantom";case 1101:return"polygon-zkevm";case 8453:return"base";case 42161:return"arbitrum-one";case 43114:return"avalanche"}return"2"}}class ed{constructor(e=1,t){this.chainId=e,this.prices={},this.urlBase=`${Rs(null==t?void 0:t.isDemoApiKey)}coins/${this.platform(e)}/contract/%TOKEN_ADDRESS%/market_chart/range?vs_currency=usd`,this.apiKey=null==t?void 0:t.coingeckoApiKey,this.coingeckoApiKeyHeaderName=Ns(null==t?void 0:t.isDemoApiKey)}async fetch(e,t,{signal:a}={}){var n,o;const i=this.urlRange(e,t);try{const{data:e}=await z.get(i,{signal:a,headers:{[this.coingeckoApiKeyHeaderName]:null!==(n=this.apiKey)&&void 0!==n?n:""}});return e}catch(e){if(e.isAxiosError)throw new Error("Error fetching historical token prices from coingecko - "+e.message+" - "+(null===(o=e.response)||void 0===o?void 0:o.statusText));throw new Error("Unknown Error: "+e)}}async find(e){throw"Historic price requires point-in-time timestamp, please use findBy(address, timestamp)"}async findBy(e,t){const a=At(e,this.chainId);return{usd:`${(await this.fetch(a,t)).prices[0][1]}`}}platform(e){switch(e){case 1:case 5:case 42:case 31337:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one";case 100:return"xdai"}return"2"}urlRange(e,t){const a=t-3600,n=t+3600;return`${this.urlBase.replace("%TOKEN_ADDRESS%",e)}&from=${a}&to=${n}`}}class td{constructor(e,t=1){this.subgraphUrl=e,this.chainId=t,this.prices={},this.debouncer=new Ot(this.fetch.bind(this),200)}async fetch(e,{signal:t}={}){return e.length,z.post(this.subgraphUrl,{variables:{addresses:e},query:"query($addresses: [String!]) {\n            tokens(\n              where: {\n                id_in: $addresses\n              }\n            ) {\n              address\n              latestUSDPrice\n            }\n          }"},{signal:t}).then((e=>e.data.data)).then((({tokens:e})=>Object.fromEntries(e.map((e=>[e.address,{usd:e.latestUSDPrice||void 0}]))))).finally((()=>{e.length}))}async find(e){const t=At(e,this.chainId);return this.prices[t]||(this.prices[t]=this.debouncer.fetch(t).then((e=>e[t]))),this.prices[t]}async findBy(e,t){if("address"==e)return this.find(t)}}class ad{constructor(e,t,a){this.coingeckoRepository=e,this.subgraphRepository=t,this.aaveRates=a}async find(e){let t;try{if(t=await this.coingeckoRepository.find(e),!(null==t?void 0:t.usd))throw new Error("Price not found")}catch(a){Re.getInstance().warn(a),t=await this.subgraphRepository.find(e)}const a=await this.aaveRates.getRate(e)||1;return t&&t.usd?{...t,usd:(parseFloat(t.usd)*a).toString()}:t}async findBy(e,t){if("address"===e)return this.find(t);throw`Token price search by ${e} not implemented`}}class nd{constructor(e,t){this.coingeckoRepository=e,this.aaveRates=t}async find(e){return this.findBy(e,Math.floor(Date.now()/1e3))}async findBy(e,t){const a=await this.coingeckoRepository.findBy(e,t),n=await this.aaveRates.getRate(e)||1;return a&&a.usd?{...a,usd:(parseFloat(a.usd)*n).toString()}:a}}const od=["function claimTokens(address user, address[] tokens) returns (uint256[])","function claimToken(address user, address token) returns (uint256)"],id=new t(["function getTokensDistributedInWeek(address token, uint timestamp) view returns (uint)","function claimTokens(address user, address[] tokens) returns (uint256[])","function claimToken(address user, address token) returns (uint256)"]),sd=new t(["function totalSupply() view returns (uint)"]);class rd{constructor(e,t,a,n,o,i){this.multicall=e,this.feeDistributorAddress=t,this.balAddress=a,this.veBalAddress=n,this.bbAUsdAddress=o,this.feeDistributor=((e,t)=>new Z(e,od,t))(t,i)}async fetch(e){const t=this.getPreviousWeek(e),a=[{target:this.feeDistributorAddress,callData:id.encodeFunctionData("getTokensDistributedInWeek",[u(this.balAddress),t])},{target:this.feeDistributorAddress,callData:id.encodeFunctionData("getTokensDistributedInWeek",[u(this.bbAUsdAddress),t])},{target:this.veBalAddress,callData:sd.encodeFunctionData("totalSupply",[])}],[,n]=await this.multicall.callStatic.aggregate(a);return{balAmount:parseFloat(It(n[0],18)),bbAUsdAmount:parseFloat(It(n[1],18)),veBalSupply:parseFloat(It(n[2],18)),bbAUsdPrice:parseFloat("1.0"),balAddress:this.balAddress}}async multicallData(e){return this.data||(this.data=await this.fetch(e)),this.data}getPreviousWeek(e){const t=new Date(e);t.setUTCHours(0),t.setUTCMinutes(0),t.setUTCSeconds(0),t.setUTCMilliseconds(0);let a=t.getUTCDay()-4;return a<0&&(a+=7),a+=7,Math.floor(t.getTime()/1e3)-86400*a}async getClaimableBalances(e,t){try{const a=await this.feeDistributor.callStatic.claimTokens(e,t);return this.extractTokenBalance(t,a)}catch(e){return{}}}claimBalances(e,t){return id.encodeFunctionData("claimTokens",[e,t])}extractTokenBalance(e,t){return e.reduce(((e,a,n)=>{var o;return e[a]=null!==(o=t[n])&&void 0!==o?o:p.from(0),e}),{})}}const pd=new t(["function getProtocolFeesCollector() view returns (address)"]),dd=new t(["function getSwapFeePercentage() view returns (uint)"]);let ld;class ud{constructor(e,t){this.provider=t,this.vault=new Z(e,pd,this.provider)}async fetch(){const e=await this.vault.getProtocolFeesCollector(),t=new Z(e,dd,this.provider),a=await t.getSwapFeePercentage();return parseFloat(It(a,18))}async find(){return ld||(ld=this.fetch()),this.swapFeePercentage=await ld,this.swapFeePercentage}async findBy(){return this.find()}}const cd=new t(["function getSwapFeePercentage() view returns (uint)"]);let yd;class bd{constructor(e,t){this.multicall=e,this.protocolFeePercentagesProviderAddress=t}async fetch(){const e=[{target:this.protocolFeePercentagesProviderAddress,callData:cd.encodeFunctionData("getFeeTypePercentage",[0])},{target:this.protocolFeePercentagesProviderAddress,callData:cd.encodeFunctionData("getFeeTypePercentage",[2])}],[,t]=await this.multicall.callStatic.aggregate(e);return{swapFee:parseFloat(It(t[0],18)),yieldFee:parseFloat(It(t[2],18))}}async getFees(){return yd||(yd=this.fetch()),this.protocolFees=await yd,this.protocolFees}}class md{constructor(e="https://yield-tokens.balancer.workers.dev/"){this.url=e}async fetch(){let e={};try{e=(await z.get(this.url)).data}catch(e){Re.getInstance().warn(`Failed to fetch yield tokens: ${e}`)}return e}async find(e){const t=e.toLocaleLowerCase();return this.yields||(this.yields=this.fetch()),this.yields.then((e=>e[t]&&e[t]>0?e[t]:0))}async findBy(e,t){return"address"!=e?0:this.find(t)}}const fd=e=>`{\n  blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: ${e} }) {\n    number\n  }\n}`,Td=async(e,t)=>{const a={query:fd(t)},n=await z.post(e,a),{data:{blocks:o}}=n.data;return parseInt(o[0].number)};class hd{constructor(e){this.endpoint=e,this.blocks={}}async find(e){if("dayAgo"==e){const e=""+(Math.floor(Date.now()/1e3)-86400);return this.blocks[e]||(this.blocks={...this.blocks,[e]:Td(this.endpoint,e)}),this.blocks[e]}}async findBy(e="",t=""){}}var Id=[{chainId:1,address:"0x8888801af4d980682e47f1a9036e589479e835c5",symbol:"mph"},{chainId:1,address:"0x27054b13b1b798b345b591a4d22e6562d47ea75a",symbol:"ast"},{chainId:1,address:"0x3301ee63fb29f863f2333bd4466acb46cd8323e6",symbol:"akita"},{chainId:1,address:"0x616e8bfa43f920657b3497dbf40d6b1a02d4608d",symbol:"aurabal"},{chainId:1,address:"0xc0c293ce456ff0ed870add98a0828dd4d2903dbf",symbol:"aura"},{chainId:1,address:"0x3472a5a71965499acd81997a54bba8d852c6e53d",symbol:"badger"},{chainId:1,address:"0xba100000625a3754423978a60c9317c58a424e3d",symbol:"bal"},{chainId:1,address:"0x804cdb9116a10bb78768d3252355a1b18067bf8f",symbol:"bb-a-dai"},{chainId:1,address:"0x9210f1204b5a24742eba12f710636d76240df3d0",symbol:"bb-a-usdc"},{chainId:1,address:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c",symbol:"bb-a-usdt"},{chainId:1,address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",symbol:"bb-a-usd"},{chainId:1,address:"0x2d94aa3e47d9d5024503ca8491fce9a2fb4da198",symbol:"bank"},{chainId:1,address:"0x0d8775f648430679a709e98d2b0cb6250d2887ef",symbol:"bat"},{chainId:1,address:"0xf17e65822b568b3903685a7c9f496cf7656cc6c2",symbol:"bico"},{chainId:1,address:"0x799ebfabe77a6e34311eeee9825190b9ece32824",symbol:"btrst"},{chainId:1,address:"0x514910771af9ca656af840dff83e8264ecf986ca",symbol:"link"},{chainId:1,address:"0x3506424f91fd33084466f402d5d97f05f8e3b4af",symbol:"chz"},{chainId:1,address:"0x41e5560054824ea6b0732e656e3ad64e20e94e45",symbol:"cvc"},{chainId:1,address:"0xc00e94cb662c3520282e6f5717214004a7f26888",symbol:"comp"},{chainId:1,address:"0xdef1ca1fb7fbcdc777520aa7f396b4e015f497ab",symbol:"cow"},{chainId:1,address:"0xd533a949740bb3306d119cc777fa900ba034cd52",symbol:"crv"},{chainId:1,address:"0x6b175474e89094c44da98b954eedeac495271d0f",symbol:"dai"},{chainId:1,address:"0xf2051511b9b121394fa75b8f7d4e7424337af687",symbol:"haus"},{chainId:1,address:"0x888888435fde8e7d4c54cab67f206e4199454c60",symbol:"dfx"},{chainId:1,address:"0x798d1be841a82a273720ce31c822c61a67a601c3",symbol:"digg"},{chainId:1,address:"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c",symbol:"enj"},{chainId:1,address:"0xc18360217d8f7ab5e7c516566761ea12ce7f9d72",symbol:"ens"},{chainId:1,address:"0x4e15361fd6b4bb609fa63c81a2be19d873717870",symbol:"ftm"},{chainId:1,address:"0x956f47f50a910163d8bf957cf5846d573e7f87ca",symbol:"fei"},{chainId:1,address:"0xed1480d12be41d92f36f5f7bdd88212e381a3677",symbol:"fdt"},{chainId:1,address:"0x586aa273f262909eef8fa02d90ab65f5015e0516",symbol:"fiat"},{chainId:1,address:"0xde30da39c46104798bb5aa3fe8b9e0e1f348163f",symbol:"gtc"},{chainId:1,address:"0x900db999074d9277c5da2a43f252d74366230da0",symbol:"giv"},{chainId:1,address:"0x6810e776880c02933d47db1b9fc05908e5386b96",symbol:"gno"},{chainId:1,address:"0xba485b556399123261a5f9c95d413b4f93107407",symbol:"graviaura"},{chainId:1,address:"0x3ec8798b81485a254928b70cda1cf0a2bb0b74d7",symbol:"gro"},{chainId:1,address:"0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f",symbol:"snx"},{chainId:1,address:"0x5a98fcbea516cf06857215779fd812ca3bef1b32",symbol:"ldo"},{chainId:1,address:"0x6dea81c8171d0ba574754ef6f8b412f2ed88c54d",symbol:"lqty"},{chainId:1,address:"0x5f98805a4e8be255a32880fdec7f6728c6568ba0",symbol:"lusd"},{chainId:1,address:"0x965d79f1a1016b574a62986e13ca8ab04dfdd15c",symbol:"m2"},{chainId:1,address:"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",symbol:"mkr"},{chainId:1,address:"0xd084944d3c05cd115c09d072b9f44ba3e0e45921",symbol:"fold"},{chainId:1,address:"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",symbol:"matic"},{chainId:1,address:"0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2",symbol:"mta"},{chainId:1,address:"0x4b13006980acb09645131b91d259eaa111eaf5ba",symbol:"myc"},{chainId:1,address:"0x333a4823466879eef910a04d473505da62142069",symbol:"nation"},{chainId:1,address:"0xcfeaead4947f0705a14ec42ac3d44129e1ef3ed5",symbol:"note"},{chainId:1,address:"0x967da4048cd07ab37855c090aaf366e4ce1b9f48",symbol:"ocean"},{chainId:1,address:"0x64aa3364f17a4d01c6f1751fd97c2bd3d7e7f1d5",symbol:"ohm"},{chainId:1,address:"0xab846fb6c81370327e784ae7cbb6d6a6af6ff4bf",symbol:"pal"},{chainId:1,address:"0xcafe001067cdef266afb7eb5a286dcfd277f3de5",symbol:"psp"},{chainId:1,address:"0x68037790a0229e9ce6eaa8a99ea92964106c4703",symbol:"par"},{chainId:1,address:"0x45804880de22913dafe09f4980848ece6ecbaf78",symbol:"paxg"},{chainId:1,address:"0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed",symbol:"pnt"},{chainId:1,address:"0x9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",symbol:"poly"},{chainId:1,address:"0x43d4a3cd90ddd2f8f4f693170c9c8098163502ad",symbol:"d2d"},{chainId:1,address:"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d",symbol:"renbtc"},{chainId:1,address:"0x408e41876cccdc0f92210600ef50372656052a38",symbol:"ren"},{chainId:1,address:"0xfb5453340c03db5ade474b27e68b6a9c6b2823eb",symbol:"robot"},{chainId:1,address:"0xd33526068d116ce69f19a9ee46f0bd304f21a51f",symbol:"rpl"},{chainId:1,address:"0xae78736cd615f374d3085123a210448e74fc6393",symbol:"reth"},{chainId:1,address:"0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6",symbol:"sbtc"},{chainId:1,address:"0x476c5e26a75bd202a9683ffd34359c0cc15be0ff",symbol:"srm"},{chainId:1,address:"0x35e78b3982e87ecfd5b3f3265b601c046cdbe232",symbol:"xai"},{chainId:1,address:"0x3affcca64c2a6f4e3b6bd9c64cd2c969efd1ecbe",symbol:"dsla"},{chainId:1,address:"0xf24d8651578a55b0c119b9910759a351a3458895",symbol:"sdbal"},{chainId:1,address:"0x11c1a6b3ed6bb362954b29d3183cfa97a0c806aa",symbol:"str"},{chainId:1,address:"0x8f693ca8d21b157107184d29d398a8d082b38b76",symbol:"data"},{chainId:1,address:"0x470ebf5f030ed85fc1ed4c2d36b9dd02e77cf1b7",symbol:"temple"},{chainId:1,address:"0xa36fdbbae3c9d55a1d67ee5821d53b50b63a1ab9",symbol:"temp"},{chainId:1,address:"0xdac17f958d2ee523a2206206994597c13d831ec7",symbol:"usdt"},{chainId:1,address:"0x9c4a4204b79dd291d6b6571c5be8bbcd0622f050",symbol:"tcr"},{chainId:1,address:"0x226f7b842e0f0120b7e194d05432b3fd14773a9d",symbol:"unn"},{chainId:1,address:"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",symbol:"uni"},{chainId:1,address:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",symbol:"usdc"},{chainId:1,address:"0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321",symbol:"vita"},{chainId:1,address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",symbol:"weth"},{chainId:1,address:"0xedb171c18ce90b633db442f2a6f72874093b49ef",symbol:"wampl"},{chainId:1,address:"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",symbol:"wbtc"},{chainId:1,address:"0xf203ca1769ca8e9e8fe1da9d147db68b6c919817",symbol:"wncg"},{chainId:1,address:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",symbol:"wsteth"},{chainId:1,address:"0x79c71d3436f39ce382d0f58f1b011d88100b9d91",symbol:"xns"},{chainId:1,address:"0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e",symbol:"yfi"},{chainId:1,address:"0xbcca60bb61934080951369a648fb03df4f96263c",symbol:"ausdc"},{chainId:1,address:"0x028171bca77440897b824ca71d1c56cac55b68a3",symbol:"adai"},{chainId:1,address:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",symbol:"ausdt"},{chainId:137,address:"0x9c2c5fd7b07e95ee044ddeba0e97a665f142394f",symbol:"1inch"},{chainId:137,address:"0xd6df932a45c0f255f85145f286ea0b292b21c90b",symbol:"aave"},{chainId:137,address:"0xc3fdbadc7c795ef1d6ba111e06ff8f16a20ea539",symbol:"addy"},{chainId:137,address:"0xf84bd51eab957c2e7b7d646a3427c5a50848281d",symbol:"agar"},{chainId:137,address:"0x033d942a6b495c4071083f4cde1f17e986fe856c",symbol:"aga"},{chainId:137,address:"0x0e9b89007eee9c958c0eda24ef70723c2c93dd58",symbol:"amaticc"},{chainId:137,address:"0x034b2090b579228482520c589dbd397c53fc51cc",symbol:"vision"},{chainId:137,address:"0x2c89bbc92bd86f8075d1decc58c7f4e0107f286b",symbol:"avax"},{chainId:137,address:"0x49690541e3f6e933a9aa3cffee6010a7bb5b72d7",symbol:"axiav3"},{chainId:137,address:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",symbol:"bal"},{chainId:137,address:"0xdb7cb471dd0b49b29cab4a1c14d070f27216a0ab",symbol:"bank"},{chainId:137,address:"0xfbdd194376de19a88118e84e279b977f165d01b8",symbol:"bifi"},{chainId:137,address:"0xd6ca869a4ec9ed2c7e618062cdc45306d8dbbc14",symbol:"btc2x-fli-p"},{chainId:137,address:"0x53e0bca35ec356bd5dddfebbd1fc0fd03fabad39",symbol:"link"},{chainId:137,address:"0x172370d5cd63279efa6d502dab29171933a610af",symbol:"crv"},{chainId:137,address:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",symbol:"dai"},{chainId:137,address:"0x1d607faa0a51518a7728580c238d912747e71f7a",symbol:"data"},{chainId:137,address:"0x85955046df4668e1dd369d2de9f3aeb98dd2a369",symbol:"dpi"},{chainId:137,address:"0xe7804d91dfcde7f776c90043e03eaa6df87e6395",symbol:"dfx"},{chainId:137,address:"0xf28164a485b0b2c90639e47b0f377b4a438a16b1",symbol:"dquick"},{chainId:137,address:"0x45c32fa6df82ead1e2ef74d17b76547eddfaff89",symbol:"frax"},{chainId:137,address:"0x50b728d8d964fd00c2d0aad81718b71311fef68a",symbol:"snx"},{chainId:137,address:"0x72928d5436ff65e57f72d5566dcd3baedc649a88",symbol:"hdao"},{chainId:137,address:"0x3ad707da309f3845cd602059901e39c4dcd66473",symbol:"eth2x-fli-p"},{chainId:137,address:"0x4f025829c4b13df652f38abd2ab901185ff1e609",symbol:"ieth-fli-p"},{chainId:137,address:"0x340f412860da7b7823df372a2b59ff78b7ae6abc",symbol:"imatic-fli-p"},{chainId:137,address:"0xf287d97b6345bad3d88856b26fb7c0ab3f2c7976",symbol:"matic2x-fli-p"},{chainId:137,address:"0x130ce4e4f76c2265f94a961d70618562de0bb8d2",symbol:"ibtc-fli-p"},{chainId:137,address:"0x596ebe76e2db4470966ea395b0d063ac6197a8c5",symbol:"jrt"},{chainId:137,address:"0x3a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4",symbol:"stmatic"},{chainId:137,address:"0xf501dd45a1198c2e1b5aef5314a68b9006d842e0",symbol:"mta"},{chainId:137,address:"0xeaecc18198a475c921b24b8a6c1c1f0f5f3f7ea0",symbol:"seed"},{chainId:137,address:"0xfe712251173a2cd5f5be2b46bb528328ea3565e1",symbol:"mvi"},{chainId:137,address:"0xa3fa99a148fa48d14ed51d610c367c61876997f1",symbol:"mimatic"},{chainId:137,address:"0xa486c6bc102f409180ccb8a94ba045d39f8fc7cb",symbol:"nex"},{chainId:137,address:"0xe2aa7db6da1dae97c5f5c6914d285fbfcc32a128",symbol:"par"},{chainId:137,address:"0x580a84c73811e1839f75d86d75d88cca0c241ff4",symbol:"qi"},{chainId:137,address:"0x831753dd7087cac61ab5644b308642cc1c33dc13",symbol:"quick"},{chainId:137,address:"0xb5c064f955d8e7f38fe0460c556a72987494ee17",symbol:"quick"},{chainId:137,address:"0x00e5646f60ac6fb446f621d146b6e1886f002905",symbol:"rai"},{chainId:137,address:"0x431cd3c9ac9fc73644bf68bf5691f4b83f9e104f",symbol:"rbw"},{chainId:137,address:"0xdbf31df14b66535af65aac99c32e9ea844e14501",symbol:"renbtc"},{chainId:137,address:"0x501ace9c35e60f03a2af4d484f49f9b1efde9f40",symbol:"solace"},{chainId:137,address:"0xfa68fb4628dff1028cfec22b4162fccd0d45efb6",symbol:"maticx"},{chainId:137,address:"0x0b3f868e0be5597d5db7feb59e1cadbb0fdda50a",symbol:"sushi"},{chainId:137,address:"0xdf7837de1f2fa4631d716cf2502f8b230f1dcc32",symbol:"tel"},{chainId:137,address:"0xe6469ba6d2fd6130788e0ea9c0a0515900563b59",symbol:"ust"},{chainId:137,address:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",symbol:"usdt"},{chainId:137,address:"0x5fe2b58c013d7601147dcdd68c143a77499f5531",symbol:"grt"},{chainId:137,address:"0xbbba073c31bf03b8acf7c28ef0738decf3695683",symbol:"sand"},{chainId:137,address:"0x2934b36ca9a4b31e633c5be670c8c8b28b6aa015",symbol:"thx"},{chainId:137,address:"0x2f800db0fdb5223b3c3f354886d907a671414a7f",symbol:"bct"},{chainId:137,address:"0x2e1ad108ff1d8c782fcbbb89aad783ac49586756",symbol:"tusd"},{chainId:137,address:"0x3809dcdd5dde24b37abe64a5a339784c3323c44f",symbol:"swap"},{chainId:137,address:"0x7fbc10850cae055b27039af31bd258430e714c62",symbol:"ubt"},{chainId:137,address:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",symbol:"usdc"},{chainId:137,address:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",symbol:"weth"},{chainId:137,address:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",symbol:"wmatic"},{chainId:137,address:"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",symbol:"wbtc"},{chainId:137,address:"0x24834bbec7e39ef42f4a75eaf8e5b6486d3f0e57",symbol:"lunc"},{chainId:137,address:"0xf153eff70dc0bf3b085134928daeea248d9b30d0",symbol:"xmark"},{chainId:42161,address:"0x9f20de1fc9b161b34089cbeae888168b44b03461",symbol:"arbis"},{chainId:42161,address:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",symbol:"bal"},{chainId:42161,address:"0x031d35296154279dc1984dcd93e392b1f946737b",symbol:"cap"},{chainId:42161,address:"0xf97f4df75117a78c1a5a0dbb814af92458539fb4",symbol:"link"},{chainId:42161,address:"0x354a6da3fcde098f8389cad84b0182725c6c91de",symbol:"comp"},{chainId:42161,address:"0xf4d48ce3ee1ac3651998971541badbb9a14d7234",symbol:"cream"},{chainId:42161,address:"0x11cdb42b0eb46d95f990bedd4695a6e3fa034978",symbol:"crv"},{chainId:42161,address:"0xda10009cbd5d07dd0cecc66161fc93d7c9000da1",symbol:"dai"},{chainId:42161,address:"0x8038f3c971414fd1fc220ba727f2d4a0fc98cb65",symbol:"dht"},{chainId:42161,address:"0xf0b5ceefc89684889e5f7e0a7775bd100fcd3709",symbol:"dusd"},{chainId:42161,address:"0x6c2c06790b3e3e3c38e12ee22f8183b37a13ee55",symbol:"dpx"},{chainId:42161,address:"0x32eb7902d4134bf98a28b963d26de779af92a212",symbol:"rdpx"},{chainId:42161,address:"0xc3ae0333f0f34aa734d5493276223d95b8f9cb37",symbol:"dxd"},{chainId:42161,address:"0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a",symbol:"gmx"},{chainId:42161,address:"0xa0b862f60edef4452f25b4160f177db44deb6cf1",symbol:"gno"},{chainId:42161,address:"0xb965029343d55189c25a7f3e0c9394dc0f5d41b1",symbol:"ndx"},{chainId:42161,address:"0x539bde0d7dbd336b79148aa742883198bbf60342",symbol:"magic"},{chainId:42161,address:"0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",symbol:"mcb"},{chainId:42161,address:"0x3f56e0c36d275367b8c502090edf38289b3dea0d",symbol:"mimatic"},{chainId:42161,address:"0x965772e0e9c84b6f359c8597c891108dcf1c5b1a",symbol:"pickle"},{chainId:42161,address:"0x6694340fc020c5e6b96567843da2df01b2ce1eb6",symbol:"stg"},{chainId:42161,address:"0xd4d42f0b6def4ce0383636770ef773390d85c61a",symbol:"sushi"},{chainId:42161,address:"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",symbol:"usdt"},{chainId:42161,address:"0x23a941036ae778ac51ab04cea08ed6e2fe103614",symbol:"grt"},{chainId:42161,address:"0xa72159fc390f0e3c6d415e658264c7c4051e9b87",symbol:"tcr"},{chainId:42161,address:"0x4d15a3a2286d883af0aa1b3f21367843fac63e07",symbol:"tusd"},{chainId:42161,address:"0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0",symbol:"uni"},{chainId:42161,address:"0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",symbol:"usdc"},{chainId:42161,address:"0xa684cd057951541187f288294a1e1c2646aa2d24",symbol:"vsta"},{chainId:42161,address:"0x64343594ab9b56e99087bfa6f2335db24c2d1f17",symbol:"vst"},{chainId:42161,address:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",symbol:"weth"},{chainId:42161,address:"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",symbol:"wbtc"},{chainId:42161,address:"0x82e3a8f066a6989666b031d916c43672085b1582",symbol:"yfi"}];class _d{constructor(e,t,a,n,o){if(this.pools=new Hp({url:e.urls.subgraph,chainId:e.chainId,query:n}),this.poolsForSimulations=new ks(Is(e.urls.subgraph),t,e,void 0,n),this.poolsOnChain=new Kp(this.pools,{provider:t,multicall:e.addresses.contracts.multicall,vault:e.addresses.contracts.vault},e.poolsToIgnore,e.multicallBatchSize),this.poolShares=new jp(e.urls.subgraph,e.chainId),this.poolJoinExits=new Yp(e.urls.subgraph,e.chainId),e.urls.gaugesSubgraph&&(this.poolGauges=new Jp(e.urls.gaugesSubgraph,e.chainId),this.gaugeShares=new Op(e.urls.gaugesSubgraph,e.chainId)),e.urls.blockNumberSubgraph){this.blockNumbers=new hd(e.urls.blockNumberSubgraph);const t=async()=>{if(this.blockNumbers)return await this.blockNumbers.find("dayAgo")};this.yesterdaysPools=new Hp({url:e.urls.subgraph,chainId:e.chainId,blockHeight:t,query:n})}else if(e.averageBlockTime){const a=async()=>await t.getBlockNumber()-Math.round(86400/(e.averageBlockTime||2));this.yesterdaysPools=new Hp({url:e.urls.subgraph,chainId:e.chainId,blockHeight:a,query:n})}const i=Id.filter((t=>t.chainId==e.chainId)).map((e=>e.address)),s=new Qp(i,e.chainId,o),r=new td(e.urls.subgraph,e.chainId),p=new xt(a.contracts.multicall,e.chainId);this.tokenPrices=new ad(s,r,p);const d=new ed(e.chainId,o);this.tokenHistoricalPrices=new nd(d,p),this.tokenMeta=new zp([]),e.urls.gaugesSubgraph&&(this.liquidityGauges=new Rp(e.urls.gaugesSubgraph,a.contracts.multicall,e.addresses.contracts.gaugeController||"",e.chainId,e.addresses.contracts.gaugeControllerCheckpointer)),e.addresses.contracts.feeDistributor&&e.addresses.tokens.bal&&e.addresses.tokens.veBal&&e.addresses.tokens.bbaUsd&&(this.feeDistributor=new rd(a.contracts.multicall,e.addresses.contracts.feeDistributor,e.addresses.tokens.bal,e.addresses.tokens.veBal,e.addresses.tokens.bbaUsd,t)),this.feeCollector=new ud(e.addresses.contracts.vault,t),e.addresses.contracts.protocolFeePercentagesProvider&&(this.protocolFees=new bd(a.contracts.multicall,e.addresses.contracts.protocolFeePercentagesProvider)),this.tokenYields=new md,e.addresses.contracts.gyroConfigProxy&&(this.gyroConfigRepository=new wp(e.addresses.contracts.gyroConfigProxy,a.contracts.multicall,t))}}const gd=(e,t)=>"Stable"===e?er.LEGACY_STABLE:"ComposableStable"===e&&1===t?er.COMPOSABLE_STABLE:"ComposableStable"===e?er.COMPOSABLE_STABLE_V2:er.WEIGHTED,Pd=ar.encodeSetRelayerApproval,wd=ar.encodeGaugeWithdraw,xd=ar.encodeGaugeDeposit,Ed=ar.encodePeekChainedReferenceValue,Ad=ya.createInterface(),vd=(e,t)=>{var a;return(null===(a=e.poolType)||void 0===a?void 0:a.match(/.*Linear.*/))?Sd(e,t):[]},Sd=(e,t)=>{if(!(e.id&&t.id&&e.tokens&&t.tokens&&e.mainIndex&&t.mainIndex))throw"Missing tokens";const a=e.tokens[e.mainIndex];return[{poolId:e.id,assetIn:e.address,assetOut:a.address},{poolId:t.id,assetIn:a.address,assetOut:t.address}]},kd=async(e,t)=>{const a=await t.find(e);if(!a)throw`Pool ${e} not found`;const n=async(e,a)=>{let o=[{address:e}];const i=await t.findBy("address",e);if(i&&e!=a){const t=i.tokens.sort(Od),a=await Promise.all(t.map((({address:e})=>n(e,i.address))));o=[{address:e,id:i.id,poolType:i.poolType,poolTypeVersion:i.poolTypeVersion,mainIndex:i.mainIndex,tokens:a.flat()}]}return o},o=a.tokens.sort(Od);return{id:e,address:a.address,tokens:(await Promise.all(o.map((({address:e})=>n(e,a.address))))).flat(),poolType:a.poolType,poolTypeVersion:a.poolTypeVersion,mainIndex:a.mainIndex}},Od=(e,t)=>e.address.toLowerCase()>t.address.toLowerCase()?1:-1,Md=(e,t,a,n,o,i,r=!1,d,l,u)=>{if(!(o.id&&i.id&&o.tokens&&i.tokens&&o.poolType&&i.poolType))throw"Pool data is missing";const c=o.tokens.flatMap((({address:e})=>e)),y=i.tokens.flatMap((({address:e})=>e)),b="ComposableStable"==o.poolType&&1==o.poolTypeVersion?0:-1;let m,f=[];b>-1?(m=[{index:b,key:ar.toChainedReference(`10${b}`)}],f=[ar.toChainedReference(`20${b}`)]):(m=c.map(((e,t)=>({index:t,key:ar.toChainedReference(`10${t}`)}))),f=c.map(((e,t)=>ar.toChainedReference(`20${t}`))));const T=ar.toChainedReference("999"),h=[];let I=!1;"ComposableStable"===o.poolType&&(I=!0),u&&h.push(Pd(t,!0,u)),d&&h.push(wd(d,e,t,a)),h.push(((e,t,a,n,o=-1,i,s,r,p,d=!0)=>{let l;const u="ComposableStable"===t&&1===a;l=o>-1?re.exitExactBPTInForOneTokenOut(s,o):(u?be.exitExactBPTInForAllTokensOut:re.exitExactBPTInForTokensOut)(s);const c=gd(t,a);return ar.encodeExitPool({poolId:e,poolKind:c,sender:r,recipient:p,outputReferences:i,exitPoolRequest:{assets:n,minAmountsOut:new Array(n.length).fill("0"),userData:l,toInternalBalance:d}})})(o.id,o.poolType,o.poolTypeVersion||1,c,b,m,a,d?t:e,t));const _=((e,t,a)=>{const n=({tokens:e,mainIndex:t})=>e&&t&&e[t].address||"",o=e.flatMap(n),i=t.flatMap(n),s=o.map(((e,t)=>e&&[t,i.indexOf(e)]||[-1,-1])).map((([a,n])=>{if(-1===a||-1===n)return[];const o=e[a],i=t[n];return vd(o,i)}));return a>-1?[s[a]]:s})(o.tokens,i.tokens,b);if(_.flat().length>0){const e=_.map(((e,t)=>({path:e,inputAmount:String(m[t].key),outputReference:f[t]}))).filter((({path:e})=>e.length>0));h.push(((e,t,a,n,o=!0)=>{const i=[],r=[],d=[],l=[];a.forEach((e=>{const{path:t,inputAmount:a,outputReference:n}=e;for(let e=0;e<t.length;e++){const{poolId:n,assetIn:o,assetOut:p}=t[e];i.push(o),i.push(p),r.push(s.toString()),r.push("0");const d={poolId:n,assetInIndex:2*e,assetOutIndex:2*e+1,amount:0===e?a:"0",userData:"0x"};l.push(d)}d.push({index:2*t.length-1,key:n})}));const u={sender:e,recipient:t,fromInternalBalance:!0,toInternalBalance:o};return ar.encodeBatchSwap({swapType:In.SwapExactIn,swaps:l,assets:i,funds:u,limits:r,deadline:n||p.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:d})})(t,t,e))}const g=y.filter((e=>i.address!=e)).map((e=>{var t;const a=c.indexOf(e);return String(I&&f[a]||(null===(t=m[a])||void 0===t?void 0:t.key)||0)}));h.push(((e,t,a,n,o,i,r,p,d,l=!0)=>{const u=n.map((()=>s)),c=re.joinExactTokensInForBPTOut(o,i),y=gd(t,a);return ar.encodeJoinPool({poolId:e,kind:y,sender:p,recipient:d,joinPoolRequest:{assets:n,maxAmountsIn:u,userData:c,fromInternalBalance:l},value:"0",outputReference:r})})(i.id,i.poolType,i.poolTypeVersion||1,y,g,n,String(T),t,l?t:e,!0)),!0===r&&h.push(Ed(String(T))),l&&h.push(xd(l,t,e,String(T)));return Ad.encodeFunctionData("multicall",[h])};class Cd{constructor({relayerAddress:e,poolsRepository:t,gaugesRepository:a,provider:n}){this.getExpectedBptOut=Cd.getExpectedBptOut,this.relayerAddress=e,this.poolsRepository=t,this.gaugesRepository=a,this.provider=n}async pool2pool({user:e,from:t,to:a,balance:n,minBptOut:o="0",authorisation:i}){const s=await kd(t,this.poolsRepository),r=await kd(a,this.poolsRepository),p=Md(e,this.relayerAddress,String(n),o,s,r,"0"==o,void 0,void 0,i);return{to:this.relayerAddress,data:p}}async pool2poolWithGauges({user:e,from:t,to:a,balance:n,minBptOut:o="0",authorisation:i}){const s=await this.gaugesRepository.findBy("poolId",t),r=await this.gaugesRepository.findBy("poolId",a);if(!(s&&s.poolId&&r&&r.poolId))throw new Error("Gauge not found");const p=await kd(s.poolId,this.poolsRepository),d=await kd(r.poolId,this.poolsRepository),l=Md(e,this.relayerAddress,String(n),o,p,d,"0"==o,s.id,r.id,i);return{to:this.relayerAddress,data:l}}async gauge2gauge({user:e,from:t,to:a,balance:n,authorisation:o}){const i=[wd(t,e,this.relayerAddress,n),xd(a,this.relayerAddress,e,n)];o&&i.unshift(Pd(this.relayerAddress,!0,o));const s=Ad.encodeFunctionData("multicall",[i]);return{to:this.relayerAddress,data:s}}}Cd.getExpectedBptOut=e=>{const t=Ad.decodeFunctionResult("multicall",e)[0].slice(-2).filter((e=>"0x"!==e));return String(BigInt(t))};class Fd{constructor(e,t=new Ds(e),a=new nr(e)){this.config=e,this.sor=t,this.subgraph=a;Re.getInstance().setLoggingEnabled(!!e.enableLogging),this.networkConfig=Ms(e),this.provider=t.provider,this.balancerContracts=new lr(this.networkConfig.addresses.contracts,t.provider),this.data=new _d(this.networkConfig,t.provider,this.balancerContracts,e.subgraphQuery,e.coingecko),this.swaps=new Qs(this.config),this.relayer=new ar,this.pricing=new or(e,this.swaps),this.pools=new ap(this.networkConfig,this.data,this.balancerContracts),this.data.liquidityGauges&&(this.claimService=new ko(this.data.liquidityGauges,this.data.feeDistributor,this.networkConfig.chainId,this.contracts.multicall,this.networkConfig.addresses.contracts.gaugeClaimHelper,this.networkConfig.addresses.contracts.balancerMinter),this.migrationService=new Cd({relayerAddress:this.networkConfig.addresses.contracts.balancerRelayer,poolsRepository:this.data.pools,gaugesRepository:this.data.liquidityGauges.subgraph,provider:this.provider})),this.vaultModel=new Nr(this.data.poolsForSimulations,this.networkConfig.addresses.tokens.wrappedNativeAsset)}get contracts(){return this.balancerContracts.contracts}}var Bd,Rd;!function(e){e[e.Direct=0]="Direct",e[e.TokenIn=1]="TokenIn",e[e.TokenOut=2]="TokenOut",e[e.Middle=3]="Middle"}(Bd||(Bd={})),function(e){e[e.BatchSwap=0]="BatchSwap",e[e.Join=1]="Join",e[e.Exit=2]="Exit"}(Rd||(Rd={}));class Nd{constructor(e,t,a,n,o,i,s,r,p,d){const l=this.getActionStep(e,t,a,n);this.amountIn=this.getActionAmount(o,Rd.BatchSwap,l,s),this.hasTokenIn=this.actionHasTokenIn(l),this.hasTokenOut=this.actionHasTokenOut(l);const u=this.hasTokenOut?i:"0";this.minOut=this.getActionMinOut(u,r);const[c,y]=this.getActionOutputRef(l,n,s);this.nextOpRefKey=y,this.opRefStart=c,this.sender=this.getSender(this.hasTokenIn,p,d),this.receiver=this.getReceiver(this.hasTokenOut,p,d)}getActionAmount(e,t,a,n){let o=e;return(a===Bd.TokenOut||a===Bd.Middle&&t===Rd.Join||a===Bd.Middle&&t===Rd.Exit)&&(o=ar.toChainedReference(n-1).toString()),o}getActionOutputRef(e,t,a){let n={};return e!==Bd.TokenIn&&e!==Bd.Middle||(n=this.getOutputRef(a,t),a++),[n,a]}getActionMinOut(e,t){return Dt(p.from(e),p.from(t)).toString()}getActionStep(e,t,a,n){let o;return o=a===e&&n===t?Bd.Direct:a===e?Bd.TokenIn:n===t?Bd.TokenOut:Bd.Middle,o}getOutputRef(e,t){return{index:t,key:ar.toChainedReference(e)}}getFromInternal(e,t){return!e&&!t}getToInternal(e,t){return!e&&!t}actionHasTokenIn(e){return e===Bd.Direct||e===Bd.TokenIn}actionHasTokenOut(e){return e===Bd.Direct||e===Bd.TokenOut}getSender(e,t,a){return e?t:a}getReceiver(e,t,a){return e?t:a}getPoolKind(e){let t=0;return["MetaStable","Stable","StablePhantom"].includes(e)?t=1:"ComposableStable"===e&&(t=3),t}}class Ld extends Nd{constructor(e,t,a,n,o,i,s,r){var p;super(t,a,e.assetInIndex,e.assetOutIndex,e.amount,null!==(p=e.returnAmount)&&void 0!==p?p:"0",n,i,s,r),this.opRefKey=n,this.type=Rd.Exit,this.poolId=e.poolId,this.tokenOut=o[e.assetOutIndex],this.toInternalBalance=this.getToInternal(this.hasTokenOut),this.opRef=this.opRefStart}callData(e,t){const a=e.tokensList,n=new Le(t),[o]=n.sortTokens(a),i=this.tokenOut,s=o.findIndex((e=>e.toLowerCase()===i.toLowerCase())),r=Array(a.length).fill("0");r[s]=this.minOut;const p=this.amountIn,d={assets:o,minAmountsOut:r,userData:pe.exitExactBPTInForOneTokenOut(p,s),toInternalBalance:this.toInternalBalance,poolId:this.poolId,poolKind:this.getPoolKind(e.poolType),sender:this.sender,recipient:this.receiver,outputReferences:this.opRef.key?[this.opRef]:[],exitPoolRequest:{}},l=ar.formatExitPoolInput(d);return{params:d,encoded:ar.encodeExitPool(l)}}getAmountIn(){return this.hasTokenIn?this.amountIn:"0"}getAmountOut(){return this.hasTokenOut?this.minOut:"0"}}class Dd extends Nd{constructor(e,t,a,n,o,i,s,r){var p;super(t,a,e.assetInIndex,e.assetOutIndex,e.amount,null!==(p=e.returnAmount)&&void 0!==p?p:"0",n,i,s,r),this.opRefKey=n,this.type=Rd.Join,this.poolId=e.poolId,this.tokenIn=o[e.assetInIndex],this.fromInternal=this.getFromInternal(this.hasTokenIn),this.opRef=this.opRefStart}callData(e,t){const a=e.tokensList,n=new Le(t),[o]=n.sortTokens(a),i=this.tokenIn,s=o.findIndex((e=>e.toLowerCase()===i.toLowerCase())),r=Array(a.length).fill("0");r[s]=this.amountIn;const p=this.minOut,d=pe.joinExactTokensInForBPTOut(r,p),l={poolId:this.poolId,sender:this.sender,recipient:this.receiver,kind:this.getPoolKind(e.poolType),joinPoolRequest:{assets:o,maxAmountsIn:r,userData:d,fromInternalBalance:this.fromInternal},value:"0",outputReference:this.opRef.key?this.opRef.key.toString():"0"};return{params:l,encoded:ar.encodeJoinPool(l)}}getAmountIn(){return this.hasTokenIn?this.amountIn:"0"}getAmountOut(){return this.hasTokenOut?this.minOut:"0"}}class Ud extends Nd{constructor(e,t,a,n,o,i,s,r,p){var d;super(t,a,e.assetInIndex,e.assetOutIndex,e.amount,null!==(d=e.returnAmount)&&void 0!==d?d:"0",n,i,r,p),this.mainTokenInIndex=t,this.mainTokenOutIndex=a,this.opRefKey=n,this.assets=o,this.slippage=i,this.pools=s,this.user=r,this.relayer=p,this.approveTokens=[],this.opRef=[],this.type=Rd.BatchSwap,this.swaps=[{...e,amount:this.amountIn}];const l=this.isBpt(s,o[e.assetInIndex]);l&&this.approveTokens.push(o[e.assetInIndex]),this.fromInternal=this.getFromInternal(this.hasTokenIn,l);const u=this.isBpt(s,o[e.assetOutIndex]);this.toInternal=this.getToInternal(this.hasTokenOut,u),this.limits=this.getLimits(o,e.assetInIndex,e.assetOutIndex,e.amount,this.hasTokenIn,this.hasTokenOut,this.minOut),this.opRefStart.index&&this.opRef.push(this.opRefStart)}getLimits(e,t,a,n,o,i,r){const d=e.map((()=>p.from(0)));return d[t]=o?p.from(n):s,i&&(d[a]=p.from(r).mul(-1)),d}updateLimits(e,t){t.hasTokenIn&&(e[t.swaps[0].assetInIndex]=e[t.swaps[0].assetInIndex].add(t.amountIn)),t.hasTokenOut&&(e[t.swaps[0].assetOutIndex]=e[t.swaps[0].assetOutIndex].sub(t.minOut))}isChainedSwap(e){return this.opRef[this.swaps.length-1]&&this.toInternal===e.fromInternal&&this.receiver===e.sender&&this.opRef[this.swaps.length-1].key.toString()===e.amountIn}canAddSwap(e){return!!this.isChainedSwap(e)||e.fromInternal===this.fromInternal&&e.toInternal===this.toInternal&&e.receiver===this.receiver&&e.sender===this.sender}callData(){const e=[];for(const t of this.approveTokens){const a=ar.encodeApproveVault(t,i.toString());e.push(a)}const t={sender:this.sender,recipient:this.receiver,fromInternalBalance:this.fromInternal,toInternalBalance:this.toInternal},a={swapType:In.SwapExactIn,swaps:this.swaps,assets:this.assets,funds:t,limits:this.limits.map((e=>e.toString())),deadline:p.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:this.opRef},n=ar.encodeBatchSwap(a);return e.push(n),{params:a,encoded:e}}getAmountIn(){return this.limits[this.mainTokenInIndex].toString()}getAmountOut(){return this.limits[this.mainTokenOutIndex].abs().toString()}copy(){return new Ud(this.swaps[0],this.mainTokenInIndex,this.mainTokenOutIndex,this.opRefKey,this.assets,this.slippage,this.pools,this.user,this.relayer)}addSwap(e){const t=this.isChainedSwap(e);this.swaps.push(e.swaps[0]),this.approveTokens=[...new Set([...this.approveTokens,...e.approveTokens])],this.toInternal=e.toInternal,this.receiver=e.receiver,this.hasTokenOut=e.hasTokenOut,this.minOut=e.minOut,this.opRef=[...this.opRef,...e.opRef],t||(this.amountIn=p.from(this.amountIn).add(e.amountIn).toString()),this.updateLimits(this.limits,e)}isBpt(e,t){return e.some((e=>e.address.toLowerCase()===t.toLowerCase()))}}function Vd(e){const t=function(e){const t=[],a=[],n=[];for(const o of e)o.type===Rd.Exit||o.type===Rd.Join?o.hasTokenIn?t.push(o):o.hasTokenOut?a.push(o):n.push(o):n.push(o);return[...t,...n,...a]}(e);return function(e){const t=[];let a;for(const n of e)n.type===Rd.BatchSwap?a?a.canAddSwap(n)?a.addSwap(n):(t.push(a),a=n.copy()):a=n.copy():(a&&(t.push(a),a=void 0),t.push(n));return a&&t.push(a),t}(t)}const qd=new t([{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}]);function Gd(e){Re.getInstance()}function Wd(e,t,a){return e!==V.SwapExactOut&&t.toLowerCase()!==o.toLowerCase()&&a.toLowerCase()!==o.toLowerCase()}function $d(e,t,a){if("Weighted"!==a)return!1;const n=t[e.assetOutIndex],o=Ie(e.poolId);return n.toLowerCase()===o.toLowerCase()}function Hd(e,t,a){if("Weighted"!==a)return!1;const n=t[e.assetInIndex],o=Ie(e.poolId);return n.toLowerCase()===o.toLowerCase()}function Kd(e,t,a){return t.some((t=>function(e,t,a){const n=e.find((e=>e.id===t.poolId));return"Weighted"===(null==n?void 0:n.poolType)&&[a[t.assetInIndex],a[t.assetOutIndex]].includes(n.address)}(e,t,a)))}function Jd(e,t,a,n,o,i,s){const r=function(e,t,a,n,o,i,s,r){var p;const d=n.findIndex((t=>t.toLowerCase()===e.toLowerCase())),l=n.findIndex((e=>e.toLowerCase()===t.toLowerCase())),u=[];let c=0;for(const e of a){const t=null===(p=i.find((t=>t.id===e.poolId)))||void 0===p?void 0:p.poolType;if($d(e,n,t)){const t=new Dd(e,d,l,c,n,o,s,r);c=t.nextOpRefKey,u.push(t)}else{if(!Hd(e,n,t)){const t=new Ud(e,d,l,c,n,o,i,s,r);c=t.nextOpRefKey,u.push(t);continue}{const t=new Ld(e,d,l,c,n,o,s,r);c=t.nextOpRefKey,u.push(t)}}}return u}(e.tokenIn,e.tokenOut,e.swaps,e.tokenAddresses,i,t,a,n),d=Vd(r),l=[],u=[];s&&l.push(ar.encodeSetRelayerApproval(n,!0,s));for(const e of d){if(e.type===Rd.Exit||e.type===Rd.Join){const a=t.find((t=>t.id===e.poolId));if(void 0===a)throw new vn(An.NO_POOL_DATA);const{params:n,encoded:i}=e.callData(a,o);l.push(i),u.push(n)}if(e.type===Rd.BatchSwap){const{params:t,encoded:a}=e.callData();l.push(...a),u.push(t)}}!function(e,t,a,n){const o=e.reduce(((e=p.from(0),t)=>e.add(t))),i=t.reduce(((e=p.from(0),t)=>e.add(t)));Gd(o.toString()),Gd(a.swapAmount.toString()),Gd(i.toString()),Gd(Dt(a.returnAmount,p.from(n)).toString()),Gd(a.returnAmount.toString());const s=i.sub(Dt(a.returnAmount,p.from(n)));if(!o.eq(a.swapAmount)||!s.lt("3"))throw new vn(An.RELAY_SWAP_AMOUNTS)}(d.map((e=>p.from(e.getAmountIn()))),d.map((e=>p.from(e.getAmountOut()))),e,i);return{to:n,data:qd.encodeFunctionData("multicall",[l]),rawCalls:l,inputs:u}}export{at as AMP_PRECISION,we as APR_THRESHOLD,ta as AaveLinearPoolFactory__factory,Qt as AaveLinearPool__factory,xt as AaveRates,na as AaveWrapping__factory,Le as AssetHelpers,ia as Authoriser__factory,xn as BALANCER_NETWORK_CONFIG,Yt as BalancerAPIArgsFormatter,vn as BalancerError,An as BalancerErrorCode,Ue as BalancerErrors,ra as BalancerHelpers__factory,We as BalancerMinterAuthorization,da as BalancerMinter__factory,ua as BalancerPoolDataQueries__factory,ya as BalancerRelayer__factory,Fd as BalancerSDK,se as BasePoolEncoder,ma as BatchRelayerLibrary__factory,hd as BlockNumberRepository,ed as CoingeckoHistoricalPriceRepository,Qp as CoingeckoPriceRepository,be as ComposableStablePoolEncoder,ye as ComposableStablePoolExitKind,Ia as ComposableStablePoolFactory__factory,ce as ComposableStablePoolJoinKind,Ta as ComposableStablePool__factory,ga as ConvergentCurvePool__factory,_d as Data,Ot as Debouncer,wa as ERC20__factory,va as ERC4626LinearPoolFactory__factory,Ea as ERC4626LinearPool__factory,Ma as EulerLinearPoolFactory__factory,ka as EulerLinearPool__factory,Fa as FXPool__factory,ud as FeeCollectorRepository,rd as FeeDistributorRepository,Ra as GaugeClaimHelper__factory,Ap as GaugeControllerMulticallRepository,Oe as GaugeShareAttributes,Op as GaugeSharesRepository,Ua as GearboxLinearPoolFactory__factory,La as GearboxLinearPool__factory,zt as GraphQLArgsBuilder,qa as GyroConfig__factory,bn as GyroEV2__factory,nd as HistoricalPriceProvider,Wa as LidoRelayer__factory,Ha as LinearPool__factory,go as Liquidity,Rp as LiquidityGaugeSubgraphRPCProvider,Ja as LiquidityGaugeV5__factory,Fp as LiquidityGaugesMulticallRepository,Bp as LiquidityGaugesSubgraphRepository,de as ManagedPoolEncoder,Cd as Migrations,za as Multicall3__factory,Ya as Multicall__factory,Pe as Network,ve as POOLS,Fe as PoolBalanceOpKind,Se as PoolGaugesAttributes,Jp as PoolGaugesRepository,Xp as PoolJoinExitAttributes,Yp as PoolJoinExitRepository,er as PoolKind,ke as PoolShareAttributes,jp as PoolSharesRepository,Me as PoolSpecialization,Be as PoolType,ap as Pools,Dp as PoolsBalancerAPIRepository,Up as PoolsFallbackRepository,Vp as PoolsStaticRepository,Kp as PoolsSubgraphOnChainRepository,Hp as PoolsSubgraphRepository,bd as ProtocolFeesProvider,Yr as ProtocolId,ar as Relayer,qe as RelayerAction,Ge as RelayerAuthorization,xe as SHALLOW_COMPOSABLE_STABLE_BUFFER,qr as SimulationType,Ds as Sor,ae as StablePhantomPoolJoinKind,re as StablePoolEncoder,ne as StablePoolExitKind,te as StablePoolJoinKind,Qa as StablePool__factory,tn as StaticATokenRateProvider__factory,Zp as StaticTokenPriceProvider,zp as StaticTokenProvider,nr as Subgraph,jt as SubgraphArgsFormatter,td as SubgraphPriceRepository,In as SwapType,Qs as Swaps,ad as TokenPriceProvider,md as TokenYieldsRepository,Ce as UserBalanceOpKind,nn as Vault__factory,fn as VeBal__factory,hn as VeDelegationProxy__factory,pe as WeightedPoolEncoder,ie as WeightedPoolExitKind,pn as WeightedPoolFactory__factory,oe as WeightedPoolJoinKind,sn as WeightedPool__factory,cn as YearnLinearPoolFactory__factory,ln as YearnLinearPool__factory,Ve as accountToAddress,Ut as addSlippage,vt as addressMapIn,hr as balEmissions,Rt as bn,Jd as buildRelayerCalls,Wd as canUseJoinExit,_n as factories,vs as fetchOnChainPoolData,Jt as findEventInReceiptLogs,Ct as formatFixed,Bt as formatFromBigInt18,kt as getEthValue,gn as getLimitsForSlippage,Ss as getOnChainBalances,Ie as getPoolAddress,ge as getPoolNonce,_e as getPoolSpecialization,Xt as getRandomBytes32,qt as insert,Ht as isLinearish,ue as isNormalizedWeights,Vt as isSameAddress,Lt as mulSlippage,Mt as parseFixed,nt as parsePoolInfo,Ft as parseToBigInt18,Wt as removeItem,$t as reorderArrays,Gt as replace,$e as signPermit,Kd as someJoinExit,he as splitPoolId,Dt as subSlippage,le as toNormalizedWeights,At as tokenAddressForPricing,Et as tokensToTokenPrices,Kt as truncateAddresses,St as unwrapToken,Pt as wrappedTokensMap,gt as yieldTokens};
//# sourceMappingURL=index.esm.js.map
